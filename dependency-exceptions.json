[
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.Yaml\\$SilentEmitter\\.emit\\:\\(Lorg\\/yaml\\/snakeyaml\\/events\\/Event\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.constructor\\.Constructor\\$ConstructMapping\\.getProperty\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Lorg\\/yaml\\/snakeyaml\\/introspector\\/Property\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.constructor\\.Constructor\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.constructor\\.Constructor\\.getClassForName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.constructor\\.CustomClassLoaderConstructor\\.getClassForName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitable\\.emit\\:\\(Lorg\\/yaml\\/snakeyaml\\/events\\/Event\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectBlockMappingKey\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectBlockMappingSimpleValue\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectBlockMappingValue\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectBlockSequenceItem\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectDocumentEnd\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectDocumentRoot\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectDocumentStart\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFirstBlockMappingKey\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFirstBlockSequenceItem\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFirstDocumentStart\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFirstFlowMappingKey\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFirstFlowSequenceItem\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFlowMappingKey\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFlowMappingSimpleValue\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFlowMappingValue\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFlowSequenceItem\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectNothing\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectStreamStart\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.emit\\:\\(Lorg\\/yaml\\/snakeyaml\\/events\\/Event\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectNode\\:\\(ZZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectAlias\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectScalar\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectFlowSequence\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectFlowMapping\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectBlockSequence\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectBlockMapping\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.processAnchor\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.processTag\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.processScalar\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.flushStream\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeStreamEnd\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeIndicator\\:\\(Ljava\\/lang\\/String\\;ZZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeIndent\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeWhitespace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeLineBreak\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeVersionDirective\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeTagDirective\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeSingleQuoted\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeDoubleQuoted\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeFolded\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeLiteral\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writePlain\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.access\\$1600\\:\\(Lorg\\/yaml\\/snakeyaml\\/emitter\\/Emitter\\;ZZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.access\\$3300\\:\\(Lorg\\/yaml\\/snakeyaml\\/emitter\\/Emitter\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.EmitterState\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.extensions\\.compactnotation\\.CompactConstructor\\.createInstance\\:\\(Lorg\\/yaml\\/snakeyaml\\/nodes\\/ScalarNode\\;Lorg\\/yaml\\/snakeyaml\\/extensions\\/compactnotation\\/CompactData\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.extensions\\.compactnotation\\.CompactConstructor\\.setProperties\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.extensions\\.compactnotation\\.CompactConstructor\\.getSequencePropertyName\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.extensions\\.compactnotation\\.PackageCompactConstructor\\.getClassForName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.external\\.com\\.google\\.gdata\\.util\\.common\\.base\\.UnicodeEscaper\\$1\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.external\\.com\\.google\\.gdata\\.util\\.common\\.base\\.UnicodeEscaper\\$1\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.external\\.com\\.google\\.gdata\\.util\\.common\\.base\\.UnicodeEscaper\\$1\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.external\\.com\\.google\\.gdata\\.util\\.common\\.base\\.UnicodeEscaper\\$1\\.outputChars\\:\\(\\[CI\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.FieldProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.MethodProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.MissingProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.Property\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.PropertyUtils\\.getPropertiesMap\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/yaml\\/snakeyaml\\/introspector\\/BeanAccess\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.PropertyUtils\\.getProperties\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.PropertyUtils\\.getProperties\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/yaml\\/snakeyaml\\/introspector\\/BeanAccess\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.PropertyUtils\\.createPropertySet\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/yaml\\/snakeyaml\\/introspector\\/BeanAccess\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.PropertyUtils\\.getProperty\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Lorg\\/yaml\\/snakeyaml\\/introspector\\/Property\\;"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.PropertyUtils\\.getProperty\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Lorg\\/yaml\\/snakeyaml\\/introspector\\/BeanAccess\\;\\)Lorg\\/yaml\\/snakeyaml\\/introspector\\/Property\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.reader\\.UnicodeReader\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.reader\\.UnicodeReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.reader\\.UnicodeReader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.representer\\.Representer\\.getProperties\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.serializer\\.Serializer\\.open\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.serializer\\.Serializer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.serializer\\.Serializer\\.serialize\\:\\(Lorg\\/yaml\\/snakeyaml\\/nodes\\/Node\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.serializer\\.Serializer\\.serializeNode\\:\\(Lorg\\/yaml\\/snakeyaml\\/nodes\\/Node\\;Lorg\\/yaml\\/snakeyaml\\/nodes\\/Node\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.nio.charset.CharacterCodingException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.util\\.UriEncoder\\.decode\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.decode\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/util\\/ByteArrayBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.\\_reportInvalidBase64\\:\\(CILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.\\_reportBase64EOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variants\\.valueOf\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.hasFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.hasJSONFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[C\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[CII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/DataInput\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/File\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/DataOutput\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/DataOutput\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonGenerator\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(\\[CIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Z\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(Ljava\\/io\\/DataInput\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createGenerator\\:\\(Ljava\\/io\\/Writer\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createUTF8Generator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createWriter\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/DataInput\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/DataInput\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/Writer\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_optimizedStreamFromURL\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartArray\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeFieldId\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArray\\:\\(\\[III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArray\\:\\(\\[JII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArray\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeEmbeddedObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectRef\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeTypeId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStringField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBooleanField\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNullField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinaryField\\:\\(Ljava\\/lang\\/String\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArrayFieldStart\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectFieldStart\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeOmittedField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.copyCurrentEvent\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.copyCurrentStructure\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.\\_reportError\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.\\_writeSimpleObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getByteValue\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getShortValue\\:\\(\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBooleanValue\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBinaryValue\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readBinaryValue\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getObjectId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTypeId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValueAs\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValueAs\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValuesAs\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValuesAs\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValueAsTree\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonPointer\\.compile\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonPointer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.writeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.treeToValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeRootValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeStartObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeEndObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeObjectEntrySeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeObjectFieldValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeStartArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeEndArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeArrayValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.beforeArrayValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.beforeObjectEntries\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.writeQuotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.writeUnquotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.putQuotedUTF8\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.putUnquotedUTF8\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.TreeCodec\\.readTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.TreeCodec\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.TreeNode\\.at\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.\\_asString\\:\\(Ljava\\/math\\/BigDecimal\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.\\_decodeSurrogate\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_handleEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_eofAsNextChar\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_reportMismatchedEndMarker\\:\\(IC\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseNumericValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseSlowFloat\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseSlowInt\\:\\(I\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToInt\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToLong\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToBigInteger\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToDouble\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToBigDecimal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.reportUnexpectedNumberChar\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.reportInvalidNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.reportOverflowInt\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.reportOverflowLong\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_decodeBase64Escape\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_decodeBase64Escape\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;CI\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.reportInvalidBase64Char\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;II\\)Ljava\\/lang\\/IllegalArgumentException\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.reportInvalidBase64Char\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;IILjava\\/lang\\/String\\;\\)Ljava\\/lang\\/IllegalArgumentException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.loadMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_handleEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_decodeBase64\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/util\\/ByteArrayBuilder\\;Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportUnexpectedChar\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOFInValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOF\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOFInValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOF\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportMissingRootWS\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_throwInvalidSpace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_throwUnquotedSpace\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_handleUnrecognizedCharacterEscape\\:\\(C\\)C"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportError\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_wrapError\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartArray\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeOmittedField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeObjectId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeObjectRef\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeTypeId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkParentPath\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkPropertyParentPath\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkBinaryWrite\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkRawValueWrite\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.\\_nextToken2\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.\\_nextTokenWithBuffering\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.\\_nextBuffered\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getBooleanValue\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getByteValue\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getShortValue\\:\\(\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilter\\.includeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Z"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.setFieldName\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.writePath\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.writeImmediatePath\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.\\_writePath\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.closeArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.closeObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.findFormat\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.findFormat\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.findFormat\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.\\_findFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\$Std\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatMatcher\\.createParserWithMatch\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\$Std\\.hasMoreBytes\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\$Std\\.nextByte\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\.hasMoreBytes\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\.nextByte\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.DataOutputAsStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.DataOutputAsStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.DataOutputAsStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\[BII\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/DataInput\\;\\)Ljava\\/io\\/DataInput\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/Reader\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseDouble\\:\\(Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseBigDecimal\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseBigDecimal\\:\\(\\[C\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseBigDecimal\\:\\(\\[CII\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.OutputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.OutputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/Writer\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SegmentedStringWriter\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SegmentedStringWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SegmentedStringWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.writeQuotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.writeUnquotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportUnexpectedEOF\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportInvalid\\:\\(IILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.loadMore\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportBounds\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportStrangeStream\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.append\\:\\(C\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(\\[C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.convertSurrogate\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.illegalSurrogate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.detectEncoding\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.skipUTF8BOM\\:\\(Ljava\\/io\\/DataInput\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.constructReader\\:\\(\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.constructParser\\:\\(ILcom\\/fasterxml\\/jackson\\/core\\/ObjectCodec\\;Lcom\\/fasterxml\\/jackson\\/core\\/sym\\/ByteQuadsCanonicalizer\\;Lcom\\/fasterxml\\/jackson\\/core\\/sym\\/CharsToNameCanonicalizer\\;I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.hasJSONFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.tryMatch\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.skipSpace\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.skipSpace\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.handleBOM\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.checkUTF32\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.reportWeirdUCS4\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.ensureLoaded\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.DupDetector\\.isDup\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonGeneratorImpl\\.writeStringField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonGeneratorImpl\\.\\_verifyPrettyValueWrite\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonGeneratorImpl\\.\\_reportCantWriteValueExpectName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonReadContext\\.setCurrentName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonReadContext\\.\\_checkDup\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/json\\/DupDetector\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonWriteContext\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonWriteContext\\.\\_checkDup\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/json\\/DupDetector\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getNextChar\\:\\(Ljava\\/lang\\/String\\;\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getNextChar\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_loadMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_readBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_isNextTokenNameYes\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_isNextTokenNameMaybe\\:\\(ILjava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_nextTokenNotInObject\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parsePosNumber\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseFloat\\:\\(IIIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseNegNumber\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseNumber2\\:\\(ZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_verifyNoLeadingZeroes\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_verifyNLZ2\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleInvalidNumberStart\\:\\(IZ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_verifyRootSpace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseName2\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleOddName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseAposName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleOddValue\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleApos\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleOddName2\\:\\(II\\[I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_finishString2\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipCR\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipColon\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipColon2\\:\\(Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipColonFast\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipComma\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipAfterComma2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipWSOrEnd\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipWSOrEnd2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipCComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipYAMLComment\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchTrue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchFalse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchToken\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_decodeBase64\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_readBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_nextTokenNotInObject\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parsePosNumber\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseNegNumber\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleLeadingZeroes\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseFloat\\:\\(\\[CIIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_verifyRootSpace\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseMediumName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseMediumName2\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseLongName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseName\\:\\(IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseEscapedName\\:\\(\\[IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleOddName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseAposName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(\\[IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.addName\\:\\(\\[III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_finishAndReturnString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_finishString2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleUnexpectedValue\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleApos\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleInvalidNumberStart\\:\\(IZ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_matchToken\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_checkMatchEnd\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipWS\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipWSComment\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipColon\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipColon2\\:\\(IZ\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipCComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipYAMLComment\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeCharForError\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeUtf8\\_2\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeUtf8\\_3\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeUtf8\\_4\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipUtf8\\_2\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipUtf8\\_3\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipUtf8\\_4\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidToken\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidToken\\:\\(ILjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidInitial\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidOther\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeBase64\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUnq\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writePPFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writePPFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRawValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeSegmentedRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeRawSegment\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedShort\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedLong\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBytes\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBytes\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegments\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegments\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegments\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment2\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegmentASCII2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegmentASCII2\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeCustomStringSegment2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeCustomStringSegment2\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeCustomEscape\\:\\(\\[BILcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_handleLongCustomEscape\\:\\(\\[BII\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUTF8Segments\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUTF8Segment\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUTF8Segment2\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_readMore\\:\\(Ljava\\/io\\/InputStream\\;\\[BIII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_outputRawMultiByteChar\\:\\(I\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_outputSurrogates\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_outputMultiByteChar\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeGenericEscape\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_loadMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_loadToHaveAtLeast\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_readBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_nextTokenNotInObject\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipColonFast\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_isNextTokenNameYes\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_isNextTokenNameMaybe\\:\\(ILcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parsePosNumber\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseNegNumber\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseNumber2\\:\\(\\[CIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_verifyNoLeadingZeroes\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseFloat\\:\\(\\[CIIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_verifyRootSpace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseMediumName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseMediumName2\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseLongName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.slowParseName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseName\\:\\(IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseEscapedName\\:\\(\\[IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleOddName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseAposName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(\\[IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.addName\\:\\(\\[III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_finishAndReturnString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_finishString2\\:\\(\\[CI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleUnexpectedValue\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleApos\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleInvalidNumberStart\\:\\(IZ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchToken\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchToken2\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_checkMatchEnd\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWS\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWS2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWSOrEnd\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWSOrEnd2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipColon\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipColon2\\:\\(Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipCComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipYAMLComment\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeCharForError\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_2\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_3\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_3fast\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_4\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipUtf8\\_2\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipUtf8\\_3\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipUtf8\\_4\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipCR\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextByte\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidInitial\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidOther\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidOther\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeBase64\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeFieldName\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writePPFieldName\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writePPFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRawLong\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedShort\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedLong\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeString2\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeLongString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeSegment\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringASCII\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeSegmentASCII\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringASCII\\:\\(\\[CIII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringCustom\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeSegmentCustom\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringCustom\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_readMore\\:\\(Ljava\\/io\\/InputStream\\;\\[BIII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_prependOrWriteCharacterEscape\\:\\(CI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_prependOrWriteCharacterEscape\\:\\(\\[CIICI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_appendCharacterEscape\\:\\(CI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultIndenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\$FixedSpaceIndenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\$Indenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\$NopIndenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeRootValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeStartObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.beforeObjectEntries\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeObjectFieldValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeObjectEntrySeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeEndObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeStartArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.beforeArrayValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeArrayValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeEndArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartArray\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeFieldId\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeArray\\:\\(\\[III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeArray\\:\\(\\[JII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeArray\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeOmittedField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeObjectId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeObjectRef\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeTypeId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeEmbeddedObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.copyCurrentEvent\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.copyCurrentStructure\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getBooleanValue\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getByteValue\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getShortValue\\:\\(\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getObjectId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTypeId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserSequence\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserSequence\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserSequence\\.switchAndReturnNext\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeRootValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeStartObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.beforeObjectEntries\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeObjectFieldValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeObjectEntrySeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeEndObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeStartArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.beforeArrayValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeArrayValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeEndArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.TextBuffer\\.contentsAsDecimal\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.TextBuffer\\.contentsAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.TextBuffer\\.contentsToWriter\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.hasFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/smile\\/SmileParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/smile\\/SmileParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/smile\\/SmileParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/smile\\/SmileParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/smile\\/SmileParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/smile\\/SmileGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/smile\\/SmileGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_createParser\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/smile\\/SmileParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_createParser\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_createParser\\:\\(\\[CIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Z\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_createParser\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/smile\\/SmileParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_createGenerator\\:\\(Ljava\\/io\\/Writer\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_createUTF8Generator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_createWriter\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_nonByteSource\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_nonByteTarget\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/smile\\/SmileGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_createParser\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.\\_createParser\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileFactory\\.createParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeHeader\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeStringField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeRaw\\:\\(B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeBytes\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeStartArray\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeArray\\:\\(\\[III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeArray\\:\\(\\[JII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeArray\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeNonShortFieldName\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeLongAsciiFieldName\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeFieldNameUnicode\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeSharedNameReference\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeSharedStringValueReference\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeNonSharedString\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeBinary\\:\\(Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeNumberNoChecks\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeNumberNoChecks\\:\\(IJ\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeNumberNoChecks\\:\\(ID\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeIntegralNumber\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeDecimalNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_shortUTF8Encode\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_shortUTF8Encode2\\:\\(\\[CIII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_shortUTF8Encode\\:\\(Ljava\\/lang\\/String\\;II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_shortUTF8Encode2\\:\\(Ljava\\/lang\\/String\\;III\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_mediumUTF8Encode\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_mediumUTF8Encode\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_convertSurrogate\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_throwIllegalSurrogate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_ensureRoomForOutput\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeByte\\:\\(B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeBytes\\:\\(BB\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeBytes\\:\\(BBB\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeBytes\\:\\(BBBB\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeBytes\\:\\(BBBBB\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeBytes\\:\\(BBBBBB\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeBytes\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeBytes\\:\\(Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeBytesLong\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writePositiveVInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_writeSignedVInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_write7BitBinaryWithLength\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_write7BitBinaryWithLength\\:\\(Ljava\\/io\\/InputStream\\;I\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_readMore\\:\\(Ljava\\/io\\/InputStream\\;\\[BIII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileGenerator\\.\\_flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.handleSignature\\:\\(ZZ\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_nextByteGuaranteed\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_loadMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_loadToHaveAtLeast\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_handleSharedString\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_addSeenStringValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.nextFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_readBinaryEncoded\\:\\(Ljava\\/io\\/OutputStream\\;I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_handleFieldName\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_decodeShortAsciiName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_decodeShortUnicodeName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_decodeLongUnicodeName\\:\\(\\[III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_handleLongFieldName\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_findDecodedFromSymbols\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_findDecodedLong\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_parseNumericValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_parseIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_finishNumberToken\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_finishInt\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_finishIntSlow\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_finishLong\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_finishLongSlow\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_fourBytesToInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_fourBytesToIntSlow\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_finishBigInteger\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_finishFloat\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_finishDouble\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_finishBigDecimal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_readUnsignedVInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_read7BitBinaryWithLength\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_decodeShortAsciiValue\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_decodeShortUnicodeValue\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_decodeLongAscii\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_decodeLongUnicode\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_finishRawBinary\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_skipIncomplete\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_skipBytes\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_skip7BitBinary\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_decodeUtf8\\_2\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_decodeUtf8\\_3\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_decodeUtf8\\_3fast\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_decodeUtf8\\_4\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_reportInvalidSharedName\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_reportInvalidSharedStringValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_reportInvalidChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_reportInvalidInitial\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_reportInvalidOther\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_reportInvalidOther\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParser\\.\\_eofAsNextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParserBootstrapper\\.constructParser\\:\\(IIILcom\\/fasterxml\\/jackson\\/core\\/ObjectCodec\\;Lcom\\/fasterxml\\/jackson\\/core\\/sym\\/ByteQuadsCanonicalizer\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/smile\\/SmileParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.SmileParserBootstrapper\\.hasSmileFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingByteArrayFeeder\\.feedInput\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingByteBufferFeeder\\.feedInput\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParser\\.peekNextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.handleSignature\\:\\(ZZ\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_loadToHaveAtLeast\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_handleSharedString\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_addSeenStringValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.feedInput\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.peekNextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextInt\\:\\(II\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextLong\\:\\(IJ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextBigInt\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextFloat\\:\\(II\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextDouble\\:\\(IJ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextBigDecimal\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_handleHeader\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextShortAscii\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextShortUnicode\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextLongAscii\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextLongUnicode\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextLongSharedString\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextRawBinary\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_nextQuotedBinary\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_handleFieldName\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_decodeShortAsciiName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_decodeShortUnicodeName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_decodeLongUnicodeName\\:\\(\\[III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_handleLongFieldName\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_findDecodedFromSymbols\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_findDecodedMedium\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_parseNumericValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_finishToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_reportInvalidSharedName\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_reportInvalidSharedStringValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_reportInvalidChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_reportInvalidInitial\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_reportInvalidOther\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.smile\\.async\\.NonBlockingParserImpl\\.\\_reportInvalidOther\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.read\\:\\(\\[C\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.readBytes\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.readBytesAt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.reportInvalidInitial\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.reportInvalidOther\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.reportUnexpectedEOF\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.loadMore\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.reportBounds\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Reader\\.reportStrangeStream\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Writer\\.append\\:\\(C\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Writer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Writer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Writer\\.write\\:\\(\\[C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Writer\\.write\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Writer\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Writer\\.write\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Writer\\.write\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Writer\\.convertSurrogate\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Writer\\.throwIllegal\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.UTF8Writer\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.hasFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(\\[C\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(\\[CII\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createGenerator\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createGenerator\\:\\(Ljava\\/io\\/File\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createParser\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createParser\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createParser\\:\\(\\[CIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Z\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createParser\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createGenerator\\:\\(Ljava\\/io\\/Writer\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createUTF8Generator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/yaml\\/YAMLGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createWriter\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createReader\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createReader\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createUTF8Generator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createGenerator\\:\\(Ljava\\/io\\/Writer\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createParser\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createParser\\:\\(\\[CIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Z\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createParser\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.\\_createParser\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createGenerator\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(\\[CII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(\\[C\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLFactory\\.createParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.\\<init\\>\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;IILcom\\/fasterxml\\/jackson\\/core\\/ObjectCodec\\;Ljava\\/io\\/Writer\\;Lorg\\/yaml\\/snakeyaml\\/DumperOptions\\$Version\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeStringField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.\\_writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeTypeId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeObjectRef\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.writeObjectId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLGenerator\\.\\_writeScalar\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Character\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.\\_parseNumericValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.\\_parseIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getObjectId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getTypeId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getTypeId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.yaml\\.YAMLParser\\.getObjectId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.hasFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createParser\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createParser\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createParser\\:\\(\\[CIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Z\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createParser\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createGenerator\\:\\(Ljava\\/io\\/Writer\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createUTF8Generator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createWriter\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createCBORGenerator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;IILcom\\/fasterxml\\/jackson\\/core\\/ObjectCodec\\;Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createUTF8Generator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createGenerator\\:\\(Ljava\\/io\\/Writer\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createParser\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.\\_createParser\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORFactory\\.createParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeFieldId\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeStringField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.copyCurrentEvent\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.copyCurrentStructure\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.maybeCopyTag\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeStartArray\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeStartObject\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeArray\\:\\(\\[III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeArray\\:\\(\\[JII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeArray\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeNumberNoCheck\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeNumberNoCheck\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeNumberNoCheck\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeBinary\\:\\(Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_write\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_failSizedArrayOrObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeTag\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeRaw\\:\\(B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.writeBytes\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_ensureSpace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeChunkedString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_ensureRoomForOutput\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeIntValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeLongValue\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeLengthMarker\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeByte\\:\\(B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeBytes\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeBytes\\:\\(Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_writeBytesLong\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.\\_flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORGenerator\\.closeComplexElement\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_numberToName\\:\\(IZ\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_handleTaggedBinary\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_handleTaggedArray\\:\\(II\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.nextFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_readAndWriteBytes\\:\\(Ljava\\/io\\/OutputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_checkNumericValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.convertNumberToInt\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.convertNumberToLong\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.convertNumberToBigInteger\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.convertNumberToFloat\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.convertNumberToDouble\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.convertNumberToBigDecimal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.reportOverflowInt\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.reportOverflowLong\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_finishTextToken\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_finishShortText\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_finishLongText\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_finishChunkedText\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_nextByte\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_nextChunkedByte\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_nextChunkedByte2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_finishBytes\\:\\(I\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeFieldName\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeShortName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeLongerName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeChunkedName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeNonStringName\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_findDecodedFromSymbols\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_findDecodedLong\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_skipIncomplete\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_skipChunked\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_skipBytesL\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_skipBytes\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeTag\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeExplicitLength\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeChunkLength\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeHalfSizeFloat\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decode8Bits\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decode16Bits\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_slow16\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decode32Bits\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_slow32\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decode64Bits\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_slow64\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeUTF8\\_3\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeChunkedUTF8\\_3\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeUTF8\\_4\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_decodeChunkedUTF8\\_4\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.loadMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_loadToHaveAtLeast\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_handleEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_handleCBOREOF\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_invalidToken\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_reportUnexpectedBreak\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_reportInvalidChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_reportInvalidInitial\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_reportInvalidOther\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParser\\.\\_reportInvalidOther\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParserBootstrapper\\.constructParser\\:\\(IIILcom\\/fasterxml\\/jackson\\/core\\/ObjectCodec\\;Lcom\\/fasterxml\\/jackson\\/core\\/sym\\/ByteQuadsCanonicalizer\\;\\)Lcom\\/fasterxml\\/jackson\\/dataformat\\/cbor\\/CBORParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParserBootstrapper\\.hasCBORFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORParserBootstrapper\\.ensureLoaded\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORReadContext\\.setCurrentName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.dataformat\\.cbor\\.CBORReadContext\\.\\_checkDup\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/json\\/DupDetector\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$GroupHead\\.setNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$GroupHead\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$GroupHead\\.compare\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$GroupHead\\.updateDocHead\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$ScoringGroupHead\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;Ljava\\/lang\\/Object\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$ScoringGroupHead\\.compare\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$ScoringGroupHead\\.updateDocHead\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$ScoringGroupHeadsCollector\\.newGroupHead\\:\\(ILjava\\/lang\\/Object\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/AllGroupHeadsCollector\\$GroupHead\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$SortingGroupHead\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/Sort\\;Ljava\\/lang\\/Object\\;ILorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$SortingGroupHead\\.setNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$SortingGroupHead\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$SortingGroupHead\\.compare\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$SortingGroupHead\\.updateDocHead\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\$SortingGroupHeadsCollector\\.newGroupHead\\:\\(ILjava\\/lang\\/Object\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/AllGroupHeadsCollector\\$GroupHead\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupHeadsCollector\\.newGroupHead\\:\\(ILjava\\/lang\\/Object\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/AllGroupHeadsCollector\\$GroupHead\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupsCollector\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupsCollector\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.AllGroupsCollector\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.BlockGroupingCollector\\.processGroup\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.BlockGroupingCollector\\.getTopGroups\\:\\(Lorg\\/apache\\/lucene\\/search\\/Sort\\;IIIZ\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/TopGroups\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.BlockGroupingCollector\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.BlockGroupingCollector\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.BlockGroupingCollector\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.DistinctValuesCollector\\$ValuesCollector\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.DistinctValuesCollector\\$ValuesCollector\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.FakeScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.FirstPassGroupingCollector\\.getTopGroups\\:\\(IZ\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.FirstPassGroupingCollector\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.FirstPassGroupingCollector\\.isCompetitive\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.FirstPassGroupingCollector\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.FirstPassGroupingCollector\\.buildSortedSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.FirstPassGroupingCollector\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupFacetCollector\\$SegmentResult\\.nextTerm\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupFacetCollector\\.mergeSegmentResults\\:\\(IIZ\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/GroupFacetCollector\\$GroupedFacetResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupFacetCollector\\.createSegmentResult\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/GroupFacetCollector\\$SegmentResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupFacetCollector\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupReducer\\.collect\\:\\(Ljava\\/lang\\/Object\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupReducer\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupReducer\\.setNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupSelector\\.setNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupSelector\\.advanceTo\\:\\(I\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/GroupSelector\\$State\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupingSearch\\.search\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;Lorg\\/apache\\/lucene\\/search\\/Query\\;II\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/TopGroups\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupingSearch\\.groupByFieldOrFunction\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;Lorg\\/apache\\/lucene\\/search\\/Query\\;II\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/TopGroups\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.GroupingSearch\\.groupByDocBlock\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;Lorg\\/apache\\/lucene\\/search\\/Query\\;II\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/TopGroups\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.SecondPassGroupingCollector\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.SecondPassGroupingCollector\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.SecondPassGroupingCollector\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$MV\\$SegmentResult\\.\\<init\\>\\:\\(\\[IIILorg\\/apache\\/lucene\\/index\\/TermsEnum\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$MV\\$SegmentResult\\.nextTerm\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$MV\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$MV\\.process\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$MV\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$MV\\.createSegmentResult\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/TermGroupFacetCollector\\$MV\\$SegmentResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$MV\\.createSegmentResult\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/GroupFacetCollector\\$SegmentResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$SV\\$SegmentResult\\.\\<init\\>\\:\\(\\[IILorg\\/apache\\/lucene\\/index\\/TermsEnum\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$SV\\$SegmentResult\\.nextTerm\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$SV\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$SV\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$SV\\.createSegmentResult\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/TermGroupFacetCollector\\$SV\\$SegmentResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupFacetCollector\\$SV\\.createSegmentResult\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/GroupFacetCollector\\$SegmentResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupSelector\\.setNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.TermGroupSelector\\.advanceTo\\:\\(I\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/GroupSelector\\$State\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.ValueSourceGroupSelector\\.setNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.grouping\\.ValueSourceGroupSelector\\.advanceTo\\:\\(I\\)Lorg\\/apache\\/lucene\\/search\\/grouping\\/GroupSelector\\$State\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.lucene.search.highlight.InvalidTokenOffsetsException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.Highlighter\\.getBestFragment\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.lucene.search.highlight.InvalidTokenOffsetsException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.Highlighter\\.getBestFragment\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.lucene.search.highlight.InvalidTokenOffsetsException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.Highlighter\\.getBestFragments\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.lucene.search.highlight.InvalidTokenOffsetsException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.Highlighter\\.getBestFragments\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;Ljava\\/lang\\/String\\;I\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.lucene.search.highlight.InvalidTokenOffsetsException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.Highlighter\\.getBestTextFragments\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;Ljava\\/lang\\/String\\;ZI\\)\\[Lorg\\/apache\\/lucene\\/search\\/highlight\\/TextFragment\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.lucene.search.highlight.InvalidTokenOffsetsException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.Highlighter\\.getBestFragments\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;Ljava\\/lang\\/String\\;ILjava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.OffsetLimitTokenFilter\\.incrementToken\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.OffsetLimitTokenFilter\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.QueryScorer\\.init\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.QueryScorer\\.initExtractor\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.Scorer\\.init\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\$1\\.terms\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/Terms\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\.doClose\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\.terms\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/Terms\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\.getNumericDocValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\.getBinaryDocValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/BinaryDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\.getSortedDocValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/SortedDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\.getSortedNumericDocValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/SortedNumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\.getSortedSetDocValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/SortedSetDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\.getNormValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\.checkIntegrity\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\.getTermVectors\\:\\(I\\)Lorg\\/apache\\/lucene\\/index\\/Fields\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TermVectorLeafReader\\.document\\:\\(ILorg\\/apache\\/lucene\\/index\\/StoredFieldVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenSources\\.getTokenStream\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/Fields\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;I\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenSources\\.getTermVectorTokenStreamOrNull\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/Fields\\;I\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenSources\\.getAnyTokenStream\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/document\\/Document\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenSources\\.getAnyTokenStream\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenSources\\.getTokenStream\\:\\(Lorg\\/apache\\/lucene\\/index\\/Terms\\;Z\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenSources\\.getTokenStream\\:\\(Lorg\\/apache\\/lucene\\/index\\/Terms\\;\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenSources\\.getTokenStreamWithOffsets\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenSources\\.getTokenStream\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenStreamFromTermVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/index\\/Terms\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenStreamFromTermVector\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenStreamFromTermVector\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenStreamFromTermVector\\.initTokensArray\\:\\(\\)\\[Lorg\\/apache\\/lucene\\/search\\/highlight\\/TokenStreamFromTermVector\\$TokenLL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.TokenStreamFromTermVector\\.incrementToken\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\$DelegatingLeafReader\\.terms\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/Terms\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\$DelegatingLeafReader\\.getNumericDocValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\$DelegatingLeafReader\\.getBinaryDocValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/BinaryDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\$DelegatingLeafReader\\.getSortedDocValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/SortedDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\$DelegatingLeafReader\\.getNormValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\.extract\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;FLjava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\.extractUnknownQuery\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\.extractWeightedSpanTerms\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\.extractWeightedTerms\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/Query\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\.getLeafContext\\:\\(\\)Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\.getWeightedSpanTerms\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;FLorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\.getWeightedSpanTerms\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;FLorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.highlight\\.WeightedSpanTermExtractor\\.getWeightedSpanTermsWithScores\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;FLorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.AnalysisOffsetStrategy\\$MultiValueTokenStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.AnalysisOffsetStrategy\\$MultiValueTokenStream\\.incrementToken\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.AnalysisOffsetStrategy\\$MultiValueTokenStream\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.AnalysisOffsetStrategy\\.tokenStream\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.FieldOffsetStrategy\\$1\\.terms\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/Terms\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.FieldOffsetStrategy\\.getOffsetsEnum\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;ILjava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/uhighlight\\/OffsetsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.FieldOffsetStrategy\\.createOffsetsEnumFromReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;I\\)Lorg\\/apache\\/lucene\\/search\\/uhighlight\\/OffsetsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.FieldOffsetStrategy\\.createOffsetsEnumsWeightMatcher\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;ILjava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.FieldOffsetStrategy\\.createOffsetsEnumsForTerms\\:\\(\\[Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/index\\/Terms\\;ILjava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.FieldOffsetStrategy\\.createOffsetsEnumsForAutomata\\:\\(Lorg\\/apache\\/lucene\\/index\\/Terms\\;ILjava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.MemoryIndexOffsetStrategy\\$2\\.accept\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.MemoryIndexOffsetStrategy\\.getOffsetsEnum\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;ILjava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/uhighlight\\/OffsetsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$1\\.nextPosition\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$1\\.getTerm\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$1\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$1\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$1\\.freq\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$MultiOffsetsEnum\\.\\<init\\>\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$MultiOffsetsEnum\\.nextPosition\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$MultiOffsetsEnum\\.getTerm\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$MultiOffsetsEnum\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$MultiOffsetsEnum\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$MultiOffsetsEnum\\.freq\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$MultiOffsetsEnum\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfMatchesIterator\\.nextPosition\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfMatchesIterator\\.freq\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfMatchesIterator\\.getTerm\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfMatchesIterator\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfMatchesIterator\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfMatchesIteratorWithSubs\\$CachedOE\\.nextPosition\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfMatchesIteratorWithSubs\\$CachedOE\\.freq\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfMatchesIteratorWithSubs\\$CachedOE\\.getTerm\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfMatchesIteratorWithSubs\\$CachedOE\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfMatchesIteratorWithSubs\\$CachedOE\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfPostings\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;ILorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfPostings\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfPostings\\.nextPosition\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfPostings\\.getTerm\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfPostings\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfPostings\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\$OfPostings\\.freq\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\.nextPosition\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\.freq\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\.getTerm\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OffsetsEnum\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OverlaySingleDocTermsLeafReader\\$1\\$1\\$1\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OverlaySingleDocTermsLeafReader\\$1\\$1\\$1\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OverlaySingleDocTermsLeafReader\\$1\\$1\\.postings\\:\\(Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;I\\)Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OverlaySingleDocTermsLeafReader\\$1\\.iterator\\:\\(\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OverlaySingleDocTermsLeafReader\\$1\\.intersect\\:\\(Lorg\\/apache\\/lucene\\/util\\/automaton\\/CompiledAutomaton\\;Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OverlaySingleDocTermsLeafReader\\$1\\.filterTermsEnum\\:\\(Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.OverlaySingleDocTermsLeafReader\\.terms\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/Terms\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Error"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$2\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/uhighlight\\/PhraseHelper\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/Query\\;Ljava\\/util\\/function\\/Function\\;Ljava\\/util\\/Set\\;Ljava\\/util\\/function\\/Predicate\\;Z\\[ZLjava\\/util\\/function\\/Function\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$2\\.extract\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;FLjava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$2\\.extractWeightedTerms\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/Query\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$2\\.extractWeightedSpanTerms\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$OffsetSpanCollector\\.collectLeaf\\:\\(Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;ILorg\\/apache\\/lucene\\/index\\/Term\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$SingleFieldWithOffsetsFilterLeafReader\\$1\\$1\\.postings\\:\\(Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;I\\)Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$SingleFieldWithOffsetsFilterLeafReader\\$1\\.iterator\\:\\(\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$SingleFieldWithOffsetsFilterLeafReader\\.terms\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/Terms\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$SingleFieldWithOffsetsFilterLeafReader\\.getNormValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$SpanCollectedOffsetsEnum\\.nextPosition\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$SpanCollectedOffsetsEnum\\.freq\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$SpanCollectedOffsetsEnum\\.getTerm\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$SpanCollectedOffsetsEnum\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PhraseHelper\\$SpanCollectedOffsetsEnum\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PostingsOffsetStrategy\\.getOffsetsEnum\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;ILjava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/uhighlight\\/OffsetsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.PostingsWithTermVectorsOffsetStrategy\\.getOffsetsEnum\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;ILjava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/uhighlight\\/OffsetsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TermVectorFilteredLeafReader\\$TermVectorFilteredTermsEnum\\.postings\\:\\(Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;I\\)Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TermVectorFilteredLeafReader\\$TermVectorFilteredTermsEnum\\.moveToCurrentTerm\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TermVectorFilteredLeafReader\\$TermsFilteredTerms\\.iterator\\:\\(\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TermVectorFilteredLeafReader\\$TermsFilteredTerms\\.intersect\\:\\(Lorg\\/apache\\/lucene\\/util\\/automaton\\/CompiledAutomaton\\;Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TermVectorFilteredLeafReader\\.terms\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/Terms\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TermVectorOffsetStrategy\\.getOffsetsEnum\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;ILjava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/uhighlight\\/OffsetsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TokenStreamOffsetStrategy\\$TokenStreamOffsetsEnum\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;\\[Lorg\\/apache\\/lucene\\/util\\/automaton\\/CharacterRunAutomaton\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TokenStreamOffsetStrategy\\$TokenStreamOffsetsEnum\\.nextPosition\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TokenStreamOffsetStrategy\\$TokenStreamOffsetsEnum\\.freq\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TokenStreamOffsetStrategy\\$TokenStreamOffsetsEnum\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TokenStreamOffsetStrategy\\$TokenStreamOffsetsEnum\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TokenStreamOffsetStrategy\\$TokenStreamOffsetsEnum\\.getTerm\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TokenStreamOffsetStrategy\\$TokenStreamOffsetsEnum\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.TokenStreamOffsetStrategy\\.getOffsetsEnum\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;ILjava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/uhighlight\\/OffsetsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.UnifiedHighlighter\\$3\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.UnifiedHighlighter\\$3\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.UnifiedHighlighter\\$LimitedStoredFieldVisitor\\.stringField\\:\\(Lorg\\/apache\\/lucene\\/index\\/FieldInfo\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.UnifiedHighlighter\\$LimitedStoredFieldVisitor\\.needsField\\:\\(Lorg\\/apache\\/lucene\\/index\\/FieldInfo\\;\\)Lorg\\/apache\\/lucene\\/index\\/StoredFieldVisitor\\$Status\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.uhighlight\\.UnifiedHighlighter\\$TermVectorReusingLeafReader\\$1\\.doClose\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.BaseFragmentsBuilder\\.createFragment\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldFragList\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.BaseFragmentsBuilder\\.createFragments\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldFragList\\;I\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.BaseFragmentsBuilder\\.createFragment\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldFragList\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/highlight\\/Encoder\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.BaseFragmentsBuilder\\.createFragments\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldFragList\\;I\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/highlight\\/Encoder\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.BaseFragmentsBuilder\\.getFields\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;\\)\\[Lorg\\/apache\\/lucene\\/document\\/Field\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FastVectorHighlighter\\.getFieldQuery\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldQuery\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FastVectorHighlighter\\.getBestFragment\\:\\(Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldQuery\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FastVectorHighlighter\\.getBestFragments\\:\\(Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldQuery\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;II\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FastVectorHighlighter\\.getBestFragment\\:\\(Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldQuery\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;ILorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FragListBuilder\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FragmentsBuilder\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/highlight\\/Encoder\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FastVectorHighlighter\\.getBestFragments\\:\\(Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldQuery\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;IILorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FragListBuilder\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FragmentsBuilder\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/highlight\\/Encoder\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FastVectorHighlighter\\.getBestFragments\\:\\(Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldQuery\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Ljava\\/util\\/Set\\;IILorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FragListBuilder\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FragmentsBuilder\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/highlight\\/Encoder\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FastVectorHighlighter\\.getFieldFragList\\:\\(Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FragListBuilder\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldQuery\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;I\\)Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldFragList\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FastVectorHighlighter\\.getFieldFragList\\:\\(Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FragListBuilder\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldQuery\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/util\\/Set\\;I\\)Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldFragList\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FieldQuery\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FieldQuery\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FieldQuery\\.flatten\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;Ljava\\/util\\/Collection\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FieldQuery\\.saveTerms\\:\\(Ljava\\/util\\/Collection\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FieldTermStack\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldQuery\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FragmentsBuilder\\.createFragment\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldFragList\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FragmentsBuilder\\.createFragments\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldFragList\\;I\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FragmentsBuilder\\.createFragment\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldFragList\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/highlight\\/Encoder\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.vectorhighlight\\.FragmentsBuilder\\.createFragments\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/vectorhighlight\\/FieldFragList\\;I\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/highlight\\/Encoder\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.BaseGlobalOrdinalScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.BitSetProducer\\.getBitSet\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/util\\/BitSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.CheckJoinIndex\\.check\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;Lorg\\/apache\\/lucene\\/search\\/join\\/BitSetProducer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.DocValuesTermsCollector\\$Function\\.apply\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.FakeScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GenericTermsCollector\\$1\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GenericTermsCollector\\$1\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GenericTermsCollector\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GenericTermsCollector\\$1\\.nextOrd\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GenericTermsCollector\\$1\\.lookupOrd\\:\\(J\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GenericTermsCollector\\$2\\.getLeafCollector\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/LeafCollector\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsCollector\\$OrdinalMapCollector\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsCollector\\$OrdinalMapCollector\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsCollector\\$SegmentOrdinalCollector\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsCollector\\$SegmentOrdinalCollector\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsCollector\\.getLeafCollector\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/LeafCollector\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsQuery\\$OrdinalMapScorer\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsQuery\\$SegmentOrdinalScorer\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsQuery\\$W\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsQuery\\$W\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreCollector\\$NoScore\\$1\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreCollector\\$NoScore\\$1\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreCollector\\$NoScore\\$2\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreCollector\\$NoScore\\$2\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreCollector\\$NoScore\\.getLeafCollector\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/LeafCollector\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreCollector\\$OrdinalMapCollector\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreCollector\\$OrdinalMapCollector\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreCollector\\$SegmentOrdinalCollector\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreCollector\\$SegmentOrdinalCollector\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreCollector\\.getLeafCollector\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/LeafCollector\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreQuery\\$OrdinalMapScorer\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreQuery\\$SegmentOrdinalScorer\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreQuery\\$W\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreQuery\\$W\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.GlobalOrdinalsWithScoreQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.JoinUtil\\$1\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.JoinUtil\\$1\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.JoinUtil\\$1\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.JoinUtil\\$2\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.JoinUtil\\$2\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.JoinUtil\\$2\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ParentChildrenBlockJoinQuery\\$1\\$1\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ParentChildrenBlockJoinQuery\\$1\\$1\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ParentChildrenBlockJoinQuery\\$1\\$2\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ParentChildrenBlockJoinQuery\\$1\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ParentChildrenBlockJoinQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ParentChildrenBlockJoinQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ParentChildrenBlockJoinQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.PointInSetIncludingScoreQuery\\$1\\$1\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.PointInSetIncludingScoreQuery\\$1\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.PointInSetIncludingScoreQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.PointInSetIncludingScoreQuery\\$MergePointVisitor\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/join\\/PointInSetIncludingScoreQuery\\;Lorg\\/apache\\/lucene\\/index\\/PrefixCodedTerms\\;Lorg\\/apache\\/lucene\\/util\\/FixedBitSet\\;\\[F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.PointInSetIncludingScoreQuery\\$MergePointVisitor\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/join\\/PointInSetIncludingScoreQuery\\;Lorg\\/apache\\/lucene\\/index\\/PrefixCodedTerms\\;Lorg\\/apache\\/lucene\\/util\\/FixedBitSet\\;\\[FLorg\\/apache\\/lucene\\/search\\/join\\/PointInSetIncludingScoreQuery\\$1\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.QueryBitSetProducer\\.getBitSet\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/util\\/BitSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsCollector\\$MV\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsCollector\\$SV\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsIncludingScoreQuery\\$1\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsIncludingScoreQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsIncludingScoreQuery\\$MVInOrderScorer\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/join\\/TermsIncludingScoreQuery\\;Lorg\\/apache\\/lucene\\/search\\/Weight\\;Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;IJ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsIncludingScoreQuery\\$MVInOrderScorer\\.fillDocsAndScores\\:\\(Lorg\\/apache\\/lucene\\/util\\/FixedBitSet\\;Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsIncludingScoreQuery\\$SVInOrderScorer\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/join\\/TermsIncludingScoreQuery\\;Lorg\\/apache\\/lucene\\/search\\/Weight\\;Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;IJ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsIncludingScoreQuery\\$SVInOrderScorer\\.fillDocsAndScores\\:\\(Lorg\\/apache\\/lucene\\/util\\/FixedBitSet\\;Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsIncludingScoreQuery\\$SVInOrderScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsIncludingScoreQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsQuery\\$SeekingTermSetTermsEnum\\.nextSeekTerm\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsQuery\\$SeekingTermSetTermsEnum\\.accept\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)Lorg\\/apache\\/lucene\\/index\\/FilteredTermsEnum\\$AcceptStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsQuery\\.getTermsEnum\\:\\(Lorg\\/apache\\/lucene\\/index\\/Terms\\;Lorg\\/apache\\/lucene\\/util\\/AttributeSource\\;\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsWithScoreCollector\\$MV\\$Avg\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsWithScoreCollector\\$MV\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsWithScoreCollector\\$SV\\$Avg\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsWithScoreCollector\\$SV\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.TermsWithScoreCollector\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToChildBlockJoinQuery\\$ToChildBlockJoinScorer\\$1\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToChildBlockJoinQuery\\$ToChildBlockJoinScorer\\$1\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToChildBlockJoinQuery\\$ToChildBlockJoinScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToChildBlockJoinQuery\\$ToChildBlockJoinWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToChildBlockJoinQuery\\$ToChildBlockJoinWeight\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToChildBlockJoinQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToChildBlockJoinQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\$BlockJoinScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\$BlockJoinScorer\\.setScoreAndFreq\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\$BlockJoinScorer\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/Weight\\;\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\$BlockJoinWeight\\$1\\.get\\:\\(J\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\$BlockJoinWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\$BlockJoinWeight\\.scorerSupplier\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/ScorerSupplier\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\$BlockJoinWeight\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\$BlockJoinWeight\\.matches\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Matches\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\$ParentApproximation\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\$ParentApproximation\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\$ParentTwoPhase\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinSortField\\$1\\.getSortedDocValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/SortedDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinSortField\\$2\\.getNumericDocValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinSortField\\$3\\.getNumericDocValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinSortField\\$4\\$1\\.longValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinSortField\\$4\\.getNumericDocValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinSortField\\$5\\$1\\.longValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentBlockJoinSortField\\$5\\.getNumericDocValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$Accumulator\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$Accumulator\\.increment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$NumDV\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$NumDV\\.increment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$NumDV\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$NumDV\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$NumDV\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$SortedDVs\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$SortedDVs\\.increment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$SortedDVs\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$SortedDVs\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$SortedDVs\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\$SortedDVs\\.lookupOrd\\:\\(I\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.join\\.ToParentDocValues\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$2\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$3\\.nextValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$3\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$3\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$3\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$4\\.longValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$4\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$4\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$4\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$5\\.lookupOrd\\:\\(I\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$5\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$5\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$5\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$6\\.nextOrd\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$6\\.lookupOrd\\:\\(J\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$6\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$6\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$6\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\$MemoryIndexPointValues\\.intersect\\:\\(Lorg\\/apache\\/lucene\\/index\\/PointValues\\$IntersectVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\$MemoryIndexPointValues\\.getMinPackedValue\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\$MemoryIndexPointValues\\.getMaxPackedValue\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\$MemoryIndexPointValues\\.getNumDimensions\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\$MemoryIndexPointValues\\.getBytesPerDimension\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\$MemoryPostingsEnum\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\$MemoryPostingsEnum\\.freq\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\$MemoryTermsEnum\\.seekExact\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/index\\/TermState\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\$MemoryTermsEnum\\.termState\\:\\(\\)Lorg\\/apache\\/lucene\\/index\\/TermState\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\.getNumericDocValues\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\.checkIntegrity\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.memory\\.MemoryIndex\\$MemoryIndexReader\\.terms\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/Terms\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.IndexSplitter\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.IndexSplitter\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.IndexSplitter\\.listSegments\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.IndexSplitter\\.remove\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.IndexSplitter\\.split\\:\\(Ljava\\/nio\\/file\\/Path\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.MultiPassIndexSplitter\\$FakeDeleteIndexReader\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.MultiPassIndexSplitter\\$FakeDeleteIndexReader\\.initSubReaders\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)\\[Lorg\\/apache\\/lucene\\/index\\/MultiPassIndexSplitter\\$FakeDeleteLeafIndexReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.MultiPassIndexSplitter\\.split\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\[Lorg\\/apache\\/lucene\\/store\\/Directory\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.MultiPassIndexSplitter\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.PKIndexSplitter\\$DocumentFilteredLeafIndexReader\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/Weight\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.PKIndexSplitter\\.split\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.index\\.PKIndexSplitter\\.createIndex\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexWriterConfig\\;Lorg\\/apache\\/lucene\\/store\\/Directory\\;Lorg\\/apache\\/lucene\\/index\\/DirectoryReader\\;Lorg\\/apache\\/lucene\\/search\\/Query\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.misc\\.GetTermInfo\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.misc\\.GetTermInfo\\.getTermInfo\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Lorg\\/apache\\/lucene\\/index\\/Term\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.misc\\.HighFreqTerms\\$TermStatsQueue\\.fill\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.misc\\.HighFreqTerms\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.misc\\.HighFreqTerms\\.getHighFreqTerms\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;ILjava\\/lang\\/String\\;Ljava\\/util\\/Comparator\\;\\)\\[Lorg\\/apache\\/lucene\\/misc\\/TermStats\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.misc\\.IndexMergeTool\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DiversifiedTopDocsCollector\\$1\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DiversifiedTopDocsCollector\\$1\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DiversifiedTopDocsCollector\\.insert\\:\\(Lorg\\/apache\\/lucene\\/search\\/DiversifiedTopDocsCollector\\$ScoreDocKey\\;ILorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DiversifiedTopDocsCollector\\$ScoreDocKey\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DiversifiedTopDocsCollector\\.getLeafCollector\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/LeafCollector\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$DoubleDocValuesStats\\.doAccumulate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$LongDocValuesStats\\.doAccumulate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$NumericDocValuesStats\\.init\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$NumericDocValuesStats\\.hasValue\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$SortedDocValuesStats\\.init\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$SortedDocValuesStats\\.hasValue\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$SortedDocValuesStats\\.doAccumulate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$SortedDoubleDocValuesStats\\.doAccumulate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$SortedLongDocValuesStats\\.doAccumulate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$SortedNumericDocValuesStats\\.init\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$SortedNumericDocValuesStats\\.hasValue\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$SortedSetDocValuesStats\\.init\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$SortedSetDocValuesStats\\.hasValue\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\$SortedSetDocValuesStats\\.doAccumulate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\.doAccumulate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\.init\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\.hasValue\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStats\\.accumulate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStatsCollector\\$1\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStatsCollector\\$1\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStatsCollector\\$2\\.setScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/Scorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStatsCollector\\$2\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesStatsCollector\\.getLeafCollector\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/LeafCollector\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativePosixUtil\\.posix\\_fadvise\\:\\(Ljava\\/io\\/FileDescriptor\\;JJI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativePosixUtil\\.posix\\_madvise\\:\\(Ljava\\/nio\\/ByteBuffer\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativePosixUtil\\.madvise\\:\\(Ljava\\/nio\\/ByteBuffer\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativePosixUtil\\.open\\_direct\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/io\\/FileDescriptor\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativePosixUtil\\.pread\\:\\(Ljava\\/io\\/FileDescriptor\\;JLjava\\/nio\\/ByteBuffer\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativePosixUtil\\.advise\\:\\(Ljava\\/io\\/FileDescriptor\\;JJI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexInput\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexInput\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/NativeUnixDirectory\\$NativeUnixIndexInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexInput\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexInput\\.seek\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexInput\\.readByte\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexInput\\.refill\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexInput\\.readBytes\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexInput\\.slice\\:\\(Ljava\\/lang\\/String\\;JJ\\)Lorg\\/apache\\/lucene\\/store\\/IndexInput\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexInput\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexOutput\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexOutput\\.writeByte\\:\\(B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexOutput\\.writeBytes\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexOutput\\.dump\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexOutput\\.getChecksum\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\$NativeUnixIndexOutput\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;IJLorg\\/apache\\/lucene\\/store\\/LockFactory\\;Lorg\\/apache\\/lucene\\/store\\/Directory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;Lorg\\/apache\\/lucene\\/store\\/LockFactory\\;Lorg\\/apache\\/lucene\\/store\\/Directory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;Lorg\\/apache\\/lucene\\/store\\/Directory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\.openInput\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/store\\/IOContext\\;\\)Lorg\\/apache\\/lucene\\/store\\/IndexInput\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.NativeUnixDirectory\\.createOutput\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/store\\/IOContext\\;\\)Lorg\\/apache\\/lucene\\/store\\/IndexOutput\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.RAFDirectory\\$RAFIndexInput\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/RandomAccessFile\\;Lorg\\/apache\\/lucene\\/store\\/IOContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.RAFDirectory\\$RAFIndexInput\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.RAFDirectory\\$RAFIndexInput\\.slice\\:\\(Ljava\\/lang\\/String\\;JJ\\)Lorg\\/apache\\/lucene\\/store\\/IndexInput\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.RAFDirectory\\$RAFIndexInput\\.readInternal\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.RAFDirectory\\$RAFIndexInput\\.seekInternal\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.RAFDirectory\\$RAFIndexInput\\.isFDValid\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.RAFDirectory\\$RAFIndexInput\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.RAFDirectory\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;Lorg\\/apache\\/lucene\\/store\\/LockFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.RAFDirectory\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.RAFDirectory\\.openInput\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/store\\/IOContext\\;\\)Lorg\\/apache\\/lucene\\/store\\/IndexInput\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\$WindowsIndexInput\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\$WindowsIndexInput\\.readInternal\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\$WindowsIndexInput\\.seekInternal\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\$WindowsIndexInput\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\$WindowsIndexInput\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;Lorg\\/apache\\/lucene\\/store\\/LockFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\.openInput\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/store\\/IOContext\\;\\)Lorg\\/apache\\/lucene\\/store\\/IndexInput\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\.open\\:\\(Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\.read\\:\\(J\\[BIIJ\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\.close\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\.length\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\.access\\$000\\:\\(Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\.access\\$100\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\.access\\$200\\:\\(J\\[BIIJ\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.store\\.WindowsDirectory\\.access\\$300\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.util\\.fst\\.ListOfOutputs\\.write\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.util\\.fst\\.ListOfOutputs\\.writeFinalOutput\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.util\\.fst\\.ListOfOutputs\\.read\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.util\\.fst\\.ListOfOutputs\\.skipOutput\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.util\\.fst\\.ListOfOutputs\\.readFinalOutput\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.util\\.fst\\.ListOfOutputs\\.skipFinalOutput\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.util\\.fst\\.UpToTwoPositiveIntOutputs\\.write\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.util\\.fst\\.UpToTwoPositiveIntOutputs\\.read\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.BoostingQuery\\$1\\$1\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.BoostingQuery\\$1\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.BoostingQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.BoostingQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.BoostingQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CommonTermsQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CommonTermsQuery\\.collectTermContext\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;Ljava\\/util\\/List\\;\\[Lorg\\/apache\\/lucene\\/index\\/TermContext\\;\\[Lorg\\/apache\\/lucene\\/index\\/Term\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreProvider\\.customScore\\:\\(IF\\[F\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreProvider\\.customScore\\:\\(IFF\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreProvider\\.customExplain\\:\\(ILorg\\/apache\\/lucene\\/search\\/Explanation\\;\\[Lorg\\/apache\\/lucene\\/search\\/Explanation\\;\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreProvider\\.customExplain\\:\\(ILorg\\/apache\\/lucene\\/search\\/Explanation\\;Lorg\\/apache\\/lucene\\/search\\/Explanation\\;\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreQuery\\$CustomScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreQuery\\$CustomWeight\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/CustomScoreQuery\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreQuery\\$CustomWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreQuery\\$CustomWeight\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreQuery\\$CustomWeight\\.doExplain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreQuery\\.getCustomScoreProvider\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/CustomScoreProvider\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.CustomScoreQuery\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.BoostedQuery\\$BoostedWeight\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/BoostedQuery\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.BoostedQuery\\$BoostedWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.BoostedQuery\\$BoostedWeight\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.BoostedQuery\\$CustomScorer\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/BoostedQuery\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/BoostedQuery\\$BoostedWeight\\;Lorg\\/apache\\/lucene\\/search\\/Scorer\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/ValueSource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.BoostedQuery\\$CustomScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.BoostedQuery\\$CustomScorer\\.explain\\:\\(I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.BoostedQuery\\$CustomScorer\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/BoostedQuery\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/BoostedQuery\\$BoostedWeight\\;Lorg\\/apache\\/lucene\\/search\\/Scorer\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/ValueSource\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/BoostedQuery\\$1\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.BoostedQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.BoostedQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionMatchQuery\\$1\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionMatchQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionMatchQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionQuery\\$AllScorer\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionQuery\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionQuery\\$FunctionWeight\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionQuery\\$AllScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionQuery\\$AllScorer\\.explain\\:\\(I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionQuery\\$FunctionWeight\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionQuery\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionQuery\\$FunctionWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionQuery\\$FunctionWeight\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionRangeQuery\\$FunctionRangeWeight\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionRangeQuery\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionRangeQuery\\$FunctionRangeWeight\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionRangeQuery\\$FunctionRangeWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/ValueSourceScorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionRangeQuery\\$FunctionRangeWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionRangeQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$FunctionScoreWeight\\$1\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$FunctionScoreWeight\\.matches\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Matches\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$FunctionScoreWeight\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$FunctionScoreWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$MultiplicativeBoostValuesSource\\$1\\.doubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$MultiplicativeBoostValuesSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$MultiplicativeBoostValuesSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$MultiplicativeBoostValuesSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$MultiplicativeBoostValuesSource\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;ILorg\\/apache\\/lucene\\/search\\/Explanation\\;\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$QueryBoostValuesSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$QueryBoostValuesSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$QueryBoostValuesSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\$QueryBoostValuesSource\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;ILorg\\/apache\\/lucene\\/search\\/Explanation\\;\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionScoreQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\$1\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\$3\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\$4\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\$5\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\$6\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\$ValueFiller\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.byteVal\\:\\(I\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.shortVal\\:\\(I\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.intVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.longVal\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.doubleVal\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.bytesVal\\:\\(ILorg\\/apache\\/lucene\\/util\\/BytesRefBuilder\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.ordVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.byteVal\\:\\(I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.shortVal\\:\\(I\\[S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.floatVal\\:\\(I\\[F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.intVal\\:\\(I\\[I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.longVal\\:\\(I\\[J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.doubleVal\\:\\(I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.strVal\\:\\(I\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.explain\\:\\(I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.FunctionValues\\.getRangeScorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZZ\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/ValueSourceScorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$IndexReaderDoubleValuesSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$IndexReaderDoubleValuesSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$NoCacheConstantDoubleValuesSource\\$1\\.doubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$NoCacheConstantDoubleValuesSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$NoCacheConstantDoubleValuesSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$NoCacheConstantDoubleValuesSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$NoCacheConstantLongValuesSource\\$1\\.longValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$NoCacheConstantLongValuesSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$NoCacheConstantLongValuesSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/LongValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$NoCacheConstantLongValuesSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/LongValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$ReaderFunction\\.apply\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$SumTotalTermFreqValuesSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/LongValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$SumTotalTermFreqValuesSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/LongValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$TermFreqDoubleValuesSource\\$1\\.doubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$TermFreqDoubleValuesSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$TermFreqDoubleValuesSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.IndexReaderFunctions\\$TermFreqDoubleValuesSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$FakeScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$FromDoubleValuesSource\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$FromDoubleValuesSource\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$FromDoubleValuesSource\\$1\\.doubleVal\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$FromDoubleValuesSource\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$FromDoubleValuesSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$ValueSourceComparator\\.compareBottom\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$ValueSourceComparator\\.copy\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$ValueSourceComparator\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$ValueSourceComparator\\.compareTop\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$ValueSourceSortField\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/SortField\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$WrappedDoubleValuesSource\\$1\\.doubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$WrappedDoubleValuesSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$WrappedDoubleValuesSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$WrappedDoubleValuesSource\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;ILorg\\/apache\\/lucene\\/search\\/Explanation\\;\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$WrappedDoubleValuesSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$WrappedLongValuesSource\\$1\\.longValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$WrappedLongValuesSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$WrappedLongValuesSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/LongValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\$WrappedLongValuesSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/LongValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSource\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSourceScorer\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSourceScorer\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.ValueSourceScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.BoolDocValues\\$1\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.BoolDocValues\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.BoolDocValues\\.byteVal\\:\\(I\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.BoolDocValues\\.shortVal\\:\\(I\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.BoolDocValues\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.BoolDocValues\\.intVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.BoolDocValues\\.longVal\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.BoolDocValues\\.doubleVal\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.BoolDocValues\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.BoolDocValues\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.BoolDocValues\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\$1\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/docvalues\\/DocTermsIndexDocValues\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\$1\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\$2\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/ValueSource\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\.getOrdForDoc\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\.ordVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\.bytesVal\\:\\(ILorg\\/apache\\/lucene\\/util\\/BytesRefBuilder\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\.getRangeScorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZZ\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/ValueSourceScorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DocTermsIndexDocValues\\.open\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/SortedDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\$1\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\$2\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\$3\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\$4\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\$5\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\.byteVal\\:\\(I\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\.shortVal\\:\\(I\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\.intVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\.longVal\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\.doubleVal\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.DoubleDocValues\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.FloatDocValues\\$1\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.FloatDocValues\\.byteVal\\:\\(I\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.FloatDocValues\\.shortVal\\:\\(I\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.FloatDocValues\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.FloatDocValues\\.intVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.FloatDocValues\\.longVal\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.FloatDocValues\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.FloatDocValues\\.doubleVal\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.FloatDocValues\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.FloatDocValues\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.FloatDocValues\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.IntDocValues\\$1\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.IntDocValues\\$2\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.IntDocValues\\.byteVal\\:\\(I\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.IntDocValues\\.shortVal\\:\\(I\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.IntDocValues\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.IntDocValues\\.intVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.IntDocValues\\.longVal\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.IntDocValues\\.doubleVal\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.IntDocValues\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.IntDocValues\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.IntDocValues\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\$1\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\$2\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\.byteVal\\:\\(I\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\.shortVal\\:\\(I\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\.intVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\.longVal\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\.doubleVal\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.LongDocValues\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.StrDocValues\\$1\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.StrDocValues\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.StrDocValues\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.StrDocValues\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.docvalues\\.StrDocValues\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.BytesRefFieldSource\\$1\\$1\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.BytesRefFieldSource\\$1\\.getValueForDoc\\:\\(I\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.BytesRefFieldSource\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.BytesRefFieldSource\\$1\\.bytesVal\\:\\(ILorg\\/apache\\/lucene\\/util\\/BytesRefBuilder\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.BytesRefFieldSource\\$1\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.BytesRefFieldSource\\$1\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.BytesRefFieldSource\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.BytesRefFieldSource\\$1\\.access\\$000\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/valuesource\\/BytesRefFieldSource\\$1\\;I\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.BytesRefFieldSource\\$2\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.BytesRefFieldSource\\$2\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.BytesRefFieldSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ComparisonBoolFunction\\$1\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ComparisonBoolFunction\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ComparisonBoolFunction\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ComparisonBoolFunction\\.compare\\:\\(ILorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ComparisonBoolFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ComparisonBoolFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ConstValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.get\\:\\(I\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.byteVal\\:\\(I\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.shortVal\\:\\(I\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.intVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.longVal\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.doubleVal\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.bytesVal\\:\\(ILorg\\/apache\\/lucene\\/util\\/BytesRefBuilder\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DefFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DivFloatFunction\\.func\\:\\(ILorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DocFreqValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DocFreqValueSource\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DoubleConstValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DoubleFieldSource\\$1\\$1\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DoubleFieldSource\\$1\\.getValueForDoc\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DoubleFieldSource\\$1\\.doubleVal\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DoubleFieldSource\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DoubleFieldSource\\$1\\.access\\$000\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/valuesource\\/DoubleFieldSource\\$1\\;I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DoubleFieldSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DoubleFieldSource\\.getNumericDocValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DualFloatFunction\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DualFloatFunction\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DualFloatFunction\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DualFloatFunction\\.func\\:\\(ILorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DualFloatFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.DualFloatFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.EnumFieldSource\\$1\\$1\\.matches\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.EnumFieldSource\\$1\\$2\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.EnumFieldSource\\$1\\.getValueForDoc\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.EnumFieldSource\\$1\\.intVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.EnumFieldSource\\$1\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.EnumFieldSource\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.EnumFieldSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.FloatFieldSource\\$1\\$1\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.FloatFieldSource\\$1\\.getValueForDoc\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.FloatFieldSource\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.FloatFieldSource\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.FloatFieldSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.FloatFieldSource\\.getNumericDocValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IDFValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.byteVal\\:\\(I\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.shortVal\\:\\(I\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.intVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.longVal\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.doubleVal\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.bytesVal\\:\\(ILorg\\/apache\\/lucene\\/util\\/BytesRefBuilder\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IfFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IntFieldSource\\$1\\$1\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IntFieldSource\\$1\\.getValueForDoc\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IntFieldSource\\$1\\.intVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IntFieldSource\\$1\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IntFieldSource\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IntFieldSource\\$1\\.access\\$000\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/valuesource\\/IntFieldSource\\$1\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IntFieldSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.IntFieldSource\\.getNumericDocValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.JoinDocFreqValueSource\\$1\\.intVal\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.JoinDocFreqValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LinearFloatFunction\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LinearFloatFunction\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LinearFloatFunction\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LinearFloatFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LinearFloatFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LiteralValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LongFieldSource\\$1\\$1\\.fillValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LongFieldSource\\$1\\.getValueForDoc\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LongFieldSource\\$1\\.longVal\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LongFieldSource\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LongFieldSource\\$1\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LongFieldSource\\$1\\.strVal\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LongFieldSource\\$1\\.access\\$000\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/valuesource\\/LongFieldSource\\$1\\;I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LongFieldSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.LongFieldSource\\.getNumericDocValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MaxDocValueSource\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MaxDocValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MaxFloatFunction\\.func\\:\\(I\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MaxFloatFunction\\.exists\\:\\(I\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MinFloatFunction\\.func\\:\\(I\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MinFloatFunction\\.exists\\:\\(I\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiBoolFunction\\$1\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiBoolFunction\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiBoolFunction\\.func\\:\\(I\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiBoolFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/docvalues\\/BoolDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiBoolFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiBoolFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFloatFunction\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFloatFunction\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFloatFunction\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFloatFunction\\.func\\:\\(I\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFloatFunction\\.exists\\:\\(I\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFloatFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFloatFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFunction\\$Values\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFunction\\.allExists\\:\\(I\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFunction\\.anyExists\\:\\(I\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFunction\\.allExists\\:\\(ILorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFunction\\.anyExists\\:\\(ILorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFunction\\.valsArr\\:\\(Ljava\\/util\\/List\\;Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFunction\\.toString\\:\\(Ljava\\/lang\\/String\\;\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiValuedDoubleFieldSource\\.getNumericDocValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiValuedFloatFieldSource\\.getNumericDocValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiValuedIntFieldSource\\.getNumericDocValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.MultiValuedLongFieldSource\\.getNumericDocValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/index\\/NumericDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.NormValueSource\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.NormValueSource\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.NormValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.NumDocsValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.PowFloatFunction\\.func\\:\\(ILorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ProductFloatFunction\\.func\\:\\(I\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.QueryDocValues\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/valuesource\\/QueryValueSource\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.QueryValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.QueryValueSource\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.RangeMapFloatFunction\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.RangeMapFloatFunction\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.RangeMapFloatFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.RangeMapFloatFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ReciprocalFloatFunction\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ReciprocalFloatFunction\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ReciprocalFloatFunction\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ReciprocalFloatFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ReciprocalFloatFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ScaleFloatFunction\\$1\\.exists\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ScaleFloatFunction\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ScaleFloatFunction\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ScaleFloatFunction\\.createScaleInfo\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/valuesource\\/ScaleFloatFunction\\$ScaleInfo\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ScaleFloatFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.ScaleFloatFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SimpleBoolFunction\\$1\\.boolVal\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SimpleBoolFunction\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SimpleBoolFunction\\.func\\:\\(ILorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SimpleBoolFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/docvalues\\/BoolDocValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SimpleBoolFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SimpleBoolFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SimpleFloatFunction\\$1\\.floatVal\\:\\(I\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SimpleFloatFunction\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SimpleFloatFunction\\.func\\:\\(ILorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SimpleFloatFunction\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SingleFunction\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SortedSetFieldSource\\$1\\.objectVal\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SortedSetFieldSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SumFloatFunction\\.func\\:\\(I\\[Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SumTotalTermFreqValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.SumTotalTermFreqValueSource\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TFValueSource\\$1\\$1\\.nextPosition\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TFValueSource\\$1\\$1\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TFValueSource\\$1\\$1\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TFValueSource\\$1\\$1\\.getPayload\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TFValueSource\\$1\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/valuesource\\/TFValueSource\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/ValueSource\\;Lorg\\/apache\\/lucene\\/index\\/Terms\\;Lorg\\/apache\\/lucene\\/search\\/similarities\\/TFIDFSimilarity\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TFValueSource\\$1\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TFValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TermFreqValueSource\\$1\\$1\\.nextPosition\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TermFreqValueSource\\$1\\$1\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TermFreqValueSource\\$1\\$1\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TermFreqValueSource\\$1\\$1\\.getPayload\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TermFreqValueSource\\$1\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/function\\/valuesource\\/TermFreqValueSource\\;Lorg\\/apache\\/lucene\\/queries\\/function\\/ValueSource\\;Lorg\\/apache\\/lucene\\/index\\/Terms\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TermFreqValueSource\\$1\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TermFreqValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TotalTermFreqValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.TotalTermFreqValueSource\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$1\\.byteVal\\:\\(I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$1\\.shortVal\\:\\(I\\[S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$1\\.intVal\\:\\(I\\[I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$1\\.longVal\\:\\(I\\[J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$1\\.floatVal\\:\\(I\\[F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$1\\.doubleVal\\:\\(I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$1\\.strVal\\:\\(I\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$1\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$2\\.byteVal\\:\\(I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$2\\.shortVal\\:\\(I\\[S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$2\\.floatVal\\:\\(I\\[F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$2\\.intVal\\:\\(I\\[I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$2\\.longVal\\:\\(I\\[J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$2\\.doubleVal\\:\\(I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$2\\.strVal\\:\\(I\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\$2\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\.getValues\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/queries\\/function\\/FunctionValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.function\\.valuesource\\.VectorValueSource\\.createWeight\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThis\\.like\\:\\(I\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThis\\.like\\:\\(Ljava\\/util\\/Map\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThis\\.like\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/io\\/Reader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThis\\.createQueue\\:\\(Ljava\\/util\\/Map\\;\\)Lorg\\/apache\\/lucene\\/util\\/PriorityQueue\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThis\\.retrieveTerms\\:\\(I\\)Lorg\\/apache\\/lucene\\/util\\/PriorityQueue\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThis\\.retrieveTerms\\:\\(Ljava\\/util\\/Map\\;\\)Lorg\\/apache\\/lucene\\/util\\/PriorityQueue\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThis\\.addTermFrequencies\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/index\\/Terms\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThis\\.addTermFrequencies\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/util\\/Map\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThis\\.retrieveTerms\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/util\\/PriorityQueue\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThis\\.retrieveInterestingTerms\\:\\(I\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThis\\.retrieveInterestingTerms\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.mlt\\.MoreLikeThisQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpanScorer\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/payloads\\/PayloadScoreQuery\\;Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanWeight\\;Lorg\\/apache\\/lucene\\/queries\\/payloads\\/PayloadScoreQuery\\$PayloadSpans\\;Lorg\\/apache\\/lucene\\/search\\/similarities\\/Similarity\\$SimScorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpanScorer\\.getSpanScore\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpanScorer\\.scoreCurrentDoc\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpanScorer\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/payloads\\/PayloadScoreQuery\\;Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanWeight\\;Lorg\\/apache\\/lucene\\/queries\\/payloads\\/PayloadScoreQuery\\$PayloadSpans\\;Lorg\\/apache\\/lucene\\/search\\/similarities\\/Similarity\\$SimScorer\\;Lorg\\/apache\\/lucene\\/queries\\/payloads\\/PayloadScoreQuery\\$1\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpanWeight\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/payloads\\/PayloadScoreQuery\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanWeight\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpanWeight\\.getSpans\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanWeight\\$Postings\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/Spans\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpanWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanScorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpanWeight\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpanWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpans\\.accept\\:\\(Lorg\\/apache\\/lucene\\/search\\/spans\\/Spans\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/FilterSpans\\$AcceptStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpans\\.collectLeaf\\:\\(Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;ILorg\\/apache\\/lucene\\/index\\/Term\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\$PayloadSpans\\.doCurrentSpans\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanWeight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.PayloadScoreQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.SpanPayloadCheckQuery\\$PayloadChecker\\.collectLeaf\\:\\(Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;ILorg\\/apache\\/lucene\\/index\\/Term\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.SpanPayloadCheckQuery\\$SpanPayloadCheckWeight\\$1\\.accept\\:\\(Lorg\\/apache\\/lucene\\/search\\/spans\\/Spans\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/FilterSpans\\$AcceptStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.SpanPayloadCheckQuery\\$SpanPayloadCheckWeight\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queries\\/payloads\\/SpanPayloadCheckQuery\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;Ljava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanWeight\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.SpanPayloadCheckQuery\\$SpanPayloadCheckWeight\\.getSpans\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanWeight\\$Postings\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/Spans\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.SpanPayloadCheckQuery\\$SpanPayloadCheckWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanScorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.SpanPayloadCheckQuery\\$SpanPayloadCheckWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.SpanPayloadCheckQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanWeight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.SpanPayloadCheckQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queries\\.payloads\\.SpanPayloadCheckQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.CharStream\\.readChar\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.CharStream\\.BeginToken\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.FastCharStream\\.readChar\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.FastCharStream\\.refill\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.FastCharStream\\.BeginToken\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.MultiFieldQueryParser\\.getFieldQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.MultiFieldQueryParser\\.getFieldQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.MultiFieldQueryParser\\.getFuzzyQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;F\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.MultiFieldQueryParser\\.getPrefixQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.MultiFieldQueryParser\\.getWildcardQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.MultiFieldQueryParser\\.getRangeQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZZ\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.MultiFieldQueryParser\\.getRegexpQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.MultiFieldQueryParser\\.getMultiFieldQuery\\:\\(Ljava\\/util\\/List\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.MultiFieldQueryParser\\.parse\\:\\(\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.MultiFieldQueryParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\[Lorg\\/apache\\/lucene\\/search\\/BooleanClause\\$Occur\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.MultiFieldQueryParser\\.parse\\:\\(\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\[Lorg\\/apache\\/lucene\\/search\\/BooleanClause\\$Occur\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParser\\.Conjunction\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParser\\.Modifiers\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParser\\.TopLevelQuery\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParser\\.Query\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParser\\.Clause\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParser\\.Term\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParser\\.MultiTerm\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParser\\.jj\\_consume\\_token\\:\\(I\\)Lorg\\/apache\\/lucene\\/queryparser\\/classic\\/Token\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.TopLevelQuery\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.getFieldQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.newFieldQuery\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.getFieldQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.getRangeQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZZ\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.getBooleanQuery\\:\\(Ljava\\/util\\/List\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.getWildcardQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.getRegexpQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.getPrefixQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.getFuzzyQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;F\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.handleBareTokenQuery\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/queryparser\\/classic\\/Token\\;Lorg\\/apache\\/lucene\\/queryparser\\/classic\\/Token\\;ZZZZ\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.handleBareFuzzy\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/queryparser\\/classic\\/Token\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.handleQuotedTerm\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/queryparser\\/classic\\/Token\\;Lorg\\/apache\\/lucene\\/queryparser\\/classic\\/Token\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.discardEscapeChar\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.classic\\.QueryParserBase\\.hexToInt\\:\\(C\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.complexPhrase\\.ComplexPhraseQueryParser\\$ComplexPhraseQuery\\.parsePhraseElements\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/complexPhrase\\/ComplexPhraseQueryParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.complexPhrase\\.ComplexPhraseQueryParser\\$ComplexPhraseQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.complexPhrase\\.ComplexPhraseQueryParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.complexPhrase\\.ComplexPhraseQueryParser\\.checkPhraseClauseIsForSameField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.complexPhrase\\.ComplexPhraseQueryParser\\.getWildcardQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.complexPhrase\\.ComplexPhraseQueryParser\\.getRangeQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZZ\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.complexPhrase\\.ComplexPhraseQueryParser\\.getFuzzyQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;F\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.ext\\.ExtendableQueryParser\\.getFieldQuery\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.classic.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.ext\\.ParserExtension\\.parse\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/ext\\/ExtensionQuery\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.QueryParserHelper\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.builders\\.QueryBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.builders\\.QueryTreeBuilder\\.process\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.builders\\.QueryTreeBuilder\\.processNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/builders\\/QueryBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.builders\\.QueryTreeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.AnyQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.BooleanQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.BoostQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.DeletedQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.FieldQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/FieldQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.FieldQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.FuzzyQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/FuzzyQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.FuzzyQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/FieldQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.FuzzyQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.GroupQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.MatchAllDocsQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/MatchAllDocsQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.MatchAllDocsQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.ModifierQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.NoTokenFoundQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.OpaqueQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.PathQueryNode\\$QueryText\\.clone\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/PathQueryNode\\$QueryText\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.PathQueryNode\\$QueryText\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.PathQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.PhraseSlopQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.ProximityQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.QueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.QueryNodeImpl\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.QueryNodeImpl\\.clone\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.QueryNodeImpl\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.QuotedFieldQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QuotedFieldQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.QuotedFieldQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/FieldQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.QuotedFieldQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.SlopQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.nodes\\.TokenizedPhraseQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.parser\\.SyntaxParser\\.parse\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.NoChildOptimizationQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.NoChildOptimizationQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.NoChildOptimizationQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.QueryNodeProcessor\\.process\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.QueryNodeProcessorImpl\\.process\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.QueryNodeProcessorImpl\\.processIteration\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.QueryNodeProcessorImpl\\.processChildren\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.QueryNodeProcessorImpl\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.QueryNodeProcessorImpl\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.QueryNodeProcessorImpl\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.QueryNodeProcessorPipeline\\.process\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.RemoveDeletedQueryNodesProcessor\\.process\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.RemoveDeletedQueryNodesProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.RemoveDeletedQueryNodesProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.core\\.processors\\.RemoveDeletedQueryNodesProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.precedence\\.processors\\.BooleanModifiersQueryNodeProcessor\\.process\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.precedence\\.processors\\.BooleanModifiersQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.precedence\\.processors\\.BooleanModifiersQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.precedence\\.processors\\.BooleanModifiersQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.QueryParserUtil\\.parse\\:\\(\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.QueryParserUtil\\.parse\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\[Lorg\\/apache\\/lucene\\/search\\/BooleanClause\\$Occur\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.QueryParserUtil\\.parse\\:\\(\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\[Lorg\\/apache\\/lucene\\/search\\/BooleanClause\\$Occur\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.StandardQueryParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.StandardQueryParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.AnyQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/BooleanQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.AnyQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.AnyQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.BooleanQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/BooleanQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.BooleanQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.BooleanQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.BoostQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.BoostQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.DummyQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/TermQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.DummyQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.DummyQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.FieldQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/TermQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.FieldQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.FieldQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.FuzzyQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/FuzzyQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.FuzzyQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.FuzzyQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.GroupQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.GroupQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.MatchAllDocsQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/MatchAllDocsQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.MatchAllDocsQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.MatchAllDocsQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.MatchNoDocsQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/MatchNoDocsQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.MatchNoDocsQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.MatchNoDocsQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.ModifierQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.ModifierQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.MultiPhraseQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/MultiPhraseQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.MultiPhraseQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.MultiPhraseQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.PhraseQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.PhraseQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.PointRangeQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.PointRangeQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.PrefixWildcardQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/PrefixQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.PrefixWildcardQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.PrefixWildcardQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.RegexpQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/RegexpQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.RegexpQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.RegexpQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.SlopQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.SlopQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.StandardQueryBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.StandardQueryBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.StandardQueryTreeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.StandardQueryTreeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.SynonymQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.SynonymQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.TermRangeQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/TermRangeQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.TermRangeQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.TermRangeQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.WildcardQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/WildcardQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.WildcardQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.builders\\.WildcardQueryNodeBuilder\\.build\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.MultiPhraseQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.PointRangeQueryNode\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/standard\\/nodes\\/PointQueryNode\\;Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/standard\\/nodes\\/PointQueryNode\\;ZZLorg\\/apache\\/lucene\\/queryparser\\/flexible\\/standard\\/config\\/PointsConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.PointRangeQueryNode\\.setBounds\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/standard\\/nodes\\/PointQueryNode\\;Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/standard\\/nodes\\/PointQueryNode\\;ZZLorg\\/apache\\/lucene\\/queryparser\\/flexible\\/standard\\/config\\/PointsConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.PrefixWildcardQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/standard\\/nodes\\/PrefixWildcardQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.PrefixWildcardQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/standard\\/nodes\\/WildcardQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.PrefixWildcardQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/FieldQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.PrefixWildcardQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.RegexpQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/standard\\/nodes\\/RegexpQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.RegexpQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.WildcardQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/standard\\/nodes\\/WildcardQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.WildcardQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/FieldQueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.nodes\\.WildcardQueryNode\\.cloneTree\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.CharStream\\.readChar\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.CharStream\\.BeginToken\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.standard.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.EscapeQuerySyntaxImpl\\.discardEscapeChar\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/util\\/UnescapedCharSequence\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.standard.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.EscapeQuerySyntaxImpl\\.hexToInt\\:\\(C\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.FastCharStream\\.readChar\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.FastCharStream\\.refill\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.FastCharStream\\.BeginToken\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.StandardSyntaxParser\\.parse\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.standard.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.StandardSyntaxParser\\.Modifiers\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/ModifierQueryNode\\$Modifier\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.standard.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.StandardSyntaxParser\\.TopLevelQuery\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.standard.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.StandardSyntaxParser\\.Query\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.standard.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.StandardSyntaxParser\\.DisjQuery\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.standard.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.StandardSyntaxParser\\.ConjQuery\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.standard.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.StandardSyntaxParser\\.ModClause\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.standard.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.StandardSyntaxParser\\.Clause\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.standard.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.StandardSyntaxParser\\.Term\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.standard.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.parser\\.StandardSyntaxParser\\.jj\\_consume\\_token\\:\\(I\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/standard\\/parser\\/Token\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.AllowLeadingWildcardProcessor\\.process\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.AllowLeadingWildcardProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.AllowLeadingWildcardProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.AllowLeadingWildcardProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.AnalyzerQueryNodeProcessor\\.process\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.AnalyzerQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.AnalyzerQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.AnalyzerQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.BooleanQuery2ModifierNodeProcessor\\.process\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.BooleanQuery2ModifierNodeProcessor\\.processChildren\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.BooleanQuery2ModifierNodeProcessor\\.processIteration\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.BooleanQuery2ModifierNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.BooleanQuery2ModifierNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.BooleanSingleChildOptimizationQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.BooleanSingleChildOptimizationQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.BooleanSingleChildOptimizationQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.BoostQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.BoostQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.BoostQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.DefaultPhraseSlopQueryNodeProcessor\\.process\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.DefaultPhraseSlopQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.DefaultPhraseSlopQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.DefaultPhraseSlopQueryNodeProcessor\\.processChildren\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.DefaultPhraseSlopQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.FuzzyQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.FuzzyQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.FuzzyQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.MatchAllDocsQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.MatchAllDocsQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.MatchAllDocsQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.MultiFieldQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.MultiFieldQueryNodeProcessor\\.processChildren\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.MultiFieldQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.MultiFieldQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.OpenRangeQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.OpenRangeQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.OpenRangeQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.PhraseSlopQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.PhraseSlopQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.PhraseSlopQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.PointQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.PointQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.PointQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.PointRangeQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.PointRangeQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.PointRangeQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.RegexpQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.RegexpQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.RegexpQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.RemoveEmptyNonLeafQueryNodeProcessor\\.process\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.RemoveEmptyNonLeafQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.RemoveEmptyNonLeafQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.RemoveEmptyNonLeafQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.TermRangeQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.TermRangeQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.TermRangeQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.WildcardQueryNodeProcessor\\.postProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.WildcardQueryNodeProcessor\\.preProcessNode\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/flexible\\/core\\/nodes\\/QueryNode\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.flexible.core.QueryNodeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.flexible\\.standard\\.processors\\.WildcardQueryNodeProcessor\\.setChildrenOrder\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.CharStream\\.readChar\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.CharStream\\.BeginToken\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.FastCharStream\\.readChar\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.FastCharStream\\.refill\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.FastCharStream\\.BeginToken\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.parse2\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.checkDistanceSubQueries\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/DistanceQuery\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.getDistanceQuery\\:\\(Ljava\\/util\\/List\\;ZLorg\\/apache\\/lucene\\/queryparser\\/surround\\/parser\\/Token\\;Z\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.TopSrndQuery\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.FieldsQuery\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.OptionalFields\\:\\(\\)Ljava\\/util\\/ArrayList\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.OrQuery\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.AndQuery\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.NotQuery\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.NQuery\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.WQuery\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.PrimaryQuery\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.PrefixOperatorQuery\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.FieldsQueryList\\:\\(\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.SimpleTerm\\:\\(\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.OptionalWeights\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SrndQuery\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.parser\\.QueryParser\\.jj\\_consume\\_token\\:\\(I\\)Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/parser\\/Token\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.query.TooManyBasicQueries"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.BasicQueryFactory\\.checkMax\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.query.TooManyBasicQueries"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.BasicQueryFactory\\.newTermQuery\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;\\)Lorg\\/apache\\/lucene\\/search\\/TermQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.surround.query.TooManyBasicQueries"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.BasicQueryFactory\\.newSpanTermQuery\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanTermQuery\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.DistanceQuery\\.addSpanQueries\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SpanNearClauseFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.DistanceQuery\\.getSpanNearQuery\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/BasicQueryFactory\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.DistanceRewriteQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.DistanceSubQuery\\.addSpanQueries\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SpanNearClauseFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.OrQuery\\.addSpanQueries\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SpanNearClauseFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.RewriteQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.SimpleTerm\\$1\\.visitMatchingTerm\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.SimpleTerm\\$MatchingTermVisitor\\.visitMatchingTerm\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.SimpleTerm\\.visitMatchingTerms\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SimpleTerm\\$MatchingTermVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.SimpleTerm\\.addSpanQueries\\:\\(Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SpanNearClauseFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.SimpleTermRewriteQuery\\$1\\.visitMatchingTerm\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.SimpleTermRewriteQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.SpanNearClauseFactory\\.addTermWeighted\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.SrndPrefixQuery\\.visitMatchingTerms\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SimpleTerm\\$MatchingTermVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.SrndQuery\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.SrndTermQuery\\.visitMatchingTerms\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SimpleTerm\\$MatchingTermVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.surround\\.query\\.SrndTruncQuery\\.visitMatchingTerms\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/queryparser\\/surround\\/query\\/SimpleTerm\\$MatchingTermVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.DOMUtils\\.getChildByTagOrFail\\:\\(Lorg\\/w3c\\/dom\\/Element\\;Ljava\\/lang\\/String\\;\\)Lorg\\/w3c\\/dom\\/Element\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.DOMUtils\\.getFirstChildOrFail\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/w3c\\/dom\\/Element\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.DOMUtils\\.getAttributeOrFail\\:\\(Lorg\\/w3c\\/dom\\/Element\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.DOMUtils\\.getAttributeWithInheritanceOrFail\\:\\(Lorg\\/w3c\\/dom\\/Element\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.DOMUtils\\.getNonBlankTextOrFail\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.QueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.QueryBuilderFactory\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.BooleanQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.BooleanQueryBuilder\\.getOccursValue\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/BooleanClause\\$Occur\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.BoostingQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.BoostingTermBuilder\\.getSpanQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.ConstantScoreQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.DisjunctionMaxQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.FuzzyLikeThisQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.LikeThisQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.MatchAllDocsQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.PointRangeQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.RangeQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.SpanBuilderBase\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.SpanFirstBuilder\\.getSpanQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.SpanNearBuilder\\.getSpanQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.SpanNotBuilder\\.getSpanQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.SpanOrBuilder\\.getSpanQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.SpanOrTermsBuilder\\.getSpanQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.SpanQueryBuilder\\.getSpanQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.SpanQueryBuilderFactory\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.SpanQueryBuilderFactory\\.getSpanQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.SpanTermBuilder\\.getSpanQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.TermQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.TermsQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.queryparser.xml.ParserException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.queryparser\\.xml\\.builders\\.UserInputQueryBuilder\\.getQuery\\:\\(Lorg\\/w3c\\/dom\\/Element\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsFormat\\.fieldsConsumer\\:\\(Lorg\\/apache\\/lucene\\/index\\/SegmentWriteState\\;\\)Lorg\\/apache\\/lucene\\/codecs\\/FieldsConsumer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsFormat\\.fieldsProducer\\:\\(Lorg\\/apache\\/lucene\\/index\\/SegmentReadState\\;\\)Lorg\\/apache\\/lucene\\/codecs\\/FieldsProducer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsReader\\.init\\:\\(Lorg\\/apache\\/lucene\\/store\\/IndexInput\\;Lorg\\/apache\\/lucene\\/index\\/SegmentReadState\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsReader\\.decodeTerm\\:\\(\\[JLorg\\/apache\\/lucene\\/store\\/DataInput\\;Lorg\\/apache\\/lucene\\/index\\/FieldInfo\\;Lorg\\/apache\\/lucene\\/codecs\\/BlockTermState\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsReader\\.postings\\:\\(Lorg\\/apache\\/lucene\\/index\\/FieldInfo\\;Lorg\\/apache\\/lucene\\/codecs\\/BlockTermState\\;Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;I\\)Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsReader\\.checkIntegrity\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsWriter\\.init\\:\\(Lorg\\/apache\\/lucene\\/store\\/IndexOutput\\;Lorg\\/apache\\/lucene\\/index\\/SegmentWriteState\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsWriter\\.startDoc\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsWriter\\.addPosition\\:\\(ILorg\\/apache\\/lucene\\/util\\/BytesRef\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsWriter\\.finishDoc\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsWriter\\.finishTerm\\:\\(Lorg\\/apache\\/lucene\\/codecs\\/BlockTermState\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsWriter\\.encodeTerm\\:\\(\\[JLorg\\/apache\\/lucene\\/store\\/DataOutput\\;Lorg\\/apache\\/lucene\\/index\\/FieldInfo\\;Lorg\\/apache\\/lucene\\/codecs\\/BlockTermState\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionPostingsWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/codecs\\/idversion\\/VersionFieldReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.getFrame\\:\\(I\\)Lorg\\/apache\\/lucene\\/codecs\\/idversion\\/IDVersionSegmentTermsEnumFrame\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.pushFrame\\:\\(Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\$Arc\\;Lorg\\/apache\\/lucene\\/util\\/fst\\/PairOutputs\\$Pair\\;I\\)Lorg\\/apache\\/lucene\\/codecs\\/idversion\\/IDVersionSegmentTermsEnumFrame\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.pushFrame\\:\\(Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\$Arc\\;JI\\)Lorg\\/apache\\/lucene\\/codecs\\/idversion\\/IDVersionSegmentTermsEnumFrame\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.seekExact\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.seekExact\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;J\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.seekCeil\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\$SeekStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.printSeekState\\:\\(Ljava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.next\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.docFreq\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.totalTermFreq\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.postings\\:\\(Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;I\\)Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnum\\.termState\\:\\(\\)Lorg\\/apache\\/lucene\\/index\\/TermState\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnumFrame\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/codecs\\/idversion\\/IDVersionSegmentTermsEnum\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnumFrame\\.loadNextFloorBlock\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnumFrame\\.loadBlock\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnumFrame\\.decodeMetaData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnumFrame\\.scanToTerm\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Z\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\$SeekStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnumFrame\\.scanToTermLeaf\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Z\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\$SeekStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionSegmentTermsEnumFrame\\.scanToTermNonLeaf\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Z\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\$SeekStatus\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.IDVersionTermState\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.SingleDocsEnum\\.nextPosition\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.SingleDocsEnum\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.SingleDocsEnum\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.SingleDocsEnum\\.getPayload\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsReader\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/codecs\\/PostingsReaderBase\\;Lorg\\/apache\\/lucene\\/index\\/SegmentReadState\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsReader\\.readBytesRef\\:\\(Lorg\\/apache\\/lucene\\/store\\/IndexInput\\;\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsReader\\.seekDir\\:\\(Lorg\\/apache\\/lucene\\/store\\/IndexInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsReader\\.terms\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/Terms\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsReader\\.checkIntegrity\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\$PendingBlock\\.compileIndex\\:\\(Ljava\\/util\\/List\\;Lorg\\/apache\\/lucene\\/store\\/RAMOutputStream\\;Lorg\\/apache\\/lucene\\/util\\/IntsRefBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\$PendingBlock\\.append\\:\\(Lorg\\/apache\\/lucene\\/util\\/fst\\/Builder\\;Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\;Lorg\\/apache\\/lucene\\/util\\/IntsRefBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\$TermsWriter\\.writeBlocks\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\$TermsWriter\\.writeBlock\\:\\(IZIIIZZ\\)Lorg\\/apache\\/lucene\\/codecs\\/idversion\\/VersionBlockTreeTermsWriter\\$PendingBlock\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\$TermsWriter\\.write\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\$TermsWriter\\.pushTerm\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\$TermsWriter\\.finish\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/index\\/SegmentWriteState\\;Lorg\\/apache\\/lucene\\/codecs\\/PostingsWriterBase\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\.writeTrailer\\:\\(Lorg\\/apache\\/lucene\\/store\\/IndexOutput\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\.writeIndexTrailer\\:\\(Lorg\\/apache\\/lucene\\/store\\/IndexOutput\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\.write\\:\\(Lorg\\/apache\\/lucene\\/index\\/Fields\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionBlockTreeTermsWriter\\.writeBytesRef\\:\\(Lorg\\/apache\\/lucene\\/store\\/IndexOutput\\;Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionFieldReader\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/codecs\\/idversion\\/VersionBlockTreeTermsReader\\;Lorg\\/apache\\/lucene\\/index\\/FieldInfo\\;JLorg\\/apache\\/lucene\\/util\\/fst\\/PairOutputs\\$Pair\\;JJIJILorg\\/apache\\/lucene\\/store\\/IndexInput\\;Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionFieldReader\\.getMin\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionFieldReader\\.getMax\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.codecs\\.idversion\\.VersionFieldReader\\.iterator\\:\\(\\)Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$1\\$1\\.visit\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$1\\$1\\.visit\\:\\(I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$1\\$2\\.visit\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$1\\$2\\.visit\\:\\(I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$1\\$3\\.get\\:\\(J\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$1\\$4\\.get\\:\\(J\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$1\\$5\\.get\\:\\(J\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$1\\.getIntersectScorerSupplier\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;Lorg\\/apache\\/lucene\\/index\\/PointValues\\;Lorg\\/apache\\/lucene\\/search\\/Weight\\;\\)Lorg\\/apache\\/lucene\\/search\\/ScorerSupplier\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$1\\.getScorerSupplier\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;Lorg\\/apache\\/lucene\\/index\\/PointValues\\;Lorg\\/apache\\/lucene\\/search\\/Weight\\;\\)Lorg\\/apache\\/lucene\\/search\\/ScorerSupplier\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$1\\.scorerSupplier\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/ScorerSupplier\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$RelationScorerSupplier\\.getIntersectsScorer\\:\\(Lorg\\/apache\\/lucene\\/document\\/LatLonShapeQuery\\;Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;Lorg\\/apache\\/lucene\\/search\\/Weight\\;Lorg\\/apache\\/lucene\\/util\\/DocIdSetBuilder\\;F\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\$RelationScorerSupplier\\.getScorer\\:\\(Lorg\\/apache\\/lucene\\/document\\/LatLonShapeQuery\\;Lorg\\/apache\\/lucene\\/search\\/Weight\\;Lorg\\/apache\\/lucene\\/util\\/FixedBitSet\\;Lorg\\/apache\\/lucene\\/util\\/FixedBitSet\\;F\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.payloads\\.PayloadSpanCollector\\.collectLeaf\\:\\(Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;ILorg\\/apache\\/lucene\\/index\\/Term\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.payloads\\.PayloadSpanUtil\\.getPayloadsForQuery\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.payloads\\.PayloadSpanUtil\\.queryToSpanQuery\\:\\(Lorg\\/apache\\/lucene\\/search\\/Query\\;Ljava\\/util\\/Collection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.payloads\\.PayloadSpanUtil\\.getPayloads\\:\\(Ljava\\/util\\/Collection\\;Lorg\\/apache\\/lucene\\/search\\/spans\\/SpanQuery\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.sandbox\\.queries\\.FuzzyLikeThisQuery\\.addTerms\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;Lorg\\/apache\\/lucene\\/sandbox\\/queries\\/FuzzyLikeThisQuery\\$FieldVals\\;Lorg\\/apache\\/lucene\\/sandbox\\/queries\\/FuzzyLikeThisQuery\\$ScoreTermQueue\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.sandbox\\.queries\\.FuzzyLikeThisQuery\\.newTermQuery\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;Lorg\\/apache\\/lucene\\/index\\/Term\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.sandbox\\.queries\\.FuzzyLikeThisQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.CoveringQuery\\$CoveringWeight\\.matches\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Matches\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.CoveringQuery\\$CoveringWeight\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.CoveringQuery\\$CoveringWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.CoveringScorer\\$1\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.CoveringScorer\\$1\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.CoveringScorer\\$1\\.setMinMatch\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.CoveringScorer\\$2\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesNumbersQuery\\$1\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesNumbersQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesTermsQuery\\$2\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesTermsQuery\\$2\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.DocValuesTermsQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.LatLonPointPrototypeQueries\\.nearest\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;Ljava\\/lang\\/String\\;DDI\\)Lorg\\/apache\\/lucene\\/search\\/TopFieldDocs\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.NearestNeighbor\\.nearest\\:\\(DDLjava\\/util\\/List\\;Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;I\\)\\[Lorg\\/apache\\/lucene\\/search\\/NearestNeighbor\\$NearestHit\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonQuery\\$TermAutomatonWeight\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/TermAutomatonQuery\\;Lorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;Ljava\\/util\\/Map\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonQuery\\$TermAutomatonWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonQuery\\$TermAutomatonWeight\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonScorer\\$1\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonScorer\\$1\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonScorer\\$1\\.doNext\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonScorer\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/TermAutomatonQuery\\$TermAutomatonWeight\\;\\[Lorg\\/apache\\/lucene\\/search\\/TermAutomatonQuery\\$EnumAndScorer\\;ILjava\\/util\\/Map\\;Lorg\\/apache\\/lucene\\/search\\/similarities\\/Similarity\\$SimScorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonScorer\\.countMatches\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TermAutomatonScorer\\.access\\$800\\:\\(Lorg\\/apache\\/lucene\\/search\\/TermAutomatonScorer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.TokenStreamToTermAutomatonQuery\\.toQuery\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/analysis\\/TokenStream\\;\\)Lorg\\/apache\\/lucene\\/search\\/TermAutomatonQuery\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.ConjunctionIntervalIterator\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.ConjunctionIntervalIterator\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.ConjunctionIntervalIterator\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.ConjunctionIntervalsSource\\$ConjunctionMatchesIterator\\.next\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.ConjunctionIntervalsSource\\$ConjunctionMatchesIterator\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.ConjunctionIntervalsSource\\$ConjunctionMatchesIterator\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.ConjunctionIntervalsSource\\$ConjunctionMatchesIterator\\.getSubMatches\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/MatchesIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DifferenceIntervalFunction\\$NonOverlappingIterator\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DifferenceIntervalFunction\\$NotContainedByIterator\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DifferenceIntervalFunction\\$NotContainingIterator\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DifferenceIntervalFunction\\$NotWithinFunction\\$1\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DifferenceIntervalFunction\\$NotWithinFunction\\$1\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DifferenceIntervalFunction\\$NotWithinFunction\\$1\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DifferenceIntervalFunction\\$RelativeIterator\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DifferenceIntervalFunction\\$RelativeIterator\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DifferenceIntervalFunction\\$RelativeIterator\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DifferenceIntervalsSource\\.intervals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/intervals\\/IntervalIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DifferenceIntervalsSource\\.matches\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/MatchesIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DisjunctionDISIApproximation\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DisjunctionDISIApproximation\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DisjunctionIntervalsSource\\$1\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DisjunctionIntervalsSource\\$1\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DisjunctionIntervalsSource\\$DisjunctionIntervalIterator\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DisjunctionIntervalsSource\\$DisjunctionIntervalIterator\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DisjunctionIntervalsSource\\$DisjunctionIntervalIterator\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.DisjunctionIntervalsSource\\$DisjunctionIntervalIterator\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFilter\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFilter\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFilter\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFunction\\$5\\$1\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFunction\\$5\\$1\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFunction\\$6\\$1\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFunction\\$6\\$1\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFunction\\$BlockIntervalIterator\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFunction\\$OrderedIntervalIterator\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFunction\\$OrderedIntervalIterator\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFunction\\$UnorderedIntervalIterator\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalFunction\\$UnorderedIntervalIterator\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalIterator\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalMatches\\$1\\.next\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalMatches\\$1\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalMatches\\$1\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalMatches\\$1\\.getSubMatches\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/MatchesIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalMatches\\$2\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalMatches\\.asMatches\\:\\(Lorg\\/apache\\/lucene\\/search\\/intervals\\/IntervalIterator\\;Lorg\\/apache\\/lucene\\/search\\/MatchesIterator\\;I\\)Lorg\\/apache\\/lucene\\/search\\/MatchesIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalQuery\\.buildSimScorer\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/similarities\\/Similarity\\$SimWeight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalScorer\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalScorer\\.score\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalScorer\\.explain\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalScorer\\.freq\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalScorer\\.ensureFreq\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalsSource\\.intervals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/intervals\\/IntervalIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.IntervalsSource\\.matches\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/MatchesIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.LowpassIntervalsSource\\.intervals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/intervals\\/IntervalIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.LowpassIntervalsSource\\.matches\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/MatchesIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.MinimizingConjunctionIntervalsSource\\$CacheingMatchesIterator\\.cache\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.MinimizingConjunctionIntervalsSource\\$CacheingMatchesIterator\\.next\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.MinimizingConjunctionIntervalsSource\\$CacheingMatchesIterator\\.startOffset\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.MinimizingConjunctionIntervalsSource\\$CacheingMatchesIterator\\.endOffset\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.MinimizingConjunctionIntervalsSource\\$CacheingMatchesIterator\\.getSubMatches\\:\\(I\\)Lorg\\/apache\\/lucene\\/search\\/MatchesIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.MinimizingConjunctionIntervalsSource\\$ConjunctionMatchesIterator\\.next\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.MinimizingConjunctionIntervalsSource\\$ConjunctionMatchesIterator\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.MinimizingConjunctionIntervalsSource\\$ConjunctionMatchesIterator\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.MinimizingConjunctionIntervalsSource\\$ConjunctionMatchesIterator\\.getSubMatches\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/MatchesIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.TermIntervalsSource\\$1\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.TermIntervalsSource\\$1\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.TermIntervalsSource\\$1\\.nextInterval\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.TermIntervalsSource\\$1\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.TermIntervalsSource\\$2\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/intervals\\/TermIntervalsSource\\;Lorg\\/apache\\/lucene\\/index\\/PostingsEnum\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.TermIntervalsSource\\$2\\.next\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.TermIntervalsSource\\$2\\.startOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.TermIntervalsSource\\$2\\.endOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.TermIntervalsSource\\.intervals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/intervals\\/IntervalIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.TermIntervalsSource\\.matches\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/MatchesIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.intervals\\.TermIntervalsSource\\.termPositionsCost\\:\\(Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.document\\.LatLonShapeQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.ShapeValues\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.ShapeValues\\.value\\:\\(\\)Lorg\\/locationtech\\/spatial4j\\/shape\\/Shape\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.ShapeValuesSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/ShapeValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.bbox\\.BBoxSimilarityValueSource\\$1\\.doubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.bbox\\.BBoxSimilarityValueSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.bbox\\.BBoxSimilarityValueSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.bbox\\.BBoxSimilarityValueSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.bbox\\.BBoxSimilarityValueSource\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;ILorg\\/apache\\/lucene\\/search\\/Explanation\\;\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.bbox\\.BBoxValueSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.bbox\\.BBoxValueSource\\$1\\.value\\:\\(\\)Lorg\\/locationtech\\/spatial4j\\/shape\\/Shape\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.bbox\\.BBoxValueSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/ShapeValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.CompositeVerifyQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.CompositeVerifyQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.CompositeVerifyQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.IntersectsRPTVerifyQuery\\$1\\$1\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/composite\\/IntersectsRPTVerifyQuery\\$1\\;Lorg\\/apache\\/lucene\\/search\\/DocIdSetIterator\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DocIdSetIterator\\;Lorg\\/apache\\/lucene\\/search\\/DocIdSetIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.IntersectsRPTVerifyQuery\\$1\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.IntersectsRPTVerifyQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.IntersectsRPTVerifyQuery\\$IntersectsDifferentiatingQuery\\$IntersectsDifferentiatingVisitor\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/composite\\/IntersectsRPTVerifyQuery\\$IntersectsDifferentiatingQuery\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.IntersectsRPTVerifyQuery\\$IntersectsDifferentiatingQuery\\$IntersectsDifferentiatingVisitor\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.IntersectsRPTVerifyQuery\\$IntersectsDifferentiatingQuery\\$IntersectsDifferentiatingVisitor\\.finish\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/DocIdSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.IntersectsRPTVerifyQuery\\$IntersectsDifferentiatingQuery\\$IntersectsDifferentiatingVisitor\\.visitPrefix\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.IntersectsRPTVerifyQuery\\$IntersectsDifferentiatingQuery\\$IntersectsDifferentiatingVisitor\\.visitLeaf\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.IntersectsRPTVerifyQuery\\$IntersectsDifferentiatingQuery\\.compute\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/composite\\/IntersectsRPTVerifyQuery\\$IntersectsDifferentiatingQuery\\$IntersectsDifferentiatingVisitor\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.IntersectsRPTVerifyQuery\\$IntersectsDifferentiatingQuery\\.getDocIdSet\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/DocIdSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.composite\\.IntersectsRPTVerifyQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractPrefixTreeQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractPrefixTreeQuery\\$BaseTermsEnumTraverser\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/AbstractPrefixTreeQuery\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractPrefixTreeQuery\\$BaseTermsEnumTraverser\\.collectDocs\\:\\(Lorg\\/apache\\/lucene\\/util\\/BitSet\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractPrefixTreeQuery\\$BaseTermsEnumTraverser\\.collectDocs\\:\\(Lorg\\/apache\\/lucene\\/util\\/DocIdSetBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractPrefixTreeQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractPrefixTreeQuery\\.getDocIdSet\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/DocIdSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/AbstractVisitingPrefixTreeQuery\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.getDocIdSet\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/DocIdSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.addIntersectingChildren\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.scan\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.nextTerm\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.finish\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/DocIdSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.visitPrefix\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.visitLeaf\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.visitScanned\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.preSiblings\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/AbstractVisitingPrefixTreeQuery\\$VNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.AbstractVisitingPrefixTreeQuery\\$VisitorTemplate\\.postSiblings\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/AbstractVisitingPrefixTreeQuery\\$VNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.BytesRefIteratorTokenStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.BytesRefIteratorTokenStream\\.incrementToken\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$ContainsVisitor\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/ContainsPrefixTreeQuery\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$ContainsVisitor\\.visit\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/ContainsPrefixTreeQuery\\$SmallDocSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$ContainsVisitor\\.seek\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$ContainsVisitor\\.getDocs\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/ContainsPrefixTreeQuery\\$SmallDocSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$ContainsVisitor\\.getLeafDocs\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/ContainsPrefixTreeQuery\\$SmallDocSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$ContainsVisitor\\.nextTerm\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$ContainsVisitor\\.collectDocs\\:\\(Lorg\\/apache\\/lucene\\/util\\/Bits\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/ContainsPrefixTreeQuery\\$SmallDocSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$ContainsVisitor\\.access\\$000\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/ContainsPrefixTreeQuery\\$ContainsVisitor\\;Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/ContainsPrefixTreeQuery\\$SmallDocSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$SmallDocSet\\$1\\.nextDoc\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$SmallDocSet\\$1\\.advance\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$SmallDocSet\\.bits\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/Bits\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\$SmallDocSet\\.iterator\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/DocIdSetIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.ContainsPrefixTreeQuery\\.getDocIdSet\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/DocIdSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.HeatmapFacetCounter\\.calcFacets\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/PrefixTreeStrategy\\;Lorg\\/apache\\/lucene\\/index\\/IndexReaderContext\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;Lorg\\/locationtech\\/spatial4j\\/shape\\/Shape\\;II\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/HeatmapFacetCounter\\$Heatmap\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.IntersectsPrefixTreeQuery\\$1\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.IntersectsPrefixTreeQuery\\$1\\.visitPrefix\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.IntersectsPrefixTreeQuery\\$1\\.visitLeaf\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.IntersectsPrefixTreeQuery\\.getDocIdSet\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/DocIdSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.NumberRangePrefixTreeStrategy\\.calcFacets\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReaderContext\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/NumberRangePrefixTree\\$UnitNRShape\\;Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/NumberRangePrefixTree\\$UnitNRShape\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/NumberRangePrefixTreeStrategy\\$Facets\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.NumberRangePrefixTreeStrategy\\.calcFacets\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReaderContext\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;Lorg\\/locationtech\\/spatial4j\\/shape\\/Shape\\;I\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/NumberRangePrefixTreeStrategy\\$Facets\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.PrefixTreeFacetCounter\\$2\\$1\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.PrefixTreeFacetCounter\\$2\\$1\\.finish\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/DocIdSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.PrefixTreeFacetCounter\\$2\\$1\\.visitPrefix\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.PrefixTreeFacetCounter\\$2\\$1\\.visitLeaf\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.PrefixTreeFacetCounter\\$2\\$1\\.countDocsAtThisTerm\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.PrefixTreeFacetCounter\\$2\\$1\\.hasDocsAtThisTerm\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.PrefixTreeFacetCounter\\$2\\.getDocIdSet\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/DocIdSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.PrefixTreeFacetCounter\\.compute\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/PrefixTreeStrategy\\;Lorg\\/apache\\/lucene\\/index\\/IndexReaderContext\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;Lorg\\/locationtech\\/spatial4j\\/shape\\/Shape\\;ILorg\\/apache\\/lucene\\/spatial\\/prefix\\/PrefixTreeFacetCounter\\$FacetVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.PrefixTreeFacetCounter\\.compute\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/PrefixTreeStrategy\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;Lorg\\/locationtech\\/spatial4j\\/shape\\/Shape\\;ILorg\\/apache\\/lucene\\/spatial\\/prefix\\/PrefixTreeFacetCounter\\$FacetVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.PrefixTreeStrategy\\.calcFacets\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReaderContext\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;Lorg\\/locationtech\\/spatial4j\\/shape\\/Shape\\;II\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/HeatmapFacetCounter\\$Heatmap\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.WithinPrefixTreeQuery\\$1\\.visitPrefix\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.WithinPrefixTreeQuery\\$1\\.visitLeaf\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.WithinPrefixTreeQuery\\$1\\.visitScanned\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/Cell\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.WithinPrefixTreeQuery\\.getDocIdSet\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/DocIdSet\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.tree\\.DateRangePrefixTree\\.parseUnitShape\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/NumberRangePrefixTree\\$UnitNRShape\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.tree\\.DateRangePrefixTree\\.parseCalendar\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Calendar\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.tree\\.NumberRangePrefixTree\\$NRCell\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.tree\\.NumberRangePrefixTree\\$SpanUnitsNRShape\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.tree\\.NumberRangePrefixTree\\.parseShape\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/NumberRangePrefixTree\\$NRShape\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.prefix\\.tree\\.NumberRangePrefixTree\\.parseUnitShape\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/prefix\\/tree\\/NumberRangePrefixTree\\$UnitNRShape\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.query\\.SpatialArgs\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.text.ParseException", 
   "org.locationtech.spatial4j.exception.InvalidShapeException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.query\\.SpatialArgsParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Lorg\\/locationtech\\/spatial4j\\/context\\/SpatialContext\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/query\\/SpatialArgs\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.query\\.SpatialArgsParser\\.parseShape\\:\\(Ljava\\/lang\\/String\\;Lorg\\/locationtech\\/spatial4j\\/context\\/SpatialContext\\;\\)Lorg\\/locationtech\\/spatial4j\\/shape\\/Shape\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.serialized\\.SerializedDVStrategy\\$1\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.serialized\\.SerializedDVStrategy\\$PredicateValueSourceQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.serialized\\.SerializedDVStrategy\\$PredicateValueSourceQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.serialized\\.SerializedDVStrategy\\$ShapeDocValueSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.serialized\\.SerializedDVStrategy\\$ShapeDocValueSource\\$1\\.value\\:\\(\\)Lorg\\/locationtech\\/spatial4j\\/shape\\/Shape\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.serialized\\.SerializedDVStrategy\\$ShapeDocValueSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/ShapeValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.spatial4j\\.Geo3dBinaryCodec\\.readShape\\:\\(Ljava\\/io\\/DataInput\\;\\)Lorg\\/locationtech\\/spatial4j\\/shape\\/Shape\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.spatial4j\\.Geo3dBinaryCodec\\.writeShape\\:\\(Ljava\\/io\\/DataOutput\\;Lorg\\/locationtech\\/spatial4j\\/shape\\/Shape\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.spatial4j\\.Geo3dBinaryCodec\\.readPoint\\:\\(Ljava\\/io\\/DataInput\\;\\)Lorg\\/locationtech\\/spatial4j\\/shape\\/Point\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.spatial4j\\.Geo3dBinaryCodec\\.writePoint\\:\\(Ljava\\/io\\/DataOutput\\;Lorg\\/locationtech\\/spatial4j\\/shape\\/Point\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.spatial4j\\.Geo3dBinaryCodec\\.readRect\\:\\(Ljava\\/io\\/DataInput\\;\\)Lorg\\/locationtech\\/spatial4j\\/shape\\/Rectangle\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.spatial4j\\.Geo3dBinaryCodec\\.writeRect\\:\\(Ljava\\/io\\/DataOutput\\;Lorg\\/locationtech\\/spatial4j\\/shape\\/Rectangle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.spatial4j\\.Geo3dBinaryCodec\\.readCircle\\:\\(Ljava\\/io\\/DataInput\\;\\)Lorg\\/locationtech\\/spatial4j\\/shape\\/Circle\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.spatial4j\\.Geo3dBinaryCodec\\.writeCircle\\:\\(Ljava\\/io\\/DataOutput\\;Lorg\\/locationtech\\/spatial4j\\/shape\\/Circle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.spatial4j\\.Geo3dBinaryCodec\\.readCollection\\:\\(Ljava\\/io\\/DataInput\\;\\)Lorg\\/locationtech\\/spatial4j\\/shape\\/ShapeCollection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.spatial4j\\.Geo3dBinaryCodec\\.writeCollection\\:\\(Ljava\\/io\\/DataOutput\\;Lorg\\/locationtech\\/spatial4j\\/shape\\/ShapeCollection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.CachingDoubleValueSource\\$1\\.doubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.CachingDoubleValueSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.CachingDoubleValueSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.CachingDoubleValueSource\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;ILorg\\/apache\\/lucene\\/search\\/Explanation\\;\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.CachingDoubleValueSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.DistanceToShapeValueSource\\$1\\.doubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.DistanceToShapeValueSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.DistanceToShapeValueSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.DistanceToShapeValueSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ReciprocalDoubleValuesSource\\$1\\.doubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ReciprocalDoubleValuesSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ReciprocalDoubleValuesSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ReciprocalDoubleValuesSource\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;ILorg\\/apache\\/lucene\\/search\\/Explanation\\;\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ReciprocalDoubleValuesSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeAreaValueSource\\$1\\.doubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeAreaValueSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeAreaValueSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeAreaValueSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeFieldCacheDistanceValueSource\\$1\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial\\/util\\/ShapeFieldCacheDistanceValueSource\\;Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeFieldCacheDistanceValueSource\\$1\\.doubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeFieldCacheDistanceValueSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeFieldCacheDistanceValueSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeFieldCacheDistanceValueSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeFieldCacheProvider\\.getCache\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;\\)Lorg\\/apache\\/lucene\\/spatial\\/util\\/ShapeFieldCache\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeValuesPredicate\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.util\\.ShapeValuesPredicate\\.iterator\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DocIdSetIterator\\;\\)Lorg\\/apache\\/lucene\\/search\\/TwoPhaseIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.vector\\.DistanceValueSource\\$1\\.doubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.vector\\.DistanceValueSource\\$1\\.advanceExact\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.vector\\.DistanceValueSource\\.getValues\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValues\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.vector\\.DistanceValueSource\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)Lorg\\/apache\\/lucene\\/search\\/DoubleValuesSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.vector\\.PointVectorStrategy\\$DistanceRangeQuery\\$1\\$1\\.matches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.vector\\.PointVectorStrategy\\$DistanceRangeQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.vector\\.PointVectorStrategy\\$DistanceRangeQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial\\.vector\\.PointVectorStrategy\\$DistanceRangeQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.Geo3DPointDistanceComparator\\.compareBottom\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.Geo3DPointDistanceComparator\\.copy\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.Geo3DPointDistanceComparator\\.getLeafComparator\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/LeafFieldComparator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.Geo3DPointDistanceComparator\\.compareTop\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.Geo3DPointDistanceComparator\\.computeMinimumDistance\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.Geo3DPointOutsideDistanceComparator\\.compareBottom\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.Geo3DPointOutsideDistanceComparator\\.copy\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.Geo3DPointOutsideDistanceComparator\\.getLeafComparator\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/LeafFieldComparator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.Geo3DPointOutsideDistanceComparator\\.compareTop\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.Geo3DPointOutsideDistanceComparator\\.computeMinimumDistance\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.PointInGeo3DShapeQuery\\$1\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.PointInGeo3DShapeQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.BasePlanetObject\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoBaseCompositeAreaShape\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoBaseCompositeMembershipShape\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoBaseCompositeShape\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoBaseCompositeShape\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoComplexPolygon\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoComplexPolygon\\.readPointsList\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoComplexPolygon\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoComplexPolygon\\.writePointsList\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoCompositeAreaShape\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoCompositeMembershipShape\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoCompositePolygon\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoConcavePolygon\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoConcavePolygon\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoConvexPolygon\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoConvexPolygon\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoDegenerateHorizontalLine\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoDegenerateHorizontalLine\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoDegenerateLatitudeZone\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoDegenerateLatitudeZone\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoDegenerateLongitudeSlice\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoDegenerateLongitudeSlice\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoDegeneratePath\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoDegeneratePath\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoDegeneratePoint\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoDegenerateVerticalLine\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoDegenerateVerticalLine\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoExactCircle\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoExactCircle\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoLatitudeZone\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoLatitudeZone\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoLongitudeSlice\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoLongitudeSlice\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoNorthLatitudeZone\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoNorthLatitudeZone\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoNorthRectangle\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoNorthRectangle\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoPoint\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoPoint\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.spatial3d.geom.GeoPolygonFactory$TileException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoPolygonFactory\\.generateGeoPolygon\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPoint\\;Z\\)Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPolygon\\;"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.spatial3d.geom.GeoPolygonFactory$TileException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoPolygonFactory\\.buildPolygonShape\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoCompositePolygon\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPolygonFactory\\$MutableBoolean\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/util\\/List\\;Ljava\\/util\\/BitSet\\;IILorg\\/apache\\/lucene\\/spatial3d\\/geom\\/SidedPlane\\;Ljava\\/util\\/List\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPoint\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.spatial3d.geom.GeoPolygonFactory$TileException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoPolygonFactory\\.makeConcavePolygon\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoCompositePolygon\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPolygonFactory\\$MutableBoolean\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPolygonFactory\\$EdgeBuffer\\;Ljava\\/util\\/List\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPoint\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.lucene.spatial3d.geom.GeoPolygonFactory$TileException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoPolygonFactory\\.findConvexPolygon\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPolygonFactory\\$Edge\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoCompositePolygon\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPolygonFactory\\$EdgeBuffer\\;Ljava\\/util\\/List\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPoint\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoRectangle\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoRectangle\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoS2Shape\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoS2Shape\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoSouthLatitudeZone\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoSouthLatitudeZone\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoSouthRectangle\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoSouthRectangle\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoStandardCircle\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoStandardCircle\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoStandardPath\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoStandardPath\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWideDegenerateHorizontalLine\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWideDegenerateHorizontalLine\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWideLongitudeSlice\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWideLongitudeSlice\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWideNorthRectangle\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWideNorthRectangle\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWideRectangle\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWideRectangle\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWideSouthRectangle\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWideSouthRectangle\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWorld\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.GeoWorld\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.PlanetModel\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.PlanetModel\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writePlanetObject\\:\\(Ljava\\/io\\/OutputStream\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetObject\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readPlanetObject\\:\\(Ljava\\/io\\/InputStream\\;\\)Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetObject\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeObject\\:\\(Ljava\\/io\\/OutputStream\\;Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/SerializableObject\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readObject\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/SerializableObject\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readObject\\:\\(Ljava\\/io\\/InputStream\\;\\)Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/SerializableObject\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readObject\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/SerializableObject\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readObject\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/SerializableObject\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeClass\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readClass\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeString\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readString\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writePointArray\\:\\(Ljava\\/io\\/OutputStream\\;\\[Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPoint\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writePointArray\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readPointArray\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)\\[Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPoint\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writePolygonArray\\:\\(Ljava\\/io\\/OutputStream\\;\\[Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPolygon\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writePolygonArray\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readPolygonArray\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)\\[Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/GeoPolygon\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeHomogeneousArray\\:\\(Ljava\\/io\\/OutputStream\\;\\[Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/SerializableObject\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeHomogeneousArray\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readHomogeneousArray\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/Class\\;\\)\\[Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/SerializableObject\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeHeterogeneousArray\\:\\(Ljava\\/io\\/OutputStream\\;\\[Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/SerializableObject\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeHeterogeneousArray\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readHeterogeneousArray\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/Class\\;\\)\\[Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/SerializableObject\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeBitSet\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/util\\/BitSet\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readBitSet\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/util\\/BitSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeByteArray\\:\\(Ljava\\/io\\/OutputStream\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readByteArray\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeDouble\\:\\(Ljava\\/io\\/OutputStream\\;D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readDouble\\:\\(Ljava\\/io\\/InputStream\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeLong\\:\\(Ljava\\/io\\/OutputStream\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readLong\\:\\(Ljava\\/io\\/InputStream\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeInt\\:\\(Ljava\\/io\\/OutputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readInt\\:\\(Ljava\\/io\\/InputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.writeBoolean\\:\\(Ljava\\/io\\/OutputStream\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.SerializableObject\\.readBoolean\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.StandardXYZSolid\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.StandardXYZSolid\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.XYdZSolid\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.XYdZSolid\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.XdYZSolid\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.XdYZSolid\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.XdYdZSolid\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.XdYdZSolid\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.dXYZSolid\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.dXYZSolid\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.dXYdZSolid\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.dXYdZSolid\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.dXdYZSolid\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.dXdYZSolid\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.dXdYdZSolid\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/spatial3d\\/geom\\/PlanetModel\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.spatial3d\\.geom\\.dXdYdZSolid\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.Dictionary\\.getEntryIterator\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.DirectSpellChecker\\.suggestSimilar\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;ILorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)\\[Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestWord\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.DirectSpellChecker\\.suggestSimilar\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;ILorg\\/apache\\/lucene\\/index\\/IndexReader\\;Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestMode\\;\\)\\[Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestWord\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.DirectSpellChecker\\.suggestSimilar\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;ILorg\\/apache\\/lucene\\/index\\/IndexReader\\;Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestMode\\;F\\)\\[Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestWord\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.DirectSpellChecker\\.suggestSimilar\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;ILorg\\/apache\\/lucene\\/index\\/IndexReader\\;IIFLorg\\/apache\\/lucene\\/util\\/CharsRefBuilder\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.HighFrequencyDictionary\\$HighFrequencyIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/spell\\/HighFrequencyDictionary\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.HighFrequencyDictionary\\$HighFrequencyIterator\\.next\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.HighFrequencyDictionary\\.getEntryIterator\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.LuceneDictionary\\.getEntryIterator\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.PlainTextDictionary\\$FileIterator\\.next\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.PlainTextDictionary\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.PlainTextDictionary\\.getEntryIterator\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Lorg\\/apache\\/lucene\\/search\\/spell\\/StringDistance\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Lorg\\/apache\\/lucene\\/search\\/spell\\/StringDistance\\;Ljava\\/util\\/Comparator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.setSpellIndex\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.suggestSimilar\\:\\(Ljava\\/lang\\/String\\;I\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.suggestSimilar\\:\\(Ljava\\/lang\\/String\\;IF\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.suggestSimilar\\:\\(Ljava\\/lang\\/String\\;ILorg\\/apache\\/lucene\\/index\\/IndexReader\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestMode\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.suggestSimilar\\:\\(Ljava\\/lang\\/String\\;ILorg\\/apache\\/lucene\\/index\\/IndexReader\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestMode\\;F\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.clearIndex\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.exist\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.indexDictionary\\:\\(Lorg\\/apache\\/lucene\\/search\\/spell\\/Dictionary\\;Lorg\\/apache\\/lucene\\/index\\/IndexWriterConfig\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.releaseSearcher\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.swapSearcher\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.SpellChecker\\.createSearcher\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;\\)Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.WordBreakSpellChecker\\.suggestWordBreaks\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;ILorg\\/apache\\/lucene\\/index\\/IndexReader\\;Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestMode\\;Lorg\\/apache\\/lucene\\/search\\/spell\\/WordBreakSpellChecker\\$BreakSuggestionSortMethod\\;\\)\\[\\[Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestWord\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.WordBreakSpellChecker\\.suggestWordCombinations\\:\\(\\[Lorg\\/apache\\/lucene\\/index\\/Term\\;ILorg\\/apache\\/lucene\\/index\\/IndexReader\\;Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestMode\\;\\)\\[Lorg\\/apache\\/lucene\\/search\\/spell\\/CombineSuggestion\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.WordBreakSpellChecker\\.generateBreakUpSuggestions\\:\\(Lorg\\/apache\\/lucene\\/index\\/Term\\;Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;III\\[Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestWord\\;Ljava\\/util\\/Queue\\;ILorg\\/apache\\/lucene\\/search\\/spell\\/WordBreakSpellChecker\\$BreakSuggestionSortMethod\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.spell\\.WordBreakSpellChecker\\.generateSuggestWord\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/spell\\/SuggestWord\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.BitsProducer\\.getBits\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/util\\/Bits\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.BufferedInputIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.BufferedInputIterator\\.next\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.DocumentDictionary\\$DocumentInputIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/DocumentDictionary\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.DocumentDictionary\\$DocumentInputIterator\\.next\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.DocumentDictionary\\$DocumentInputIterator\\.getWeight\\:\\(Lorg\\/apache\\/lucene\\/document\\/Document\\;I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.DocumentDictionary\\.getEntryIterator\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.DocumentValueSourceDictionary\\$DocumentValueSourceInputIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/DocumentValueSourceDictionary\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.DocumentValueSourceDictionary\\$DocumentValueSourceInputIterator\\.getWeight\\:\\(Lorg\\/apache\\/lucene\\/document\\/Document\\;I\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.DocumentValueSourceDictionary\\.getEntryIterator\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.FileDictionary\\$FileIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/FileDictionary\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.FileDictionary\\$FileIterator\\.next\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.FileDictionary\\$FileIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/FileDictionary\\;Lorg\\/apache\\/lucene\\/search\\/suggest\\/FileDictionary\\$1\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.InputIterator\\$InputIteratorWrapper\\.next\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.Lookup\\.build\\:\\(Lorg\\/apache\\/lucene\\/search\\/spell\\/Dictionary\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.Lookup\\.load\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.Lookup\\.store\\:\\(Ljava\\/io\\/OutputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.Lookup\\.getCount\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.Lookup\\.build\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.Lookup\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;ZI\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.Lookup\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/util\\/Set\\;ZI\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.Lookup\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;Lorg\\/apache\\/lucene\\/search\\/BooleanQuery\\;IZZ\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.Lookup\\.store\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.Lookup\\.load\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.SortedInputIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.SortedInputIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;Ljava\\/util\\/Comparator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.SortedInputIterator\\.next\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.SortedInputIterator\\.sort\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/OfflineSorter\\$ByteSequencesReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.SortedInputIterator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.SortedInputIterator\\.encode\\:\\(Lorg\\/apache\\/lucene\\/util\\/OfflineSorter\\$ByteSequencesWriter\\;Lorg\\/apache\\/lucene\\/store\\/ByteArrayDataOutput\\;\\[BLorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Ljava\\/util\\/Set\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.UnsortedInputIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.UnsortedInputIterator\\.next\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;IZZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;IZZZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.getDirectory\\:\\(Ljava\\/nio\\/file\\/Path\\;\\)Lorg\\/apache\\/lucene\\/store\\/Directory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.build\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.commit\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.ensureOpen\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.add\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Ljava\\/util\\/Set\\;JLorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.update\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Ljava\\/util\\/Set\\;JLorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.buildDocument\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Ljava\\/util\\/Set\\;JLorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)Lorg\\/apache\\/lucene\\/document\\/Document\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.refresh\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/util\\/Set\\;ZI\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;IZZ\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/util\\/Set\\;IZZ\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.getLastTokenQuery\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/util\\/Map\\;IZZ\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;Lorg\\/apache\\/lucene\\/search\\/BooleanQuery\\;IZZ\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.createResults\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;Lorg\\/apache\\/lucene\\/search\\/TopFieldDocs\\;ILjava\\/lang\\/CharSequence\\;ZLjava\\/util\\/Set\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.highlight\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Set\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.store\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.load\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingInfixSuggester\\.getCount\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingSuggester\\.build\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingSuggester\\.store\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingSuggester\\.load\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingSuggester\\.getFullPrefixPaths\\:\\(Ljava\\/util\\/List\\;Lorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingSuggester\\.toAutomaton\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/analysis\\/TokenStreamToAutomaton\\;\\)Lorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.AnalyzingSuggester\\.toLookupAutomaton\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.BlendedInfixSuggester\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.BlendedInfixSuggester\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;ILorg\\/apache\\/lucene\\/search\\/suggest\\/analyzing\\/BlendedInfixSuggester\\$BlenderType\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.BlendedInfixSuggester\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;Lorg\\/apache\\/lucene\\/analysis\\/Analyzer\\;ILorg\\/apache\\/lucene\\/search\\/suggest\\/analyzing\\/BlendedInfixSuggester\\$BlenderType\\;ILjava\\/lang\\/Double\\;ZZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.BlendedInfixSuggester\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/util\\/Set\\;ZI\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.BlendedInfixSuggester\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/util\\/Set\\;IZZ\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.BlendedInfixSuggester\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/util\\/Map\\;IZZ\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.BlendedInfixSuggester\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;Lorg\\/apache\\/lucene\\/search\\/BooleanQuery\\;IZZ\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.BlendedInfixSuggester\\.createResults\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;Lorg\\/apache\\/lucene\\/search\\/TopFieldDocs\\;ILjava\\/lang\\/CharSequence\\;ZLjava\\/util\\/Set\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.BlendedInfixSuggester\\.createCoefficient\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ILjava\\/util\\/Set\\;Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.FSTUtil\\.intersectPrefixPaths\\:\\(Lorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.FreeTextSuggester\\.build\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.FreeTextSuggester\\.build\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.FreeTextSuggester\\.store\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.FreeTextSuggester\\.load\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.FreeTextSuggester\\.lookup\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/util\\/Set\\;I\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.FreeTextSuggester\\.lookupPrefix\\:\\(Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\;Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\$BytesReader\\;Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\$Arc\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.FuzzySuggester\\.getFullPrefixPaths\\:\\(Ljava\\/util\\/List\\;Lorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.SuggestStopFilter\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.SuggestStopFilter\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.SuggestStopFilter\\.incrementToken\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.analyzing\\.SuggestStopFilterFactory\\.inform\\:\\(Lorg\\/apache\\/lucene\\/analysis\\/util\\/ResourceLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionFieldsConsumer\\$CompletionTermWriter\\.finish\\:\\(Lorg\\/apache\\/lucene\\/store\\/IndexOutput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionFieldsConsumer\\$CompletionTermWriter\\.write\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/index\\/TermsEnum\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionFieldsConsumer\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/codecs\\/PostingsFormat\\;Lorg\\/apache\\/lucene\\/index\\/SegmentWriteState\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionFieldsConsumer\\.write\\:\\(Lorg\\/apache\\/lucene\\/index\\/Fields\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionFieldsConsumer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionFieldsProducer\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/index\\/SegmentReadState\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionFieldsProducer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionFieldsProducer\\.checkIntegrity\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionFieldsProducer\\.getMergeInstance\\:\\(\\)Lorg\\/apache\\/lucene\\/codecs\\/FieldsProducer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionFieldsProducer\\.terms\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/lucene\\/index\\/Terms\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionPostingsFormat\\.fieldsConsumer\\:\\(Lorg\\/apache\\/lucene\\/index\\/SegmentWriteState\\;\\)Lorg\\/apache\\/lucene\\/codecs\\/FieldsConsumer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionPostingsFormat\\.fieldsProducer\\:\\(Lorg\\/apache\\/lucene\\/index\\/SegmentReadState\\;\\)Lorg\\/apache\\/lucene\\/codecs\\/FieldsProducer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionQuery\\.rewrite\\:\\(Lorg\\/apache\\/lucene\\/index\\/IndexReader\\;\\)Lorg\\/apache\\/lucene\\/search\\/Query\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionScorer\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/CompletionWeight\\;Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/NRTSuggester\\;Lorg\\/apache\\/lucene\\/index\\/LeafReader\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;ZLorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionScorer\\.score\\:\\(Lorg\\/apache\\/lucene\\/search\\/LeafCollector\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionTerms\\.suggester\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/NRTSuggester\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionTokenStream\\.incrementToken\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionTokenStream\\.toAutomaton\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionTokenStream\\.toAutomaton\\:\\(Z\\)Lorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionWeight\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/CompletionQuery\\;Lorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionWeight\\.bulkScorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/BulkScorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionWeight\\.scorer\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)Lorg\\/apache\\/lucene\\/search\\/Scorer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionWeight\\.explain\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;I\\)Lorg\\/apache\\/lucene\\/search\\/Explanation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionsTermsReader\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/IndexInput\\;JJJB\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.CompletionsTermsReader\\.suggester\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/NRTSuggester\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.ContextQuery\\$ContextCompletionWeight\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/CompletionQuery\\;Lorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/CompletionWeight\\;Ljava\\/util\\/Map\\;\\[I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.ContextQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.ContextSuggestField\\$PrefixTokenFilter\\.incrementToken\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.ContextSuggestField\\$PrefixTokenFilter\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.FuzzyCompletionQuery\\$FuzzyCompletionWeight\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/CompletionQuery\\;Lorg\\/apache\\/lucene\\/util\\/automaton\\/Automaton\\;Ljava\\/util\\/Set\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.FuzzyCompletionQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.NRTSuggester\\$PayLoadProcessor\\.make\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;II\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.NRTSuggester\\.lookup\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/CompletionScorer\\;Lorg\\/apache\\/lucene\\/util\\/Bits\\;Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/TopSuggestDocsCollector\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.NRTSuggester\\.load\\:\\(Lorg\\/apache\\/lucene\\/store\\/IndexInput\\;\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/NRTSuggester\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.NRTSuggesterBuilder\\.addEntry\\:\\(ILorg\\/apache\\/lucene\\/util\\/BytesRef\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.NRTSuggesterBuilder\\.finishTerm\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.NRTSuggesterBuilder\\.store\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.PrefixCompletionQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.RegexCompletionQuery\\.createWeight\\:\\(Lorg\\/apache\\/lucene\\/search\\/IndexSearcher\\;ZF\\)Lorg\\/apache\\/lucene\\/search\\/Weight\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.SuggestIndexSearcher\\.suggest\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/CompletionQuery\\;IZ\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/TopSuggestDocs\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.SuggestIndexSearcher\\.suggest\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/CompletionQuery\\;Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/TopSuggestDocsCollector\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.TopSuggestDocsCollector\\.doSetNextReader\\:\\(Lorg\\/apache\\/lucene\\/index\\/LeafReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.TopSuggestDocsCollector\\.collect\\:\\(ILjava\\/lang\\/CharSequence\\;Ljava\\/lang\\/CharSequence\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.TopSuggestDocsCollector\\.get\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/document\\/TopSuggestDocs\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.document\\.TopSuggestDocsCollector\\.collect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.BytesRefSorter\\.add\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.BytesRefSorter\\.iterator\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRefIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.ExternalRefSorter\\$ByteSequenceIterator\\.next\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.ExternalRefSorter\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/util\\/OfflineSorter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.ExternalRefSorter\\.add\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.ExternalRefSorter\\.iterator\\:\\(\\)Lorg\\/apache\\/lucene\\/util\\/BytesRefIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.ExternalRefSorter\\.closeWriter\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.ExternalRefSorter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.FSTCompletion\\.lookupSortedAlphabetically\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;I\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.FSTCompletion\\.lookupSortedByWeight\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;IZ\\)Ljava\\/util\\/ArrayList\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.FSTCompletion\\.descendWithPrefix\\:\\(Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\$Arc\\;Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.FSTCompletion\\.collect\\:\\(Ljava\\/util\\/List\\;IILorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\$Arc\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.FSTCompletionBuilder\\.add\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.FSTCompletionBuilder\\.build\\:\\(\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/fst\\/FSTCompletion\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.FSTCompletionBuilder\\.buildAutomaton\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/fst\\/BytesRefSorter\\;\\)Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.FSTCompletionLookup\\.build\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.FSTCompletionLookup\\.store\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.FSTCompletionLookup\\.load\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.WFSTCompletionLookup\\$WFSTInputIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/lucene\\/store\\/Directory\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.WFSTCompletionLookup\\$WFSTInputIterator\\.encode\\:\\(Lorg\\/apache\\/lucene\\/util\\/OfflineSorter\\$ByteSequencesWriter\\;Lorg\\/apache\\/lucene\\/store\\/ByteArrayDataOutput\\;\\[BLorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Ljava\\/util\\/Set\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.WFSTCompletionLookup\\.build\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.WFSTCompletionLookup\\.store\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.WFSTCompletionLookup\\.load\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.fst\\.WFSTCompletionLookup\\.lookupPrefix\\:\\(Lorg\\/apache\\/lucene\\/util\\/BytesRef\\;Lorg\\/apache\\/lucene\\/util\\/fst\\/FST\\$Arc\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.jaspell\\.JaspellLookup\\.build\\:\\(Lorg\\/apache\\/lucene\\/search\\/suggest\\/InputIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.jaspell\\.JaspellLookup\\.readRecursively\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;Lorg\\/apache\\/lucene\\/search\\/suggest\\/jaspell\\/JaspellTernarySearchTrie\\$TSTNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.jaspell\\.JaspellLookup\\.writeRecursively\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;Lorg\\/apache\\/lucene\\/search\\/suggest\\/jaspell\\/JaspellTernarySearchTrie\\$TSTNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.jaspell\\.JaspellLookup\\.store\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataOutput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.jaspell\\.JaspellLookup\\.load\\:\\(Lorg\\/apache\\/lucene\\/store\\/DataInput\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.jaspell\\.JaspellTernarySearchTrie\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.jaspell\\.JaspellTernarySearchTrie\\.\\<init\\>\\:\\(Ljava\\/nio\\/file\\/Path\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.lucene\\.search\\.suggest\\.jaspell\\.JaspellTernarySearchTrie\\.getOrCreateNode\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Lorg\\/apache\\/lucene\\/search\\/suggest\\/jaspell\\/JaspellTernarySearchTrie\\$TSTNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.elasticsearch\\.cli\\.MultiCommand\\.execute\\:\\(Lorg\\/elasticsearch\\/cli\\/Terminal\\;Ljoptsimple\\/OptionSet\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.elasticsearch\\.cli\\.MultiCommand\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "joptsimple\\.OptionParser\\.printHelpOn\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "joptsimple\\.OptionParser\\.printHelpOn\\:\\(Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongLongHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharArrayDeque\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortCharHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.HashOrderMixing\\$2\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortIntHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharStack\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharIntHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortFloatHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongIntHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharCharHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.HashOrderMixing\\$1\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongArrayList\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongFloatHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntFloatHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharLongHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongByteHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortArrayList\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.RandomizedHashOrderMixer\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.FloatStack\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongShortHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongCharHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortStack\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortDoubleHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectObjectHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.HashOrderMixing\\$Strategy\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.HashOrderMixing\\$Strategy\\$3\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.carrotsearch.hppc.BufferAllocationException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ArraySizingStrategy\\.grow\\:\\(III\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectArrayList\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectIntHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ByteArrayList\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntShortHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntHashSet\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectCharHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.FloatArrayDeque\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharHashSet\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortHashSet\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharObjectHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongDoubleHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectLongHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectHashSet\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntStack\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongHashSet\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.FloatArrayList\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongStack\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectByteHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharDoubleHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharByteHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntLongHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortLongHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.HashOrderMixing\\$Strategy\\$2\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ByteStack\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectArrayDeque\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortObjectHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongArrayDeque\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectFloatHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.HashOrderMixing\\$3\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharShortHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.DoubleArrayDeque\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortByteHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectDoubleHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntIntHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ByteArrayDeque\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.DoubleStack\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectStack\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharFloatHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.DoubleArrayList\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortShortHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntArrayList\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntByteHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntCharHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ShortArrayDeque\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.CharArrayList\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.ObjectShortHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.LongObjectHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntArrayDeque\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntObjectHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.carrotsearch\\.hppc\\.IntDoubleHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.AssembledChronology\\.getDateTimeMillis\\:\\(IIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.AssembledChronology\\.getDateTimeMillis\\:\\(IIIIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.AssembledChronology\\.getDateTimeMillis\\:\\(JIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.AssembledChronology\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterSet\\.select\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/joda\\/time\\/convert\\/Converter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormat\\$StyleFormatter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormat\\$StyleFormatter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$TwoDigitYear\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$TwoDigitYear\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimePrinter\\.printTo\\:\\(Ljava\\/io\\/Writer\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimePrinter\\.printTo\\:\\(Ljava\\/io\\/Writer\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormatterBuilder\\$PluralAffix\\.printTo\\:\\(Ljava\\/io\\/Writer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.LocalDateTime\\$Property\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.LocalDateTime\\$Property\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.EthiopicChronology\\.getDateTimeMillis\\:\\(IIIIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.EthiopicChronology\\.getDateTimeMillis\\:\\(IIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.JulianChronology\\.getDateMidnightMillis\\:\\(III\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.JulianChronology\\.getDateTimeMillis\\:\\(IIIIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.JulianChronology\\.getDateTimeMillis\\:\\(IIII\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$TimeZoneName\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$TimeZoneName\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormatterBuilder\\$SimpleAffix\\.printTo\\:\\(Ljava\\/io\\/Writer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\$PrecalculatedZone\\.readFrom\\:\\(Ljava\\/io\\/DataInput\\;Ljava\\/lang\\/String\\;\\)Lorg\\/joda\\/time\\/tz\\/DateTimeZoneBuilder\\$PrecalculatedZone\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\$PrecalculatedZone\\.writeTo\\:\\(Ljava\\/io\\/DataOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.YearMonth\\.toString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.base\\.AbstractDateTime\\.toString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.BaseChronology\\.getDateTimeMillis\\:\\(IIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.BaseChronology\\.getDateTimeMillis\\:\\(IIIIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.BaseChronology\\.getDateTimeMillis\\:\\(JIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.ZonedChronology\\.getDateTimeMillis\\:\\(IIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.ZonedChronology\\.getDateTimeMillis\\:\\(IIIIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.ZonedChronology\\.getDateTimeMillis\\:\\(JIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatter\\.printTo\\:\\(Ljava\\/io\\/Writer\\;Lorg\\/joda\\/time\\/ReadableInstant\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadableInstant\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatter\\.printTo\\:\\(Ljava\\/io\\/Writer\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatter\\.printTo\\:\\(Ljava\\/io\\/Writer\\;Lorg\\/joda\\/time\\/ReadablePartial\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$TextField\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$TextField\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormat\\$DynamicWordBased\\.printTo\\:\\(Ljava\\/io\\/Writer\\;Lorg\\/joda\\/time\\/ReadablePeriod\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormatterBuilder\\$PeriodFieldAffix\\.printTo\\:\\(Ljava\\/io\\/Writer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodPrinter\\.printTo\\:\\(Ljava\\/io\\/Writer\\;Lorg\\/joda\\/time\\/ReadablePeriod\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.LocalDate\\$Property\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.LocalDate\\$Property\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.MonthDay\\.toString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.ReadableDateTime\\.toString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.ReadableDateTime\\.toString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoCompiler\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoCompiler\\.writeZoneInfoMap\\:\\(Ljava\\/io\\/DataOutputStream\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoCompiler\\.compile\\:\\(Ljava\\/io\\/File\\;\\[Ljava\\/io\\/File\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoCompiler\\.writeZone\\:\\(Ljava\\/io\\/File\\;Lorg\\/joda\\/time\\/tz\\/DateTimeZoneBuilder\\;Lorg\\/joda\\/time\\/DateTimeZone\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoCompiler\\.parseDataFile\\:\\(Ljava\\/io\\/BufferedReader\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTime\\$Property\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTime\\$Property\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeZone\\$Stub\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeZone\\$Stub\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeZone\\$Stub\\.readResolve\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$Fraction\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$Fraction\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$Fraction\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$TimeZoneOffset\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$TimeZoneOffset\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.InternalPrinterDateTimePrinter\\.printTo\\:\\(Ljava\\/io\\/Writer\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.InternalPrinterDateTimePrinter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.InternalPrinterDateTimePrinter\\.printTo\\:\\(Ljava\\/io\\/Writer\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.InternalPrinterDateTimePrinter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormatterBuilder\\$CompositeAffix\\.printTo\\:\\(Ljava\\/io\\/Writer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormatterBuilder\\$RegExAffix\\.printTo\\:\\(Ljava\\/io\\/Writer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.LocalTime\\$Property\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.LocalTime\\$Property\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\$OfYear\\.readFrom\\:\\(Ljava\\/io\\/DataInput\\;\\)Lorg\\/joda\\/time\\/tz\\/DateTimeZoneBuilder\\$OfYear\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\$OfYear\\.writeTo\\:\\(Ljava\\/io\\/DataOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.base\\.BasePartial\\.toString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.BasicChronology\\.getDateTimeMillis\\:\\(IIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.BasicChronology\\.getDateTimeMillis\\:\\(IIIIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.IslamicChronology\\.getDateTimeMillis\\:\\(IIIIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.IslamicChronology\\.getDateTimeMillis\\:\\(IIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.LimitChronology\\.getDateTimeMillis\\:\\(IIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.LimitChronology\\.getDateTimeMillis\\:\\(IIIIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.LimitChronology\\.getDateTimeMillis\\:\\(JIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$CharacterLiteral\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$CharacterLiteral\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$PaddedNumber\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$PaddedNumber\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\.appendUnknownString\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormatter\\.printTo\\:\\(Ljava\\/io\\/Writer\\;Lorg\\/joda\\/time\\/ReadablePeriod\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.LocalDateTime\\.toString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\$DSTZone\\.readFrom\\:\\(Ljava\\/io\\/DataInput\\;Ljava\\/lang\\/String\\;\\)Lorg\\/joda\\/time\\/tz\\/DateTimeZoneBuilder\\$DSTZone\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\$DSTZone\\.writeTo\\:\\(Ljava\\/io\\/DataOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\.readFrom\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Lorg\\/joda\\/time\\/DateTimeZone\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\.readFrom\\:\\(Ljava\\/io\\/DataInput\\;Ljava\\/lang\\/String\\;\\)Lorg\\/joda\\/time\\/DateTimeZone\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\.writeMillis\\:\\(Ljava\\/io\\/DataOutput\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\.readMillis\\:\\(Ljava\\/io\\/DataInput\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\.writeTo\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\.writeTo\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/DataOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.GregorianChronology\\.getDateTimeMillis\\:\\(IIIIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.GregorianChronology\\.getDateTimeMillis\\:\\(IIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeUtils\\.setCurrentMillisSystem\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeUtils\\.setCurrentMillisFixed\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeUtils\\.setCurrentMillisOffset\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeUtils\\.setCurrentMillisProvider\\:\\(Lorg\\/joda\\/time\\/DateTimeUtils\\$MillisProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeUtils\\.checkPermission\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$Composite\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$Composite\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$TimeZoneId\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$TimeZoneId\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.InternalPrinter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.InternalPrinter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormatterBuilder\\$Composite\\.printTo\\:\\(Ljava\\/io\\/Writer\\;Lorg\\/joda\\/time\\/ReadablePeriod\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormatterBuilder\\$Separator\\.printTo\\:\\(Ljava\\/io\\/Writer\\;Lorg\\/joda\\/time\\/ReadablePeriod\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.LocalTime\\.toString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.MutableDateTime\\$Property\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.MutableDateTime\\$Property\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.CopticChronology\\.getDateTimeMillis\\:\\(IIIIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.CopticChronology\\.getDateTimeMillis\\:\\(IIII\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$UnpaddedNumber\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$UnpaddedNumber\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimePrinterInternalPrinter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimePrinterInternalPrinter\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormatterBuilder\\$FieldFormatter\\.printTo\\:\\(Ljava\\/io\\/Writer\\;Lorg\\/joda\\/time\\/ReadablePeriod\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\$Recurrence\\.readFrom\\:\\(Ljava\\/io\\/DataInput\\;\\)Lorg\\/joda\\/time\\/tz\\/DateTimeZoneBuilder\\$Recurrence\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.DateTimeZoneBuilder\\$Recurrence\\.writeTo\\:\\(Ljava\\/io\\/DataOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.GJChronology\\.getDateTimeMillis\\:\\(IIII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.GJChronology\\.getDateTimeMillis\\:\\(IIIIIII\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.ISOChronology\\$Stub\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.chrono\\.ISOChronology\\$Stub\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.addInstantConverter\\:\\(Lorg\\/joda\\/time\\/convert\\/InstantConverter\\;\\)Lorg\\/joda\\/time\\/convert\\/InstantConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.removeInstantConverter\\:\\(Lorg\\/joda\\/time\\/convert\\/InstantConverter\\;\\)Lorg\\/joda\\/time\\/convert\\/InstantConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.checkAlterInstantConverters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.addPartialConverter\\:\\(Lorg\\/joda\\/time\\/convert\\/PartialConverter\\;\\)Lorg\\/joda\\/time\\/convert\\/PartialConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.removePartialConverter\\:\\(Lorg\\/joda\\/time\\/convert\\/PartialConverter\\;\\)Lorg\\/joda\\/time\\/convert\\/PartialConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.checkAlterPartialConverters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.addDurationConverter\\:\\(Lorg\\/joda\\/time\\/convert\\/DurationConverter\\;\\)Lorg\\/joda\\/time\\/convert\\/DurationConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.removeDurationConverter\\:\\(Lorg\\/joda\\/time\\/convert\\/DurationConverter\\;\\)Lorg\\/joda\\/time\\/convert\\/DurationConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.checkAlterDurationConverters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.addPeriodConverter\\:\\(Lorg\\/joda\\/time\\/convert\\/PeriodConverter\\;\\)Lorg\\/joda\\/time\\/convert\\/PeriodConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.removePeriodConverter\\:\\(Lorg\\/joda\\/time\\/convert\\/PeriodConverter\\;\\)Lorg\\/joda\\/time\\/convert\\/PeriodConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.checkAlterPeriodConverters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.addIntervalConverter\\:\\(Lorg\\/joda\\/time\\/convert\\/IntervalConverter\\;\\)Lorg\\/joda\\/time\\/convert\\/IntervalConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.removeIntervalConverter\\:\\(Lorg\\/joda\\/time\\/convert\\/IntervalConverter\\;\\)Lorg\\/joda\\/time\\/convert\\/IntervalConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.convert\\.ConverterManager\\.checkAlterIntervalConverters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateMidnight\\$Property\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateMidnight\\$Property\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeZone\\.setDefault\\:\\(Lorg\\/joda\\/time\\/DateTimeZone\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeZone\\.forOffsetHours\\:\\(I\\)Lorg\\/joda\\/time\\/DateTimeZone\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeZone\\.forOffsetHoursMinutes\\:\\(II\\)Lorg\\/joda\\/time\\/DateTimeZone\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeZone\\.setProvider\\:\\(Lorg\\/joda\\/time\\/tz\\/Provider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeZone\\.setNameProvider\\:\\(Lorg\\/joda\\/time\\/tz\\/NameProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.DateTimeZone\\.writeReplace\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$StringLiteral\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;JLorg\\/joda\\/time\\/Chronology\\;ILorg\\/joda\\/time\\/DateTimeZone\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.DateTimeFormatterBuilder\\$StringLiteral\\.printTo\\:\\(Ljava\\/lang\\/Appendable\\;Lorg\\/joda\\/time\\/ReadablePartial\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.FormatUtils\\.appendPaddedInteger\\:\\(Ljava\\/lang\\/Appendable\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.FormatUtils\\.appendPaddedInteger\\:\\(Ljava\\/lang\\/Appendable\\;JI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.FormatUtils\\.writePaddedInteger\\:\\(Ljava\\/io\\/Writer\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.FormatUtils\\.writePaddedInteger\\:\\(Ljava\\/io\\/Writer\\;JI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.FormatUtils\\.appendUnpaddedInteger\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.FormatUtils\\.appendUnpaddedInteger\\:\\(Ljava\\/lang\\/Appendable\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.FormatUtils\\.writeUnpaddedInteger\\:\\(Ljava\\/io\\/Writer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.FormatUtils\\.writeUnpaddedInteger\\:\\(Ljava\\/io\\/Writer\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormatterBuilder\\$Literal\\.printTo\\:\\(Ljava\\/io\\/Writer\\;Lorg\\/joda\\/time\\/ReadablePeriod\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.format\\.PeriodFormatterBuilder\\.clearPrefix\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.LocalDate\\.toString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoProvider\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoProvider\\.\\<init\\>\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoProvider\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoProvider\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoProvider\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoProvider\\.openResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoProvider\\.loadZoneInfoMap\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.joda\\.time\\.tz\\.ZoneInfoProvider\\.readZoneInfoMap\\:\\(Ljava\\/io\\/DataInputStream\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.tdunning\\.math\\.stats\\.Centroid\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.tdunning\\.math\\.stats\\.FloatHistogram\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.tdunning\\.math\\.stats\\.FloatHistogram\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "com\\.tdunning\\.math\\.stats\\.FloatHistogram\\.readObjectNoData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.recordValue\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.recordValueWithCount\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.recordValueWithExpectedInterval\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.recordValue\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.recordCountAtValue\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.recordSingleValue\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.recordValueWithCountAndExpectedInterval\\:\\(JJJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.recordSingleValueWithExpectedInterval\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.add\\:\\(Lorg\\/HdrHistogram\\/AbstractHistogram\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.subtract\\:\\(Lorg\\/HdrHistogram\\/AbstractHistogram\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.getCountBetweenValues\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.getCountAtValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.decodeFromByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;Ljava\\/lang\\/Class\\;JLjava\\/util\\/zip\\/Inflater\\;\\)Lorg\\/HdrHistogram\\/AbstractHistogram\\;"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogram\\.decodeFromCompressedByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;Ljava\\/lang\\/Class\\;J\\)Lorg\\/HdrHistogram\\/AbstractHistogram\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogramLogReader\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AbstractHistogramLogReader\\.\\<init\\>\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AtomicHistogram\\.decodeFromCompressedByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;J\\)Lorg\\/HdrHistogram\\/AtomicHistogram\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.AtomicHistogram\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.ConcurrentHistogram\\.decodeFromCompressedByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;J\\)Lorg\\/HdrHistogram\\/ConcurrentHistogram\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.ConcurrentHistogram\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.recordValue\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.recordValueWithCount\\:\\(DJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.recordValueWithExpectedInterval\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.recordCountAtValue\\:\\(JD\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.recordSingleValue\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.recordValueWithCountAndExpectedInterval\\:\\(DJD\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.add\\:\\(Lorg\\/HdrHistogram\\/DoubleHistogram\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.getCountBetweenValues\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.getCountAtValue\\:\\(D\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.constructHistogramFromBuffer\\:\\(ILjava\\/nio\\/ByteBuffer\\;Ljava\\/lang\\/Class\\;J\\)Lorg\\/HdrHistogram\\/DoubleHistogram\\;"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.decodeFromCompressedByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;J\\)Lorg\\/HdrHistogram\\/DoubleHistogram\\;"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleHistogram\\.decodeFromCompressedByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;Ljava\\/lang\\/Class\\;J\\)Lorg\\/HdrHistogram\\/DoubleHistogram\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleRecorder\\.recordValueWithCount\\:\\(DJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.DoubleRecorder\\.recordValueWithExpectedInterval\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.EncodableHistogram\\.decodeFromCompressedByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;J\\)Lorg\\/HdrHistogram\\/EncodableHistogram\\;"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.Histogram\\.decodeFromCompressedByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;J\\)Lorg\\/HdrHistogram\\/Histogram\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.Histogram\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.HistogramLogProcessor\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.HistogramLogReader\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.HistogramLogReader\\.\\<init\\>\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.HistogramLogWriter\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.HistogramLogWriter\\.\\<init\\>\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.IntCountsHistogram\\.decodeFromCompressedByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;J\\)Lorg\\/HdrHistogram\\/IntCountsHistogram\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.IntCountsHistogram\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.Recorder\\.recordValue\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.Recorder\\.recordValueWithCount\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.Recorder\\.recordValueWithExpectedInterval\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.ShortCountsHistogram\\.decodeFromCompressedByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;J\\)Lorg\\/HdrHistogram\\/ShortCountsHistogram\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.ShortCountsHistogram\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SingleWriterDoubleRecorder\\.recordValueWithCount\\:\\(DJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SingleWriterDoubleRecorder\\.recordValueWithExpectedInterval\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SingleWriterRecorder\\.recordValueWithCount\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SingleWriterRecorder\\.recordValueWithExpectedInterval\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedDoubleHistogram\\.recordValue\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedDoubleHistogram\\.recordValueWithCount\\:\\(DJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedDoubleHistogram\\.recordValueWithExpectedInterval\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedDoubleHistogram\\.add\\:\\(Lorg\\/HdrHistogram\\/DoubleHistogram\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedDoubleHistogram\\.getCountBetweenValues\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedDoubleHistogram\\.getCountAtValue\\:\\(D\\)J"
 }, 
 {
  "exceptions": [
   "java.util.zip.DataFormatException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedHistogram\\.decodeFromCompressedByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;J\\)Lorg\\/HdrHistogram\\/SynchronizedHistogram\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedHistogram\\.recordValue\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedHistogram\\.recordValueWithCount\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedHistogram\\.recordValueWithExpectedInterval\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedHistogram\\.recordValue\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedHistogram\\.subtract\\:\\(Lorg\\/HdrHistogram\\/AbstractHistogram\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedHistogram\\.getCountBetweenValues\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.ArrayIndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedHistogram\\.getCountAtValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.HdrHistogram\\.SynchronizedHistogram\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.awt.HeadlessException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Native\\$AWT\\.getWindowID\\:\\(Ljava\\/awt\\/Window\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.awt.HeadlessException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Native\\$AWT\\.getComponentID\\:\\(Ljava\\/lang\\/Object\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Native\\$3\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Function\\.checkCallingConvention\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.CallbackReference\\$NativeFunctionHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Structure\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/sun\\/jna\\/Pointer\\;\\)Lcom\\/sun\\/jna\\/Structure\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Structure\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/sun\\/jna\\/Structure\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.ELFAnalyser\\.analyse\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/sun\\/jna\\/ELFAnalyser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.ELFAnalyser\\.runDetection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Library\\$Handler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.awt.HeadlessException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Native\\.getWindowID\\:\\(Ljava\\/awt\\/Window\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.awt.HeadlessException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Native\\.getComponentID\\:\\(Ljava\\/awt\\/Component\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.awt.HeadlessException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Native\\.getWindowPointer\\:\\(Ljava\\/awt\\/Window\\;\\)Lcom\\/sun\\/jna\\/Pointer\\;"
 }, 
 {
  "exceptions": [
   "java.awt.HeadlessException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Native\\.getComponentPointer\\:\\(Ljava\\/awt\\/Component\\;\\)Lcom\\/sun\\/jna\\/Pointer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Native\\.extractFromResourcePath\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Native\\.extractFromResourcePath\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Native\\.getTempDir\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.sun\\.jna\\.Native\\.removeTemporaryFiles\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.auth\\.AuthSchemeRegistry\\.getAuthScheme\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Lorg\\/apache\\/http\\/auth\\/AuthScheme\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.auth\\.AuthScheme\\.processChallenge\\:\\(Lorg\\/apache\\/http\\/Header\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.auth\\.AuthScheme\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.auth\\.ContextAwareAuthScheme\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.cookie\\.CookieSpecRegistry\\.getCookieSpec\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Lorg\\/apache\\/http\\/cookie\\/CookieSpec\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.cookie\\.CookieSpecRegistry\\.getCookieSpec\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/http\\/cookie\\/CookieSpec\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.cookie\\.CookieSpec\\.parse\\:\\(Lorg\\/apache\\/http\\/Header\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.cookie\\.CookieSpec\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.cookie\\.CookieAttributeHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.cookie\\.CookieAttributeHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.RedirectStrategy\\.isRedirected\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.RedirectStrategy\\.getRedirect\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.AuthenticationStrategy\\.getChallenges\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.AuthenticationStrategy\\.select\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Queue\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.HttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.HttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.HttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.HttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.HttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.HttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.HttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.HttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.methods\\.AbortableHttpRequest\\.setConnectionRequest\\:\\(Lorg\\/apache\\/http\\/conn\\/ClientConnectionRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.methods\\.AbortableHttpRequest\\.setReleaseTrigger\\:\\(Lorg\\/apache\\/http\\/conn\\/ConnectionReleaseTrigger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.methods\\.HttpUriRequest\\.abort\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.methods\\.HttpRequestWrapper\\.abort\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.methods\\.AbstractExecutionAwareRequest\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.methods\\.HttpEntityEnclosingRequestBase\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.AuthenticationHandler\\.getChallenges\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.AuthenticationHandler\\.selectScheme\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/auth\\/AuthScheme\\;"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.URIBuilder\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.URIBuilder\\.build\\:\\(\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.URIUtils\\.createURI\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ILjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.URIUtils\\.rewriteURI\\:\\(Ljava\\/net\\/URI\\;Lorg\\/apache\\/http\\/HttpHost\\;Z\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.URIUtils\\.rewriteURI\\:\\(Ljava\\/net\\/URI\\;Lorg\\/apache\\/http\\/HttpHost\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.URIUtils\\.rewriteURI\\:\\(Ljava\\/net\\/URI\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.URIUtils\\.rewriteURIForRoute\\:\\(Ljava\\/net\\/URI\\;Lorg\\/apache\\/http\\/conn\\/routing\\/RouteInfo\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.URIUtils\\.normalizeSyntax\\:\\(Ljava\\/net\\/URI\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.URIUtils\\.resolve\\:\\(Ljava\\/net\\/URI\\;Lorg\\/apache\\/http\\/HttpHost\\;Ljava\\/util\\/List\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.URLEncodedUtils\\.parse\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.JdkIdn\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.CloneUtils\\.cloneObject\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.utils\\.CloneUtils\\.clone\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.RequestAcceptEncoding\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.ResponseProcessCookies\\.process\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.RequestDefaultHeaders\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.ResponseContentEncoding\\$2\\.create\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.ResponseAuthCache\\.process\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.RequestTargetAuthentication\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.RequestProxyAuthentication\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.RequestClientConnControl\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.RequestAddCookies\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.RequestAuthCache\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.ResponseContentEncoding\\$1\\.create\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.RequestExpectContinue\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.ResponseContentEncoding\\.process\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.protocol\\.RequestAuthenticationBase\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/AuthScheme\\;Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.config\\.RequestConfig\\.clone\\:\\(\\)Lorg\\/apache\\/http\\/client\\/config\\/RequestConfig\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.config\\.RequestConfig\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.client.ClientProtocolException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.ResponseHandler\\.handleResponse\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.RedirectHandler\\.getLocationURI\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DeflateInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DeflateInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DeflateInputStream\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DeflateInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DeflateInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DeflateInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DeflateInputStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DeflateInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.InputStreamFactory\\.create\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.UrlEncodedFormEntity\\.\\<init\\>\\:\\(Ljava\\/util\\/List\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.UrlEncodedFormEntity\\.\\<init\\>\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DeflateInputStream\\$DeflateStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.GzipCompressingEntity\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.GzipCompressingEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.LazyDecompressingInputStream\\.initWrapper\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.LazyDecompressingInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.LazyDecompressingInputStream\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.LazyDecompressingInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.LazyDecompressingInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.LazyDecompressingInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.LazyDecompressingInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DecompressingEntity\\.getDecompressingStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DecompressingEntity\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DecompressingEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.GzipDecompressingEntity\\$1\\.create\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.entity\\.DeflateDecompressingEntity\\$1\\.create\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.client\\.RequestDirector\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.OperatedClientConnection\\.opening\\:\\(Ljava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/HttpHost\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.OperatedClientConnection\\.openCompleted\\:\\(ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.OperatedClientConnection\\.update\\:\\(Ljava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/HttpHost\\;ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ManagedClientConnection\\.open\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ManagedClientConnection\\.tunnelTarget\\:\\(ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ManagedClientConnection\\.tunnelProxy\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ManagedClientConnection\\.layerProtocol\\:\\(Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "org.apache.http.conn.ConnectionPoolTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ConnectionRequest\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Lorg\\/apache\\/http\\/HttpClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorInputStream\\.isReadAllowed\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorInputStream\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorInputStream\\.checkEOF\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorInputStream\\.checkClose\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorInputStream\\.checkAbort\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorInputStream\\.releaseConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorInputStream\\.abortConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ClientConnectionOperator\\.openConnection\\:\\(Lorg\\/apache\\/http\\/conn\\/OperatedClientConnection\\;Lorg\\/apache\\/http\\/HttpHost\\;Ljava\\/net\\/InetAddress\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ClientConnectionOperator\\.updateSecureConnection\\:\\(Lorg\\/apache\\/http\\/conn\\/OperatedClientConnection\\;Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.HttpClientConnectionOperator\\.connect\\:\\(Lorg\\/apache\\/http\\/conn\\/ManagedHttpClientConnection\\;Lorg\\/apache\\/http\\/HttpHost\\;Ljava\\/net\\/InetSocketAddress\\;ILorg\\/apache\\/http\\/config\\/SocketConfig\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.HttpClientConnectionOperator\\.upgrade\\:\\(Lorg\\/apache\\/http\\/conn\\/ManagedHttpClientConnection\\;Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicManagedEntity\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicManagedEntity\\.ensureConsumed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicManagedEntity\\.consumeContent\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicManagedEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicManagedEntity\\.releaseConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicManagedEntity\\.abortConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicManagedEntity\\.eofDetected\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicManagedEntity\\.streamClosed\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicManagedEntity\\.streamAbort\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicManagedEntity\\.releaseManagedConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ManagedHttpClientConnection\\.bind\\:\\(Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicEofSensorWatcher\\.eofDetected\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicEofSensorWatcher\\.streamClosed\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.BasicEofSensorWatcher\\.streamAbort\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.HttpClientConnectionManager\\.connect\\:\\(Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;ILorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.HttpClientConnectionManager\\.upgrade\\:\\(Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.HttpClientConnectionManager\\.routeComplete\\:\\(Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorWatcher\\.eofDetected\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorWatcher\\.streamClosed\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.EofSensorWatcher\\.streamAbort\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.routing\\.RouteTracker\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.routing\\.HttpRoutePlanner\\.determineRoute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.routing\\.HttpRoute\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.conn.UnsupportedSchemeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.SchemePortResolver\\.resolve\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.socket\\.PlainConnectionSocketFactory\\.createSocket\\:\\(Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.socket\\.PlainConnectionSocketFactory\\.connectSocket\\:\\(ILjava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/HttpHost\\;Ljava\\/net\\/InetSocketAddress\\;Ljava\\/net\\/InetSocketAddress\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.socket\\.ConnectionSocketFactory\\.createSocket\\:\\(Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.socket\\.ConnectionSocketFactory\\.connectSocket\\:\\(ILjava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/HttpHost\\;Ljava\\/net\\/InetSocketAddress\\;Ljava\\/net\\/InetSocketAddress\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.socket\\.LayeredConnectionSocketFactory\\.createLayeredSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "org.apache.http.conn.ConnectionPoolTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ClientConnectionRequest\\.getConnection\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Lorg\\/apache\\/http\\/conn\\/ManagedClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.TrustSelfSignedStrategy\\.isTrusted\\:\\(\\[Ljava\\/security\\/cert\\/X509Certificate\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLContextBuilder\\$TrustManagerDelegate\\.checkClientTrusted\\:\\(\\[Ljava\\/security\\/cert\\/X509Certificate\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLContextBuilder\\$TrustManagerDelegate\\.checkServerTrusted\\:\\(\\[Ljava\\/security\\/cert\\/X509Certificate\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.BrowserCompatHostnameVerifier\\.verify\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.X509HostnameVerifier\\.verify\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/net\\/ssl\\/SSLSocket\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.X509HostnameVerifier\\.verify\\:\\(Ljava\\/lang\\/String\\;Ljava\\/security\\/cert\\/X509Certificate\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.X509HostnameVerifier\\.verify\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.AbstractVerifier\\.verify\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/net\\/ssl\\/SSLSocket\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.AbstractVerifier\\.verify\\:\\(Ljava\\/lang\\/String\\;Ljava\\/security\\/cert\\/X509Certificate\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.AbstractVerifier\\.verify\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.conn.ssl.SSLInitializationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.getSocketFactory\\:\\(\\)Lorg\\/apache\\/http\\/conn\\/ssl\\/SSLSocketFactory\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.conn.ssl.SSLInitializationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.getSystemSocketFactory\\:\\(\\)Lorg\\/apache\\/http\\/conn\\/ssl\\/SSLSocketFactory\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyManagementException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/security\\/KeyStore\\;Ljava\\/lang\\/String\\;Ljava\\/security\\/KeyStore\\;Ljava\\/security\\/SecureRandom\\;Lorg\\/apache\\/http\\/conn\\/scheme\\/HostNameResolver\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyManagementException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/security\\/KeyStore\\;Ljava\\/lang\\/String\\;Ljava\\/security\\/KeyStore\\;Ljava\\/security\\/SecureRandom\\;Lorg\\/apache\\/http\\/conn\\/ssl\\/TrustStrategy\\;Lorg\\/apache\\/http\\/conn\\/ssl\\/X509HostnameVerifier\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyManagementException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/security\\/KeyStore\\;Ljava\\/lang\\/String\\;Ljava\\/security\\/KeyStore\\;Ljava\\/security\\/SecureRandom\\;Lorg\\/apache\\/http\\/conn\\/ssl\\/X509HostnameVerifier\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyManagementException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.\\<init\\>\\:\\(Ljava\\/security\\/KeyStore\\;Ljava\\/lang\\/String\\;Ljava\\/security\\/KeyStore\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyManagementException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.\\<init\\>\\:\\(Ljava\\/security\\/KeyStore\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyManagementException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.\\<init\\>\\:\\(Ljava\\/security\\/KeyStore\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyManagementException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.\\<init\\>\\:\\(Lorg\\/apache\\/http\\/conn\\/ssl\\/TrustStrategy\\;Lorg\\/apache\\/http\\/conn\\/ssl\\/X509HostnameVerifier\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyManagementException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.\\<init\\>\\:\\(Lorg\\/apache\\/http\\/conn\\/ssl\\/TrustStrategy\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.createSocket\\:\\(Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.createSocket\\:\\(\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException", 
   "org.apache.http.conn.ConnectTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.connectSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/net\\/InetSocketAddress\\;Ljava\\/net\\/InetSocketAddress\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.isSecure\\:\\(Ljava\\/net\\/Socket\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.createLayeredSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.createLayeredSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;IZ\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException", 
   "org.apache.http.conn.ConnectTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.connectSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILjava\\/net\\/InetAddress\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.createSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;IZ\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.prepareSocket\\:\\(Ljavax\\/net\\/ssl\\/SSLSocket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.internalPrepareSocket\\:\\(Ljavax\\/net\\/ssl\\/SSLSocket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.createSocket\\:\\(Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.connectSocket\\:\\(ILjava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/HttpHost\\;Ljava\\/net\\/InetSocketAddress\\;Ljava\\/net\\/InetSocketAddress\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.createLayeredSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLSocketFactory\\.verifyHostname\\:\\(Ljavax\\/net\\/ssl\\/SSLSocket\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.conn.ssl.SSLInitializationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLConnectionSocketFactory\\.getSocketFactory\\:\\(\\)Lorg\\/apache\\/http\\/conn\\/ssl\\/SSLConnectionSocketFactory\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.conn.ssl.SSLInitializationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLConnectionSocketFactory\\.getSystemSocketFactory\\:\\(\\)Lorg\\/apache\\/http\\/conn\\/ssl\\/SSLConnectionSocketFactory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLConnectionSocketFactory\\.prepareSocket\\:\\(Ljavax\\/net\\/ssl\\/SSLSocket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLConnectionSocketFactory\\.createSocket\\:\\(Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLConnectionSocketFactory\\.connectSocket\\:\\(ILjava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/HttpHost\\;Ljava\\/net\\/InetSocketAddress\\;Ljava\\/net\\/InetSocketAddress\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLConnectionSocketFactory\\.createLayeredSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLConnectionSocketFactory\\.verifyHostname\\:\\(Ljavax\\/net\\/ssl\\/SSLSocket\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.conn.ssl.SSLInitializationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLContexts\\.createDefault\\:\\(\\)Ljavax\\/net\\/ssl\\/SSLContext\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.conn.ssl.SSLInitializationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLContexts\\.createSystemDefault\\:\\(\\)Ljavax\\/net\\/ssl\\/SSLContext\\;"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.StrictHostnameVerifier\\.verify\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLContextBuilder\\.loadTrustMaterial\\:\\(Ljava\\/security\\/KeyStore\\;Lorg\\/apache\\/http\\/conn\\/ssl\\/TrustStrategy\\;\\)Lorg\\/apache\\/http\\/conn\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLContextBuilder\\.loadTrustMaterial\\:\\(Ljava\\/security\\/KeyStore\\;\\)Lorg\\/apache\\/http\\/conn\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLContextBuilder\\.loadKeyMaterial\\:\\(Ljava\\/security\\/KeyStore\\;\\[C\\)Lorg\\/apache\\/http\\/conn\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLContextBuilder\\.loadKeyMaterial\\:\\(Ljava\\/security\\/KeyStore\\;\\[CLorg\\/apache\\/http\\/conn\\/ssl\\/PrivateKeyStrategy\\;\\)Lorg\\/apache\\/http\\/conn\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyManagementException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.SSLContextBuilder\\.build\\:\\(\\)Ljavax\\/net\\/ssl\\/SSLContext\\;"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.DefaultHostnameVerifier\\.verify\\:\\(Ljava\\/lang\\/String\\;Ljava\\/security\\/cert\\/X509Certificate\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.DefaultHostnameVerifier\\.matchIPAddress\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.DefaultHostnameVerifier\\.matchIPv6Address\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.DefaultHostnameVerifier\\.matchDNSName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;Lorg\\/apache\\/http\\/conn\\/util\\/PublicSuffixMatcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.DefaultHostnameVerifier\\.matchCN\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/conn\\/util\\/PublicSuffixMatcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ssl\\.DefaultHostnameVerifier\\.extractCN\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ConnectionReleaseTrigger\\.releaseConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.ConnectionReleaseTrigger\\.abortConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException", 
   "org.apache.http.conn.ConnectTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeSocketFactoryAdaptor\\.connectSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/net\\/InetSocketAddress\\;Ljava\\/net\\/InetSocketAddress\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeSocketFactoryAdaptor\\.createSocket\\:\\(Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeSocketFactoryAdaptor\\.isSecure\\:\\(Ljava\\/net\\/Socket\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeLayeredSocketFactory\\.createLayeredSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.conn.ConnectTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.PlainSocketFactory\\.connectSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/net\\/InetSocketAddress\\;Ljava\\/net\\/InetSocketAddress\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException", 
   "org.apache.http.conn.ConnectTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.PlainSocketFactory\\.connectSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILjava\\/net\\/InetAddress\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.LayeredSocketFactoryAdaptor\\.createSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;IZ\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.HostNameResolver\\.resolve\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeLayeredSocketFactoryAdaptor2\\.createSocket\\:\\(Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException", 
   "org.apache.http.conn.ConnectTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeLayeredSocketFactoryAdaptor2\\.connectSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/net\\/InetSocketAddress\\;Ljava\\/net\\/InetSocketAddress\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeLayeredSocketFactoryAdaptor2\\.isSecure\\:\\(Ljava\\/net\\/Socket\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeLayeredSocketFactoryAdaptor2\\.createLayeredSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeLayeredSocketFactoryAdaptor\\.createLayeredSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SocketFactory\\.createSocket\\:\\(\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException", 
   "org.apache.http.conn.ConnectTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SocketFactory\\.connectSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILjava\\/net\\/InetAddress\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SocketFactory\\.isSecure\\:\\(Ljava\\/net\\/Socket\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeSocketFactory\\.createSocket\\:\\(Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException", 
   "org.apache.http.conn.ConnectTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeSocketFactory\\.connectSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/net\\/InetSocketAddress\\;Ljava\\/net\\/InetSocketAddress\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SchemeSocketFactory\\.isSecure\\:\\(Ljava\\/net\\/Socket\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SocketFactoryAdaptor\\.createSocket\\:\\(\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException", 
   "org.apache.http.conn.ConnectTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SocketFactoryAdaptor\\.connectSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILjava\\/net\\/InetAddress\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.SocketFactoryAdaptor\\.isSecure\\:\\(Ljava\\/net\\/Socket\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.LayeredSchemeSocketFactory\\.createLayeredSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;IZ\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.scheme\\.LayeredSocketFactory\\.createSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;IZ\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.util\\.PublicSuffixListParser\\.parse\\:\\(Ljava\\/io\\/Reader\\;\\)Lorg\\/apache\\/http\\/conn\\/util\\/PublicSuffixList\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.util\\.PublicSuffixListParser\\.parseByType\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.util\\.PublicSuffixMatcherLoader\\.load\\:\\(Ljava\\/io\\/InputStream\\;\\)Lorg\\/apache\\/http\\/conn\\/util\\/PublicSuffixMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.util\\.PublicSuffixMatcherLoader\\.load\\:\\(Ljava\\/net\\/URL\\;\\)Lorg\\/apache\\/http\\/conn\\/util\\/PublicSuffixMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.util\\.PublicSuffixMatcherLoader\\.load\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/apache\\/http\\/conn\\/util\\/PublicSuffixMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.DnsResolver\\.resolve\\:\\(Ljava\\/lang\\/String\\;\\)\\[Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.MultihomePlainSocketFactory\\.connectSocket\\:\\(Ljava\\/net\\/Socket\\;Ljava\\/lang\\/String\\;ILjava\\/net\\/InetAddress\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.conn\\.MultihomePlainSocketFactory\\.isSecure\\:\\(Ljava\\/net\\/Socket\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getClientChallenge\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getClientChallenge2\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getSecondaryKey\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getLMHash\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getLMResponse\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getNTLMHash\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getNTLMResponse\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getLMv2Hash\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getNTLMv2Hash\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getNTLMv2Blob\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getNTLMv2Response\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getLMv2Response\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getNTLM2SessionResponse\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getLM2SessionResponse\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getLMUserSessionKey\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getNTLMUserSessionKey\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getNTLMv2UserSessionKey\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getNTLM2SessionResponseUserSessionKey\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$CipherGen\\.getLanManagerSessionKey\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.RFC2617Scheme\\.parseChallenge\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.RFC2617Scheme\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.RFC2617Scheme\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.RFC2617Scheme\\.readObjectNoData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMScheme\\.parseChallenge\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMScheme\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.KerberosScheme\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.KerberosScheme\\.generateToken\\:\\(\\[BLjava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.KerberosScheme\\.generateToken\\:\\(\\[BLjava\\/lang\\/String\\;Lorg\\/apache\\/http\\/auth\\/Credentials\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.HttpEntityDigester\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.HttpEntityDigester\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.HttpEntityDigester\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.SPNegoScheme\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.SPNegoScheme\\.generateToken\\:\\(\\[BLjava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.SPNegoScheme\\.generateToken\\:\\(\\[BLjava\\/lang\\/String\\;Lorg\\/apache\\/http\\/auth\\/Credentials\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NegotiateScheme\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NegotiateScheme\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NegotiateScheme\\.generateToken\\:\\(\\[BLjava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NegotiateScheme\\.generateToken\\:\\(\\[BLjava\\/lang\\/String\\;Lorg\\/apache\\/http\\/auth\\/Credentials\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$NTLMMessage\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$NTLMMessage\\.readByte\\:\\(I\\)B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$NTLMMessage\\.readBytes\\:\\(\\[BI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$NTLMMessage\\.readUShort\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$NTLMMessage\\.readULong\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$NTLMMessage\\.readSecurityBuffer\\:\\(I\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.GGSSchemeBase\\.generateGSSToken\\:\\(\\[BLorg\\/ietf\\/jgss\\/Oid\\;Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.GGSSchemeBase\\.generateGSSToken\\:\\(\\[BLorg\\/ietf\\/jgss\\/Oid\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/auth\\/Credentials\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.GGSSchemeBase\\.generateToken\\:\\(\\[BLjava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.GGSSchemeBase\\.generateToken\\:\\(\\[BLjava\\/lang\\/String\\;Lorg\\/apache\\/http\\/auth\\/Credentials\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.GGSSchemeBase\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.GGSSchemeBase\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.GGSSchemeBase\\.parseChallenge\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.GGSSchemeBase\\.resolveCanonicalHostname\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngine\\.generateType1Msg\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngine\\.generateType3Msg\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.DigestScheme\\.processChallenge\\:\\(Lorg\\/apache\\/http\\/Header\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.DigestScheme\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.DigestScheme\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.UnsupportedDigestAlgorithmException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.DigestScheme\\.createMessageDigest\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/security\\/MessageDigest\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.DigestScheme\\.createDigestHeader\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.getResponseFor\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.getType1Message\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.getType3Message\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[BILjava\\/lang\\/String\\;\\[B\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.readULong\\:\\(\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.readUShort\\:\\(\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.readSecurityBuffer\\:\\(\\[BI\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.makeRandomChallenge\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.makeSecondaryKey\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.hmacMD5\\:\\(\\[B\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.RC4\\:\\(\\[B\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.ntlm2SessionResponse\\:\\(\\[B\\[B\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.lmHash\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.ntlmHash\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.lmv2Hash\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.ntlmv2Hash\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.lmResponse\\:\\(\\[B\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.lmv2Response\\:\\(\\[B\\[B\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.generateType1Msg\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.generateType3Msg\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.access\\$000\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.access\\$100\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.access\\$200\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.access\\$300\\:\\(\\[B\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.access\\$400\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.access\\$500\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.access\\$600\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.access\\$800\\:\\(\\[B\\[B\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.access\\$1200\\:\\(\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.access\\$1300\\:\\(\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\.access\\$1400\\:\\(\\[BI\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.AuthSchemeBase\\.processChallenge\\:\\(Lorg\\/apache\\/http\\/Header\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.AuthSchemeBase\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.AuthSchemeBase\\.parseChallenge\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$Type3Message\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[BILjava\\/lang\\/String\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.SpnegoTokenGenerator\\.generateSpnegoDERObject\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$HMACMD5\\.\\<init\\>\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.HttpAuthenticator\\.generateAuthResponse\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/auth\\/AuthState\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.HttpAuthenticator\\.doAuth\\:\\(Lorg\\/apache\\/http\\/auth\\/AuthScheme\\;Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$Type2Message\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.auth.NTLMEngineException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.NTLMEngineImpl\\$Type1Message\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.BasicScheme\\.processChallenge\\:\\(Lorg\\/apache\\/http\\/Header\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.BasicScheme\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.auth\\.BasicScheme\\.authenticate\\:\\(Lorg\\/apache\\/http\\/auth\\/Credentials\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965DiscardAttributeHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965DiscardAttributeHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BasicClientCookie2\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BasicSecureHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2109Spec\\.parse\\:\\(Lorg\\/apache\\/http\\/Header\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2109Spec\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965Spec\\.parse\\:\\(Lorg\\/apache\\/http\\/Header\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965Spec\\.parse\\:\\(\\[Lorg\\/apache\\/http\\/HeaderElement\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965Spec\\.createCookies\\:\\(\\[Lorg\\/apache\\/http\\/HeaderElement\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965Spec\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.PublicSuffixFilter\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.PublicSuffixFilter\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BasicDomainHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BasicDomainHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2109VersionHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2109VersionHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2109DomainHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2109DomainHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BasicMaxAgeHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.NetscapeDraftSpec\\.parse\\:\\(Lorg\\/apache\\/http\\/Header\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.LaxExpiresHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BasicExpiresHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BrowserCompatSpec\\.parse\\:\\(Lorg\\/apache\\/http\\/Header\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.DefaultCookieSpec\\.parse\\:\\(Lorg\\/apache\\/http\\/Header\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.DefaultCookieSpec\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BrowserCompatSpec\\$1\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BrowserCompatVersionAttributeHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.IgnoreSpec\\.parse\\:\\(Lorg\\/apache\\/http\\/Header\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965PortAttributeHandler\\.parsePortAttribute\\:\\(Ljava\\/lang\\/String\\;\\)\\[I"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965PortAttributeHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965PortAttributeHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BasicClientCookie\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.NetscapeDraftHeaderParser\\.parseHeader\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Lorg\\/apache\\/http\\/message\\/ParserCursor\\;\\)Lorg\\/apache\\/http\\/HeaderElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.DefaultCookieSpecProvider\\$1\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BasicPathHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BasicPathHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.LaxMaxAgeHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.NetscapeDomainHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.NetscapeDomainHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965DomainAttributeHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965DomainAttributeHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.PublicSuffixDomainFilter\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.PublicSuffixDomainFilter\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC6265CookieSpecProvider\\$1\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965VersionAttributeHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965VersionAttributeHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.AbstractCookieAttributeHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.CookieSpecBase\\.parse\\:\\(\\[Lorg\\/apache\\/http\\/HeaderElement\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.CookieSpecBase\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC6265CookieSpec\\.parse\\:\\(Lorg\\/apache\\/http\\/Header\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC6265CookieSpec\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.PublicSuffixListParser\\.parse\\:\\(Ljava\\/io\\/Reader\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.BasicCommentHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.cookie.DateParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.DateUtils\\.parseDate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.cookie.DateParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.DateUtils\\.parseDate\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.cookie.DateParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.DateUtils\\.parseDate\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/util\\/Date\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965CommentUrlAttributeHandler\\.parse\\:\\(Lorg\\/apache\\/http\\/cookie\\/SetCookie\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.cookie.MalformedCookieException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.cookie\\.RFC2965CommentUrlAttributeHandler\\.validate\\:\\(Lorg\\/apache\\/http\\/cookie\\/Cookie\\;Lorg\\/apache\\/http\\/cookie\\/CookieOrigin\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.TargetAuthenticationStrategy\\.select\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Queue\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.TargetAuthenticationStrategy\\.getChallenges\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AuthenticationStrategyImpl\\.getChallenges\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AuthenticationStrategyImpl\\.select\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Queue\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpResponseProxy\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpResponseProxy\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultProxyAuthenticationHandler\\.getChallenges\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRedirectStrategy\\.isRedirected\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRedirectStrategy\\.getLocationURI\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRedirectStrategy\\.createLocationURI\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRedirectStrategy\\.getRedirect\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.FutureRequestExecutionService\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AutoRetryHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AutoRetryHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AutoRetryHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AutoRetryHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AutoRetryHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AutoRetryHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AutoRetryHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AutoRetryHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.client.HttpResponseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AbstractResponseHandler\\.handleResponse\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AbstractResponseHandler\\.handleEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.RequestWrapper\\.\\<init\\>\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.RequestWrapper\\.abort\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.ProxyClient\\.tunnel\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/auth\\/Credentials\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.HttpRequestTaskCallable\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AbstractAuthenticationHandler\\.parseChallenges\\:\\(\\[Lorg\\/apache\\/http\\/Header\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AbstractAuthenticationHandler\\.selectScheme\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/auth\\/AuthScheme\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DecompressingHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DecompressingHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DecompressingHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DecompressingHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DecompressingHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DecompressingHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DecompressingHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DecompressingHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRedirectStrategyAdaptor\\.isRedirected\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRedirectStrategyAdaptor\\.getRedirect\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.EntityEnclosingRequestWrapper\\$EntityWrapper\\.consumeContent\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.EntityEnclosingRequestWrapper\\$EntityWrapper\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.EntityEnclosingRequestWrapper\\$EntityWrapper\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AbstractHttpClient\\.doExecute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AuthenticationStrategyAdaptor\\.getChallenges\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.AuthenticationStrategyAdaptor\\.select\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Queue\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.IdleConnectionEvictor\\.awaitTermination\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.InternalHttpClient\\.determineRoute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.InternalHttpClient\\.doExecute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.HttpClientBuilder\\$2\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.EntityEnclosingRequestWrapper\\.\\<init\\>\\:\\(Lorg\\/apache\\/http\\/HttpEntityEnclosingRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRedirectHandler\\.getLocationURI\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.doExecute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.determineTarget\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;\\)Lorg\\/apache\\/http\\/HttpHost\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/client\\/ResponseHandler\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.CloseableHttpClient\\.execute\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpUriRequest\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.client.ClientProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.MinimalHttpClient\\.doExecute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.BasicResponseHandler\\.handleEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.client.HttpResponseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.BasicResponseHandler\\.handleResponse\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.BasicResponseHandler\\.handleEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.client.HttpResponseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.BasicResponseHandler\\.handleResponse\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.HttpClientBuilder\\$1\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.ClientParamsStack\\.setParameter\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/apache\\/http\\/params\\/HttpParams\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRequestDirector\\.wrapRequest\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;\\)Lorg\\/apache\\/http\\/impl\\/client\\/RequestWrapper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRequestDirector\\.rewriteRequestURI\\:\\(Lorg\\/apache\\/http\\/impl\\/client\\/RequestWrapper\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRequestDirector\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRequestDirector\\.tryConnect\\:\\(Lorg\\/apache\\/http\\/impl\\/client\\/RoutedRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRequestDirector\\.tryExecute\\:\\(Lorg\\/apache\\/http\\/impl\\/client\\/RoutedRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRequestDirector\\.determineRoute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRequestDirector\\.establishRoute\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRequestDirector\\.createTunnelToTarget\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRequestDirector\\.createTunnelToProxy\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;ILorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultRequestDirector\\.handleResponse\\:\\(Lorg\\/apache\\/http\\/impl\\/client\\/RoutedRequest\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/impl\\/client\\/RoutedRequest\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.DefaultTargetAuthenticationHandler\\.getChallenges\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.ProxyAuthenticationStrategy\\.select\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Queue\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.auth.MalformedChallengeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.client\\.ProxyAuthenticationStrategy\\.getChallenges\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ServiceUnavailableRetryExec\\.execute\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpRequestWrapper\\;Lorg\\/apache\\/http\\/client\\/protocol\\/HttpClientContext\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpExecutionAware\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.RequestEntityProxy\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.RequestEntityProxy\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.RequestEntityProxy\\.consumeContent\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ProtocolExec\\.rewriteRequestURI\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpRequestWrapper\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ProtocolExec\\.execute\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpRequestWrapper\\;Lorg\\/apache\\/http\\/client\\/protocol\\/HttpClientContext\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpExecutionAware\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ProtocolException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.MinimalClientExec\\.rewriteRequestURI\\:\\(Lorg\\/apache\\/http\\/client\\/methods\\/HttpRequestWrapper\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.MinimalClientExec\\.execute\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpRequestWrapper\\;Lorg\\/apache\\/http\\/client\\/protocol\\/HttpClientContext\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpExecutionAware\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.MainClientExec\\.execute\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpRequestWrapper\\;Lorg\\/apache\\/http\\/client\\/protocol\\/HttpClientContext\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpExecutionAware\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.MainClientExec\\.establishRoute\\:\\(Lorg\\/apache\\/http\\/auth\\/AuthState\\;Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/client\\/protocol\\/HttpClientContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.MainClientExec\\.createTunnelToTarget\\:\\(Lorg\\/apache\\/http\\/auth\\/AuthState\\;Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/client\\/protocol\\/HttpClientContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.MainClientExec\\.createTunnelToProxy\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;ILorg\\/apache\\/http\\/client\\/protocol\\/HttpClientContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.RedirectExec\\.execute\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpRequestWrapper\\;Lorg\\/apache\\/http\\/client\\/protocol\\/HttpClientContext\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpExecutionAware\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ClientExecChain\\.execute\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpRequestWrapper\\;Lorg\\/apache\\/http\\/client\\/protocol\\/HttpClientContext\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpExecutionAware\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ConnectionHolder\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.HttpResponseProxy\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.HttpResponseProxy\\.setStatusCode\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.HttpResponseProxy\\.setReasonPhrase\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.RetryExec\\.execute\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpRequestWrapper\\;Lorg\\/apache\\/http\\/client\\/protocol\\/HttpClientContext\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpExecutionAware\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ResponseEntityProxy\\.cleanup\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ResponseEntityProxy\\.abortConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ResponseEntityProxy\\.releaseConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ResponseEntityProxy\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ResponseEntityProxy\\.consumeContent\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ResponseEntityProxy\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ResponseEntityProxy\\.eofDetected\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ResponseEntityProxy\\.streamClosed\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.ResponseEntityProxy\\.streamAbort\\:\\(Ljava\\/io\\/InputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.execchain\\.BackoffStrategyExec\\.execute\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpRequestWrapper\\;Lorg\\/apache\\/http\\/client\\/protocol\\/HttpClientContext\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpExecutionAware\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/CloseableHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnection\\.opening\\:\\(Ljava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/HttpHost\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnection\\.openCompleted\\:\\(ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnection\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnection\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnection\\.createSessionInputBuffer\\:\\(Ljava\\/net\\/Socket\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnection\\.createSessionOutputBuffer\\:\\(Ljava\\/net\\/Socket\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Lorg\\/apache\\/http\\/io\\/SessionOutputBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnection\\.bind\\:\\(Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnection\\.update\\:\\(Ljava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/HttpHost\\;ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnection\\.receiveResponseHeader\\:\\(\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnection\\.sendRequestHeader\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.PoolingHttpClientConnectionManager\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "org.apache.http.conn.ConnectionPoolTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.PoolingHttpClientConnectionManager\\.leaseConnection\\:\\(Ljava\\/util\\/concurrent\\/Future\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Lorg\\/apache\\/http\\/HttpClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.PoolingHttpClientConnectionManager\\.connect\\:\\(Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;ILorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.PoolingHttpClientConnectionManager\\.upgrade\\:\\(Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.PoolingHttpClientConnectionManager\\.routeComplete\\:\\(Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.Wire\\.wire\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.Wire\\.output\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.Wire\\.input\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.Wire\\.output\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.Wire\\.input\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.Wire\\.output\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.Wire\\.input\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.Wire\\.output\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.Wire\\.input\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.Wire\\.output\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.Wire\\.input\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultHttpClientConnectionOperator\\.connect\\:\\(Lorg\\/apache\\/http\\/conn\\/ManagedHttpClientConnection\\;Lorg\\/apache\\/http\\/HttpHost\\;Ljava\\/net\\/InetSocketAddress\\;ILorg\\/apache\\/http\\/config\\/SocketConfig\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultHttpClientConnectionOperator\\.upgrade\\:\\(Lorg\\/apache\\/http\\/conn\\/ManagedHttpClientConnection\\;Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.CPoolProxy\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.CPoolProxy\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.CPoolProxy\\.bind\\:\\(Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.CPoolProxy\\.isResponseAvailable\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.CPoolProxy\\.sendRequestHeader\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.CPoolProxy\\.sendRequestEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntityEnclosingRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.CPoolProxy\\.receiveResponseHeader\\:\\(\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.CPoolProxy\\.receiveResponseEntity\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.CPoolProxy\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultHttpRoutePlanner\\.determineRoute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.PoolingClientConnectionManager\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "org.apache.http.conn.ConnectionPoolTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.PoolingClientConnectionManager\\.leaseConnection\\:\\(Ljava\\/util\\/concurrent\\/Future\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Lorg\\/apache\\/http\\/conn\\/ManagedClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultManagedHttpClientConnection\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultManagedHttpClientConnection\\.bind\\:\\(Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionInputBuffer\\.isDataAvailable\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionInputBuffer\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionInputBuffer\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionInputBuffer\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionInputBuffer\\.readLine\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionInputBuffer\\.readLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.isResponseAvailable\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.receiveResponseEntity\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.receiveResponseHeader\\:\\(\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.sendRequestEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntityEnclosingRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.sendRequestHeader\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.bind\\:\\(Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.open\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.tunnelTarget\\:\\(ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.tunnelProxy\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ManagedClientConnectionImpl\\.layerProtocol\\:\\(Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultResponseParser\\.parseHead\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;\\)Lorg\\/apache\\/http\\/HttpMessage\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingInputStream\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingInputStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.InterruptedIOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractClientConnAdapter\\.assertNotAborted\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.impl.conn.ConnectionShutdownException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractClientConnAdapter\\.assertValid\\:\\(Lorg\\/apache\\/http\\/conn\\/OperatedClientConnection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractClientConnAdapter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractClientConnAdapter\\.isResponseAvailable\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractClientConnAdapter\\.receiveResponseEntity\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractClientConnAdapter\\.receiveResponseHeader\\:\\(\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractClientConnAdapter\\.sendRequestEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntityEnclosingRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractClientConnAdapter\\.sendRequestHeader\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractClientConnAdapter\\.bind\\:\\(Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.SystemDefaultRoutePlanner\\.determineProxy\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpHost\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.conn.ConnectionPoolTimeoutException", 
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.tsccm\\.ConnPoolByRoute\\.getEntryBlocking\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Ljava\\/lang\\/Object\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;Lorg\\/apache\\/http\\/impl\\/conn\\/tsccm\\/WaitingThreadAborter\\;\\)Lorg\\/apache\\/http\\/impl\\/conn\\/tsccm\\/BasicPoolEntry\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "org.apache.http.conn.ConnectionPoolTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.tsccm\\.ThreadSafeClientConnManager\\$1\\.getConnection\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Lorg\\/apache\\/http\\/conn\\/ManagedClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "org.apache.http.conn.ConnectionPoolTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.tsccm\\.ConnPoolByRoute\\$1\\.getPoolEntry\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Lorg\\/apache\\/http\\/impl\\/conn\\/tsccm\\/BasicPoolEntry\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "org.apache.http.conn.ConnectionPoolTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.tsccm\\.PoolEntryRequest\\.getPoolEntry\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Lorg\\/apache\\/http\\/impl\\/conn\\/tsccm\\/BasicPoolEntry\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.tsccm\\.ThreadSafeClientConnManager\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.tsccm\\.WaitingThread\\.await\\:\\(Ljava\\/util\\/Date\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.tsccm\\.AbstractConnPool\\.enableConnectionGC\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.conn.ConnectionPoolTimeoutException", 
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.tsccm\\.AbstractConnPool\\.getEntry\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Ljava\\/lang\\/Object\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Lorg\\/apache\\/http\\/impl\\/conn\\/tsccm\\/BasicPoolEntry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.PoolingHttpClientConnectionManager\\$InternalConnectionFactory\\.create\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;\\)Lorg\\/apache\\/http\\/conn\\/ManagedHttpClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.PoolingHttpClientConnectionManager\\$InternalConnectionFactory\\.create\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractPoolEntry\\.open\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractPoolEntry\\.tunnelTarget\\:\\(ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractPoolEntry\\.tunnelProxy\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractPoolEntry\\.layerProtocol\\:\\(Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractPooledConnAdapter\\.open\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractPooledConnAdapter\\.tunnelTarget\\:\\(ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractPooledConnAdapter\\.tunnelProxy\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;ZLorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractPooledConnAdapter\\.layerProtocol\\:\\(Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractPooledConnAdapter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.AbstractPooledConnAdapter\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.SingleClientConnManager\\$PoolEntry\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.SingleClientConnManager\\$PoolEntry\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.HttpConnPool\\$InternalConnFactory\\.create\\:\\(Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;\\)Lorg\\/apache\\/http\\/conn\\/OperatedClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.HttpConnPool\\$InternalConnFactory\\.create\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnectionOperator\\.openConnection\\:\\(Lorg\\/apache\\/http\\/conn\\/OperatedClientConnection\\;Lorg\\/apache\\/http\\/HttpHost\\;Ljava\\/net\\/InetAddress\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnectionOperator\\.updateSecureConnection\\:\\(Lorg\\/apache\\/http\\/conn\\/OperatedClientConnection\\;Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnectionOperator\\.prepareSocket\\:\\(Ljava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultClientConnectionOperator\\.resolveHostname\\:\\(Ljava\\/lang\\/String\\;\\)\\[Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingManagedHttpClientConnection\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingManagedHttpClientConnection\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingManagedHttpClientConnection\\.getSocketInputStream\\:\\(Ljava\\/net\\/Socket\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingManagedHttpClientConnection\\.getSocketOutputStream\\:\\(Ljava\\/net\\/Socket\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionOutputBuffer\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionOutputBuffer\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionOutputBuffer\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionOutputBuffer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionOutputBuffer\\.writeLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.LoggingSessionOutputBuffer\\.writeLine\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultProxyRoutePlanner\\.determineProxy\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpHost\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "org.apache.http.conn.ConnectionPoolTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.PoolingHttpClientConnectionManager\\$1\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Lorg\\/apache\\/http\\/HttpClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.BasicHttpClientConnectionManager\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.BasicHttpClientConnectionManager\\.connect\\:\\(Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;ILorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.BasicHttpClientConnectionManager\\.upgrade\\:\\(Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.BasicHttpClientConnectionManager\\.routeComplete\\:\\(Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "org.apache.http.conn.ConnectionPoolTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.PoolingClientConnectionManager\\$1\\.getConnection\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Lorg\\/apache\\/http\\/conn\\/ManagedClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.CPoolEntry\\.closeConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.CPoolEntry\\.shutdownConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.conn.UnsupportedSchemeException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultSchemePortResolver\\.resolve\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.SingleClientConnManager\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.SingleClientConnManager\\.assertStillUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultRoutePlanner\\.determineRoute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultRoutePlanner\\.determineProxy\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpHost\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.InMemoryDnsResolver\\.resolve\\:\\(Ljava\\/lang\\/String\\;\\)\\[Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultHttpResponseParser\\.parseHead\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.DefaultHttpResponseParser\\.parseHead\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;\\)Lorg\\/apache\\/http\\/HttpMessage\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.BasicClientConnectionManager\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ProxySelectorRoutePlanner\\.determineRoute\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/conn\\/routing\\/HttpRoute\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.ProxySelectorRoutePlanner\\.determineProxy\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpHost\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.conn\\.SystemDefaultDnsResolver\\.resolve\\:\\(Ljava\\/lang\\/String\\;\\)\\[Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeaderElementIterator\\.nextElement\\:\\(\\)Lorg\\/apache\\/http\\/HeaderElement\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeaderElementIterator\\.next\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeaderElementIterator\\.remove\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.LineParser\\.parseProtocolVersion\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Lorg\\/apache\\/http\\/message\\/ParserCursor\\;\\)Lorg\\/apache\\/http\\/ProtocolVersion\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.LineParser\\.parseRequestLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Lorg\\/apache\\/http\\/message\\/ParserCursor\\;\\)Lorg\\/apache\\/http\\/RequestLine\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.LineParser\\.parseStatusLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Lorg\\/apache\\/http\\/message\\/ParserCursor\\;\\)Lorg\\/apache\\/http\\/StatusLine\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.LineParser\\.parseHeader\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicLineParser\\.parseProtocolVersion\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/message\\/LineParser\\;\\)Lorg\\/apache\\/http\\/ProtocolVersion\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicLineParser\\.parseProtocolVersion\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Lorg\\/apache\\/http\\/message\\/ParserCursor\\;\\)Lorg\\/apache\\/http\\/ProtocolVersion\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicLineParser\\.parseRequestLine\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/message\\/LineParser\\;\\)Lorg\\/apache\\/http\\/RequestLine\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicLineParser\\.parseRequestLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Lorg\\/apache\\/http\\/message\\/ParserCursor\\;\\)Lorg\\/apache\\/http\\/RequestLine\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicLineParser\\.parseStatusLine\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/message\\/LineParser\\;\\)Lorg\\/apache\\/http\\/StatusLine\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicLineParser\\.parseStatusLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Lorg\\/apache\\/http\\/message\\/ParserCursor\\;\\)Lorg\\/apache\\/http\\/StatusLine\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicLineParser\\.parseHeader\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/message\\/LineParser\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicLineParser\\.parseHeader\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.HeaderGroup\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicNameValuePair\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BufferedHeader\\.\\<init\\>\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BufferedHeader\\.getElements\\:\\(\\)\\[Lorg\\/apache\\/http\\/HeaderElement\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BufferedHeader\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicListHeaderIterator\\.nextHeader\\:\\(\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicListHeaderIterator\\.next\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicListHeaderIterator\\.remove\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeader\\.getElements\\:\\(\\)\\[Lorg\\/apache\\/http\\/HeaderElement\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeader\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicTokenIterator\\.nextToken\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicTokenIterator\\.next\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicTokenIterator\\.remove\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicTokenIterator\\.findNext\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicRequestLine\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeaderValueParser\\.parseElements\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/message\\/HeaderValueParser\\;\\)\\[Lorg\\/apache\\/http\\/HeaderElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeaderValueParser\\.parseHeaderElement\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/message\\/HeaderValueParser\\;\\)Lorg\\/apache\\/http\\/HeaderElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeaderValueParser\\.parseParameters\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/message\\/HeaderValueParser\\;\\)\\[Lorg\\/apache\\/http\\/NameValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeaderValueParser\\.parseNameValuePair\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/message\\/HeaderValueParser\\;\\)Lorg\\/apache\\/http\\/NameValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.HeaderValueParser\\.parseElements\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Lorg\\/apache\\/http\\/message\\/ParserCursor\\;\\)\\[Lorg\\/apache\\/http\\/HeaderElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.HeaderValueParser\\.parseHeaderElement\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Lorg\\/apache\\/http\\/message\\/ParserCursor\\;\\)Lorg\\/apache\\/http\\/HeaderElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.HeaderValueParser\\.parseParameters\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Lorg\\/apache\\/http\\/message\\/ParserCursor\\;\\)\\[Lorg\\/apache\\/http\\/NameValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.HeaderValueParser\\.parseNameValuePair\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Lorg\\/apache\\/http\\/message\\/ParserCursor\\;\\)Lorg\\/apache\\/http\\/NameValuePair\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeaderIterator\\.nextHeader\\:\\(\\)Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeaderIterator\\.next\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeaderIterator\\.remove\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicHeaderElement\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.message\\.BasicStatusLine\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.concurrent\\.BasicFuture\\.getResult\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.concurrent\\.BasicFuture\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.concurrent\\.BasicFuture\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ProtocolVersion\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.MethodNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpRequestFactory\\.newHttpRequest\\:\\(Lorg\\/apache\\/http\\/RequestLine\\;\\)Lorg\\/apache\\/http\\/HttpRequest\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.MethodNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpRequestFactory\\.newHttpRequest\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/http\\/HttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpConnection\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpConnection\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpRequestInterceptor\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpResponseInterceptor\\.process\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpEntity\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpEntity\\.consumeContent\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.params\\.SyncBasicHttpParams\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.params\\.BasicHttpParams\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpResponse\\.setStatusCode\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpResponse\\.setReasonPhrase\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpClientConnection\\.isResponseAvailable\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpClientConnection\\.sendRequestHeader\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpClientConnection\\.sendRequestEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntityEnclosingRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpClientConnection\\.receiveResponseHeader\\:\\(\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpClientConnection\\.receiveResponseEntity\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpClientConnection\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpHost\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.ResponseDate\\.process\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.ImmutableHttpProcessor\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.ImmutableHttpProcessor\\.process\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.RequestTargetHost\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.ResponseConnControl\\.process\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.HttpRequestExecutor\\.execute\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.HttpRequestExecutor\\.preProcess\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpProcessor\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.HttpRequestExecutor\\.doSendRequest\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.HttpRequestExecutor\\.doReceiveResponse\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpClientConnection\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.HttpRequestExecutor\\.postProcess\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpProcessor\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.RequestUserAgent\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.BasicHttpProcessor\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.BasicHttpProcessor\\.process\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.BasicHttpProcessor\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.ResponseServer\\.process\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.ResponseContent\\.process\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.RequestDate\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.HttpService\\.handleRequest\\:\\(Lorg\\/apache\\/http\\/HttpServerConnection\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.HttpService\\.doService\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.RequestConnControl\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.RequestExpectContinue\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.HttpExpectationVerifier\\.verify\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.HttpRequestHandler\\.handle\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.protocol\\.RequestContent\\.process\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;Lorg\\/apache\\/http\\/protocol\\/HttpContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\$TrustManagerDelegate\\.checkClientTrusted\\:\\(\\[Ljava\\/security\\/cert\\/X509Certificate\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\$TrustManagerDelegate\\.checkServerTrusted\\:\\(\\[Ljava\\/security\\/cert\\/X509Certificate\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.TrustStrategy\\.isTrusted\\:\\(\\[Ljava\\/security\\/cert\\/X509Certificate\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.ssl.SSLInitializationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContexts\\.createDefault\\:\\(\\)Ljavax\\/net\\/ssl\\/SSLContext\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ssl.SSLInitializationException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContexts\\.createSystemDefault\\:\\(\\)Ljavax\\/net\\/ssl\\/SSLContext\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadTrustMaterial\\:\\(Ljava\\/security\\/KeyStore\\;Lorg\\/apache\\/http\\/ssl\\/TrustStrategy\\;\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadTrustMaterial\\:\\(Lorg\\/apache\\/http\\/ssl\\/TrustStrategy\\;\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.cert.CertificateException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadTrustMaterial\\:\\(Ljava\\/io\\/File\\;\\[CLorg\\/apache\\/http\\/ssl\\/TrustStrategy\\;\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.cert.CertificateException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadTrustMaterial\\:\\(Ljava\\/io\\/File\\;\\[C\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.cert.CertificateException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadTrustMaterial\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.cert.CertificateException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadTrustMaterial\\:\\(Ljava\\/net\\/URL\\;\\[CLorg\\/apache\\/http\\/ssl\\/TrustStrategy\\;\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.cert.CertificateException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadTrustMaterial\\:\\(Ljava\\/net\\/URL\\;\\[C\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadKeyMaterial\\:\\(Ljava\\/security\\/KeyStore\\;\\[CLorg\\/apache\\/http\\/ssl\\/PrivateKeyStrategy\\;\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadKeyMaterial\\:\\(Ljava\\/security\\/KeyStore\\;\\[C\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException", 
   "java.security.cert.CertificateException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadKeyMaterial\\:\\(Ljava\\/io\\/File\\;\\[C\\[CLorg\\/apache\\/http\\/ssl\\/PrivateKeyStrategy\\;\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException", 
   "java.security.cert.CertificateException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadKeyMaterial\\:\\(Ljava\\/io\\/File\\;\\[C\\[C\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException", 
   "java.security.cert.CertificateException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadKeyMaterial\\:\\(Ljava\\/net\\/URL\\;\\[C\\[CLorg\\/apache\\/http\\/ssl\\/PrivateKeyStrategy\\;\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException", 
   "java.security.UnrecoverableKeyException", 
   "java.security.cert.CertificateException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.loadKeyMaterial\\:\\(Ljava\\/net\\/URL\\;\\[C\\[C\\)Lorg\\/apache\\/http\\/ssl\\/SSLContextBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.security.KeyManagementException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.initSSLContext\\:\\(Ljavax\\/net\\/ssl\\/SSLContext\\;Ljava\\/util\\/Collection\\;Ljava\\/util\\/Collection\\;Ljava\\/security\\/SecureRandom\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyManagementException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.ssl\\.SSLContextBuilder\\.build\\:\\(\\)Ljavax\\/net\\/ssl\\/SSLContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.TimeoutException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.pool\\.AbstractConnPool\\$2\\.getPoolEntry\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Lorg\\/apache\\/http\\/pool\\/PoolEntry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.InterruptedException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.pool\\.AbstractConnPool\\$2\\.getPoolEntry\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.pool\\.ConnFactory\\.create\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.pool\\.AbstractConnPool\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.InterruptedException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.pool\\.AbstractConnPool\\.getPoolEntryBlocking\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;Lorg\\/apache\\/http\\/pool\\/PoolEntryFuture\\;\\)Lorg\\/apache\\/http\\/pool\\/PoolEntry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.InterruptedException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.pool\\.AbstractConnPool\\.access\\$000\\:\\(Lorg\\/apache\\/http\\/pool\\/AbstractConnPool\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;Lorg\\/apache\\/http\\/pool\\/PoolEntryFuture\\;\\)Lorg\\/apache\\/http\\/pool\\/PoolEntry\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.pool\\.PoolEntryFuture\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.pool\\.PoolEntryFuture\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.InterruptedException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.pool\\.PoolEntryFuture\\.getPoolEntry\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.pool\\.PoolEntryFuture\\.await\\:\\(Ljava\\/util\\/Date\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.config\\.ConnectionConfig\\.clone\\:\\(\\)Lorg\\/apache\\/http\\/config\\/ConnectionConfig\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.config\\.ConnectionConfig\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.config\\.SocketConfig\\.clone\\:\\(\\)Lorg\\/apache\\/http\\/config\\/SocketConfig\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.config\\.SocketConfig\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.config\\.MessageConstraints\\.clone\\:\\(\\)Lorg\\/apache\\/http\\/config\\/MessageConstraints\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.config\\.MessageConstraints\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpServerConnection\\.receiveRequestHeader\\:\\(\\)Lorg\\/apache\\/http\\/HttpRequest\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpServerConnection\\.receiveRequestEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntityEnclosingRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpServerConnection\\.sendResponseHeader\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpServerConnection\\.sendResponseEntity\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpServerConnection\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.util\\.EntityUtils\\.consume\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.util\\.EntityUtils\\.updateEntity\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;Lorg\\/apache\\/http\\/HttpEntity\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.util\\.EntityUtils\\.toByteArray\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.util\\.EntityUtils\\.getContentCharSet\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.util\\.EntityUtils\\.getContentMimeType\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.util\\.EntityUtils\\.toString\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.util\\.EntityUtils\\.toString\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.util\\.EntityUtils\\.toString\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.util\\.CharsetUtils\\.get\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/nio\\/charset\\/Charset\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.HttpConnectionFactory\\.createConnection\\:\\(Ljava\\/net\\/Socket\\;\\)Lorg\\/apache\\/http\\/HttpConnection\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.MethodNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultHttpRequestFactory\\.newHttpRequest\\:\\(Lorg\\/apache\\/http\\/RequestLine\\;\\)Lorg\\/apache\\/http\\/HttpRequest\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.MethodNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultHttpRequestFactory\\.newHttpRequest\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/http\\/HttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.SocketHttpClientConnection\\.createSessionInputBuffer\\:\\(Ljava\\/net\\/Socket\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.SocketHttpClientConnection\\.createSessionOutputBuffer\\:\\(Ljava\\/net\\/Socket\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Lorg\\/apache\\/http\\/io\\/SessionOutputBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.SocketHttpClientConnection\\.bind\\:\\(Ljava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.SocketHttpClientConnection\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.SocketHttpClientConnection\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.bootstrap\\.SSLServerSetupHandler\\.initialize\\:\\(Ljavax\\/net\\/ssl\\/SSLServerSocket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.bootstrap\\.RequestListener\\.terminate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.bootstrap\\.HttpServer\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.bootstrap\\.HttpServer\\.awaitTermination\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.SocketHttpServerConnection\\.createSessionInputBuffer\\:\\(Ljava\\/net\\/Socket\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.SocketHttpServerConnection\\.createSessionOutputBuffer\\:\\(Ljava\\/net\\/Socket\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Lorg\\/apache\\/http\\/io\\/SessionOutputBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.SocketHttpServerConnection\\.bind\\:\\(Ljava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.SocketHttpServerConnection\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.SocketHttpServerConnection\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.BHttpConnectionBase\\.ensureOpen\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.BHttpConnectionBase\\.getSocketInputStream\\:\\(Ljava\\/net\\/Socket\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.BHttpConnectionBase\\.getSocketOutputStream\\:\\(Ljava\\/net\\/Socket\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.BHttpConnectionBase\\.bind\\:\\(Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.BHttpConnectionBase\\.doFlush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.BHttpConnectionBase\\.prepareOutput\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.BHttpConnectionBase\\.prepareInput\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)Lorg\\/apache\\/http\\/HttpEntity\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.BHttpConnectionBase\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.BHttpConnectionBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.BHttpConnectionBase\\.fillInputBuffer\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.BHttpConnectionBase\\.awaitInput\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultHttpServerConnection\\.bind\\:\\(Ljava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpClientConnection\\.assertOpen\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpClientConnection\\.isResponseAvailable\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpClientConnection\\.sendRequestHeader\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpClientConnection\\.sendRequestEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntityEnclosingRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpClientConnection\\.doFlush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpClientConnection\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpClientConnection\\.receiveResponseHeader\\:\\(\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpClientConnection\\.receiveResponseEntity\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpServerConnection\\.bind\\:\\(Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpServerConnection\\.receiveRequestHeader\\:\\(\\)Lorg\\/apache\\/http\\/HttpRequest\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpServerConnection\\.receiveRequestEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntityEnclosingRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpServerConnection\\.sendResponseHeader\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpServerConnection\\.sendResponseEntity\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpServerConnection\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultHttpClientConnection\\.bind\\:\\(Ljava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.pool\\.BasicConnFactory\\.create\\:\\(Ljava\\/net\\/Socket\\;Lorg\\/apache\\/http\\/params\\/HttpParams\\;\\)Lorg\\/apache\\/http\\/HttpClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.pool\\.BasicConnFactory\\.create\\:\\(Lorg\\/apache\\/http\\/HttpHost\\;\\)Lorg\\/apache\\/http\\/HttpClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.pool\\.BasicConnFactory\\.create\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpClientConnectionFactory\\.createConnection\\:\\(Ljava\\/net\\/Socket\\;\\)Lorg\\/apache\\/http\\/impl\\/DefaultBHttpClientConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpClientConnectionFactory\\.createConnection\\:\\(Ljava\\/net\\/Socket\\;\\)Lorg\\/apache\\/http\\/HttpConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpClientConnection\\.bind\\:\\(Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpClientConnection\\.isResponseAvailable\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpClientConnection\\.sendRequestHeader\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpClientConnection\\.sendRequestEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntityEnclosingRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpClientConnection\\.receiveResponseHeader\\:\\(\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpClientConnection\\.receiveResponseEntity\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpClientConnection\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpServerConnection\\.assertOpen\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpServerConnection\\.receiveRequestHeader\\:\\(\\)Lorg\\/apache\\/http\\/HttpRequest\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpServerConnection\\.receiveRequestEntity\\:\\(Lorg\\/apache\\/http\\/HttpEntityEnclosingRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpServerConnection\\.doFlush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpServerConnection\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpServerConnection\\.sendResponseHeader\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.AbstractHttpServerConnection\\.sendResponseEntity\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.HttpResponseWriter\\.writeHeadLine\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.HttpResponseWriter\\.writeHeadLine\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionInputBuffer\\.fillBuffer\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionInputBuffer\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionInputBuffer\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionInputBuffer\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionInputBuffer\\.readLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionInputBuffer\\.lineFromLineBuffer\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionInputBuffer\\.lineFromReadBuffer\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionInputBuffer\\.appendDecoded\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionInputBuffer\\.handleDecodingResult\\:\\(Ljava\\/nio\\/charset\\/CoderResult\\;Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionInputBuffer\\.readLine\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.DefaultHttpRequestWriter\\.writeHeadLine\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.DefaultHttpRequestWriter\\.writeHeadLine\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.streamRead\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.fillBuffer\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.readLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.lineFromLineBuffer\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.lineFromReadBuffer\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.appendDecoded\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.handleDecodingResult\\:\\(Ljava\\/nio\\/charset\\/CoderResult\\;Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.readLine\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionInputBufferImpl\\.isDataAvailable\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ContentLengthOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ContentLengthOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ContentLengthOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ContentLengthOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ContentLengthOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SocketInputBuffer\\.\\<init\\>\\:\\(Ljava\\/net\\/Socket\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SocketInputBuffer\\.fillBuffer\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SocketInputBuffer\\.isDataAvailable\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.IdentityOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.IdentityOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.IdentityOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.IdentityOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.IdentityOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.IdentityInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.IdentityInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.IdentityInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.IdentityInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SocketOutputBuffer\\.\\<init\\>\\:\\(Ljava\\/net\\/Socket\\;ILorg\\/apache\\/http\\/params\\/HttpParams\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedOutputStream\\.\\<init\\>\\:\\(Lorg\\/apache\\/http\\/io\\/SessionOutputBuffer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedOutputStream\\.\\<init\\>\\:\\(Lorg\\/apache\\/http\\/io\\/SessionOutputBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedOutputStream\\.flushCache\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedOutputStream\\.flushCacheWithAppend\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedOutputStream\\.writeClosingChunk\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedOutputStream\\.finish\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ContentLengthInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ContentLengthInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ContentLengthInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ContentLengthInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ContentLengthInputStream\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ContentLengthInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.HttpRequestWriter\\.writeHeadLine\\:\\(Lorg\\/apache\\/http\\/HttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.HttpRequestWriter\\.writeHeadLine\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.DefaultHttpResponseWriter\\.writeHeadLine\\:\\(Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.DefaultHttpResponseWriter\\.writeHeadLine\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractMessageParser\\.parseHeaders\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;IILorg\\/apache\\/http\\/message\\/LineParser\\;\\)\\[Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractMessageParser\\.parseHeaders\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;IILorg\\/apache\\/http\\/message\\/LineParser\\;Ljava\\/util\\/List\\;\\)\\[Lorg\\/apache\\/http\\/Header\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractMessageParser\\.parseHead\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;\\)Lorg\\/apache\\/http\\/HttpMessage\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractMessageParser\\.parse\\:\\(\\)Lorg\\/apache\\/http\\/HttpMessage\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.DefaultHttpRequestParser\\.parseHead\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;\\)Lorg\\/apache\\/http\\/HttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.DefaultHttpRequestParser\\.parseHead\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;\\)Lorg\\/apache\\/http\\/HttpMessage\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionOutputBufferImpl\\.streamWrite\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionOutputBufferImpl\\.flushStream\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionOutputBufferImpl\\.flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionOutputBufferImpl\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionOutputBufferImpl\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionOutputBufferImpl\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionOutputBufferImpl\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionOutputBufferImpl\\.writeLine\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionOutputBufferImpl\\.writeLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionOutputBufferImpl\\.writeEncoded\\:\\(Ljava\\/nio\\/CharBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.SessionOutputBufferImpl\\.handleEncodingResult\\:\\(Ljava\\/nio\\/charset\\/CoderResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.HttpRequestParser\\.parseHead\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;\\)Lorg\\/apache\\/http\\/HttpMessage\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionOutputBuffer\\.flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionOutputBuffer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionOutputBuffer\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionOutputBuffer\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionOutputBuffer\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionOutputBuffer\\.writeLine\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionOutputBuffer\\.writeLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionOutputBuffer\\.writeEncoded\\:\\(Ljava\\/nio\\/CharBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractSessionOutputBuffer\\.handleEncodingResult\\:\\(Ljava\\/nio\\/charset\\/CoderResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.DefaultHttpResponseParser\\.parseHead\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.DefaultHttpResponseParser\\.parseHead\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;\\)Lorg\\/apache\\/http\\/HttpMessage\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedInputStream\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedInputStream\\.nextChunk\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedInputStream\\.getChunkSize\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedInputStream\\.parseTrailerHeaders\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.ChunkedInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractMessageWriter\\.writeHeadLine\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.AbstractMessageWriter\\.write\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException", 
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.io\\.HttpResponseParser\\.parseHead\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;\\)Lorg\\/apache\\/http\\/HttpMessage\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.entity\\.DisallowIdentityContentLengthStrategy\\.determineLength\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.entity\\.LaxContentLengthStrategy\\.determineLength\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.entity\\.StrictContentLengthStrategy\\.determineLength\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.entity\\.EntityDeserializer\\.doDeserialize\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;Lorg\\/apache\\/http\\/HttpMessage\\;\\)Lorg\\/apache\\/http\\/entity\\/BasicHttpEntity\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.entity\\.EntityDeserializer\\.deserialize\\:\\(Lorg\\/apache\\/http\\/io\\/SessionInputBuffer\\;Lorg\\/apache\\/http\\/HttpMessage\\;\\)Lorg\\/apache\\/http\\/HttpEntity\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.entity\\.EntitySerializer\\.doSerialize\\:\\(Lorg\\/apache\\/http\\/io\\/SessionOutputBuffer\\;Lorg\\/apache\\/http\\/HttpMessage\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.entity\\.EntitySerializer\\.serialize\\:\\(Lorg\\/apache\\/http\\/io\\/SessionOutputBuffer\\;Lorg\\/apache\\/http\\/HttpMessage\\;Lorg\\/apache\\/http\\/HttpEntity\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpServerConnectionFactory\\.createConnection\\:\\(Ljava\\/net\\/Socket\\;\\)Lorg\\/apache\\/http\\/impl\\/DefaultBHttpServerConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.impl\\.DefaultBHttpServerConnectionFactory\\.createConnection\\:\\(Ljava\\/net\\/Socket\\;\\)Lorg\\/apache\\/http\\/HttpConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionOutputBuffer\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionOutputBuffer\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionOutputBuffer\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionOutputBuffer\\.writeLine\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionOutputBuffer\\.writeLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionOutputBuffer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.HttpMessageParser\\.parse\\:\\(\\)Lorg\\/apache\\/http\\/HttpMessage\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.HttpMessageWriter\\.write\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionInputBuffer\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionInputBuffer\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionInputBuffer\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionInputBuffer\\.readLine\\:\\(Lorg\\/apache\\/http\\/util\\/CharArrayBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionInputBuffer\\.readLine\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.io\\.SessionInputBuffer\\.isDataAvailable\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.http.HttpException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.ContentLengthStrategy\\.determineLength\\:\\(Lorg\\/apache\\/http\\/HttpMessage\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.FileEntity\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.FileEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.FileEntity\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.InputStreamEntity\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.InputStreamEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.SerializableEntity\\.\\<init\\>\\:\\(Ljava\\/io\\/Serializable\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.SerializableEntity\\.createBytes\\:\\(Ljava\\/io\\/Serializable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.SerializableEntity\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.SerializableEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.nio.charset.UnsupportedCharsetException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.StringEntity\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/http\\/entity\\/ContentType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.StringEntity\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.nio.charset.UnsupportedCharsetException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.StringEntity\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.StringEntity\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.StringEntity\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.StringEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.StringEntity\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.HttpEntityWrapper\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.HttpEntityWrapper\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.HttpEntityWrapper\\.consumeContent\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.ContentProducer\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.BufferedHttpEntity\\.\\<init\\>\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.BufferedHttpEntity\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.BufferedHttpEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.ByteArrayEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.ByteArrayEntity\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.EntityTemplate\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.EntityTemplate\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.BasicHttpEntity\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.BasicHttpEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.nio.charset.UnsupportedCharsetException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.ContentType\\.create\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/http\\/entity\\/ContentType\\;"
 }, 
 {
  "exceptions": [
   "java.nio.charset.UnsupportedCharsetException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.ContentType\\.create\\:\\(Ljava\\/lang\\/String\\;\\[Lorg\\/apache\\/http\\/NameValuePair\\;\\)Lorg\\/apache\\/http\\/entity\\/ContentType\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException", 
   "java.nio.charset.UnsupportedCharsetException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.ContentType\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/http\\/entity\\/ContentType\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException", 
   "java.nio.charset.UnsupportedCharsetException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.ContentType\\.get\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)Lorg\\/apache\\/http\\/entity\\/ContentType\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException", 
   "java.nio.charset.UnsupportedCharsetException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.ContentType\\.getOrDefault\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)Lorg\\/apache\\/http\\/entity\\/ContentType\\;"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException", 
   "java.nio.charset.UnsupportedCharsetException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.ContentType\\.getLenientOrDefault\\:\\(Lorg\\/apache\\/http\\/HttpEntity\\;\\)Lorg\\/apache\\/http\\/entity\\/ContentType\\;"
 }, 
 {
  "exceptions": [
   "java.nio.charset.UnsupportedCharsetException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.ContentType\\.withParameters\\:\\(\\[Lorg\\/apache\\/http\\/NameValuePair\\;\\)Lorg\\/apache\\/http\\/entity\\/ContentType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.entity\\.AbstractHttpEntity\\.consumeContent\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.http.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.http\\.Header\\.getElements\\:\\(\\)\\[Lorg\\/apache\\/http\\/HeaderElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.getInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/commons\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.getInstance\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.getContextClassLoader\\:\\(\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.getLogConstructor\\:\\(\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.newInstance\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.getContextClassLoaderInternal\\:\\(\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.getSystemProperty\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.discoverLogImplementation\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.createLogFromClass\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)Lorg\\/apache\\/commons\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.getBaseClassLoader\\:\\(\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.handleFlawedHierarchy\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.impl\\.LogFactoryImpl\\.access\\$000\\:\\(\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "java.lang.LinkageError", 
   "java.lang.NoSuchMethodException", 
   "java.lang.SecurityException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogSource\\.setLogImplementation\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.LinkageError", 
   "java.lang.ExceptionInInitializerError", 
   "java.lang.NoSuchMethodException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogSource\\.setLogImplementation\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogFactory\\.getInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/commons\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogFactory\\.getInstance\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogFactory\\.getFactory\\:\\(\\)Lorg\\/apache\\/commons\\/logging\\/LogFactory\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogFactory\\.getLog\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/commons\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogFactory\\.getLog\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogFactory\\.getContextClassLoader\\:\\(\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogFactory\\.getContextClassLoaderInternal\\:\\(\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogFactory\\.directGetContextClassLoader\\:\\(\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogFactory\\.newFactory\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/apache\\/commons\\/logging\\/LogFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.logging\\.LogFactory\\.getSystemProperty\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecInputStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecOutputStream\\.flush\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BinaryCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BinaryCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.Hex\\.decodeHex\\:\\(\\[C\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.Hex\\.toDigit\\:\\(CI\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.Hex\\.decode\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.Hex\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.Hex\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.BinaryDecoder\\.decode\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.BinaryEncoder\\.encode\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.Decoder\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.digest\\:\\(Ljava\\/security\\/MessageDigest\\;Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.md2\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.md2Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.md5\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.md5Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha1\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha1Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha256\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha256Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha384\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha384Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha512\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha512Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.shaHex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.updateDigest\\:\\(Ljava\\/security\\/MessageDigest\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/security\\/MessageDigest\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.Encoder\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.AbstractCaverphone\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.AbstractCaverphone\\.isEncodeEqual\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.bm\\.BeiderMorseEncoder\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.bm\\.BeiderMorseEncoder\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.Caverphone\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.ColognePhonetic\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.DoubleMetaphone\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.MatchRatingApproachEncoder\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.Metaphone\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.Nysiis\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.RefinedSoundex\\.difference\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.RefinedSoundex\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.Soundex\\.difference\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.Soundex\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.SoundexUtils\\.difference\\:\\(Lorg\\/apache\\/commons\\/codec\\/StringEncoder\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.doDecoding\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.nio.charset.IllegalCharsetNameException", 
   "java.lang.IllegalArgumentException", 
   "java.nio.charset.UnsupportedCharsetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decodeQuotedPrintable\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decode\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.RFC1522Codec\\.encodeText\\:\\(Ljava\\/lang\\/String\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.RFC1522Codec\\.encodeText\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.RFC1522Codec\\.decodeText\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.RFC1522Codec\\.doEncoding\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.RFC1522Codec\\.doDecoding\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.decodeUrl\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.decode\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.Utils\\.digit16\\:\\(B\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.StringDecoder\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.StringEncoder\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.Level\\.clone\\:\\(\\)Lorg\\/apache\\/logging\\/log4j\\/Level\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.Level\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.FormattedMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.FormattedMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.LocalizedMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.LocalizedMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.MessageFormatMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.MessageFormatMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.ObjectMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.ObjectMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.StringFormattedMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.StringFormattedMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.InvalidObjectException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.ThreadDumpMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.status\\.StatusConsoleListener\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.Activator\\.start\\:\\(Lorg\\/osgi\\/framework\\/BundleContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.Activator\\.stop\\:\\(Lorg\\/osgi\\/framework\\/BundleContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.LoaderUtil\\.loadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.IllegalAccessException", 
   "java.lang.InstantiationException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.LoaderUtil\\.newInstanceOf\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.LoaderUtil\\.newCheckedInstanceOf\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.hamcrest\\.beans\\.PropertyUtil\\.getPropertyDescriptor\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/beans\\/PropertyDescriptor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.hamcrest\\.beans\\.PropertyUtil\\.propertyDescriptorsFor\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)\\[Ljava\\/beans\\/PropertyDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[Z\\[Z\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[B\\[B\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[C\\[C\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[S\\[S\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[I\\[I\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[J\\[J\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[D\\[DD\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[F\\[FF\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.internalArrayEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\.before\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatcher\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/TestWatcher\\;Lorg\\/junit\\/runner\\/Description\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatcher\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.before\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.create\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.validateFolderName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.createTemporaryFolderIn\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.RunRules\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatchman\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/TestWatchman\\;Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatchman\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/Verifier\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.handleException\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.failDueToMissingException\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.access\\$000\\:\\(Lorg\\/junit\\/rules\\/ExpectedException\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.access\\$200\\:\\(Lorg\\/junit\\/rules\\/ExpectedException\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\$ExpectedExceptionStatement\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ErrorCollector\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\.verify\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Timeout\\.createFailOnTimeoutStatement\\:\\(Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)Lorg\\/junit\\/runners\\/model\\/Statement\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Timeout\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/ExternalResource\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ErrorCollector\\.verify\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.AllTests\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.JUnit4\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/BlockJUnit4ClassRunner\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\$1\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.ParametersRunnerFactory\\.createRunnerForTestWithParameters\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTestUsingConstructorInjection\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTestUsingFieldInjection\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParametersFactory\\.createRunnerForTestWithParameters\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.getAnnotatedClasses\\:\\(Ljava\\/lang\\/Class\\;\\)\\[Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.MultipleFailureException\\.assertEmpty\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.addParent\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runners\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runners\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkField\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.Statement\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\.invokeExplosively\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\$1\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.getParametersRunnerFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runners\\/parameterized\\/ParametersRunnerFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.allParameters\\:\\(\\)Ljava\\/lang\\/Iterable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.getParametersMethod\\:\\(\\)Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError", 
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.createRunnersForParameters\\:\\(Ljava\\/lang\\/Iterable\\;Ljava\\/lang\\/String\\;Lorg\\/junit\\/runners\\/parameterized\\/ParametersRunnerFactory\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.createTestsForParameters\\:\\(Ljava\\/lang\\/Iterable\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.parametersMethodReturnedWrongType\\:\\(\\)Ljava\\/lang\\/Exception\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactory\\.createFilter\\:\\(Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFromFilterSpec\\:\\(Lorg\\/junit\\/runner\\/Request\\;Ljava\\/lang\\/String\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilter\\:\\(Ljava\\/lang\\/String\\;Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilter\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFactory\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/junit\\/runner\\/FilterFactory\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/FilterFactory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.\\<init\\>\\:\\(Ljava\\/io\\/ObjectInputStream\\$GetField\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.serialize\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.deserialize\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)Lorg\\/junit\\/runner\\/Result\\$SerializedForm\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filter\\.apply\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filterable\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filter\\$1\\.apply\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/Computer\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\$1\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.notification.StoppedByUserException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\.fireTestStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$1\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$2\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$2\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$3\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$3\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$4\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$4\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$SafeNotifier\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$5\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$6\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$6\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$7\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$7\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\.getSuite\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\.getRunner\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.TestMethod\\.invoke\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.TestClass\\.getConstructor\\:\\(\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.Fail\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.RunAfters\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.RunBefores\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.ExpectException\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.InvokeMethod\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.call\\:\\(\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.awaitStarted\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodValidator\\.assertValid\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit38ClassRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.SuiteMethod\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.SuiteMethod\\.testFromSuiteMethod\\:\\(Ljava\\/lang\\/Class\\;\\)Ljunit\\/framework\\/Test\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.FailedBefore"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodRoadie\\.runBefores\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.FailedBefore"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.ClassRoadie\\.runBefores\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodRoadie\\$1\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.model\\.ReflectiveCallable\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.model\\.ReflectiveCallable\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.ComparisonCriteria\\.arrayEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Throwables\\.rethrowAsException\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Exception\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Throwables\\.rethrow\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Classes\\.getClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.JUnit4Builder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AnnotatedBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AnnotatedBuilder\\.buildRunner\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.JUnit3Builder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AllDefaultPossibilitiesBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.NullBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.SuiteMethodBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxCore\\$1\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/max\\/MaxCore\\$1\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.max.CouldNotReadCoreException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.readHistory\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/junit\\/experimental\\/max\\/MaxHistory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.save\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.access\\$000\\:\\(Lorg\\/junit\\/experimental\\/max\\/MaxHistory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.ParallelComputer\\.getSuite\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.ParallelComputer\\.getRunner\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$2\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\;Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$2\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithIncompleteAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithCompleteAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.reportParameterizedError\\:\\(Ljava\\/lang\\/Throwable\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\$1\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\;Ljava\\/lang\\/Class\\;Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.PotentialAssignment\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.PotentialAssignment\\.getDescription\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\$MethodParameterValue\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\$MethodParameterValue\\.getDescription\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\.getValueSources\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\.addMultiPointMethods\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getActualValues\\:\\(II\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.potentialsForNextUnassigned\\:\\(\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getSupplier\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Lorg\\/junit\\/experimental\\/theories\\/ParameterSupplier\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.buildParameterSupplierFromClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/experimental\\/theories\\/ParameterSupplier\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getConstructorArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getMethodArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getAllArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getArgumentStrings\\:\\(Z\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.ParameterSupplier\\.getValueSources\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.CategoryFilterFactory\\.createFilter\\:\\(Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.CategoryFilterFactory\\.parseCategories\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.assertNoCategorizedDescendentsOfUncategorizeableParents\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.assertNoDescendantsHaveCategoryAnnotations\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.runners\\.Enclosed\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.runBare\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.runTest\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.setUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.tearDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapter\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestResult\\$1\\.\\<init\\>\\:\\(Ljunit\\/framework\\/TestResult\\;Ljunit\\/framework\\/TestCase\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestResult\\$1\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "junit\\.framework\\.TestSuite\\.getTestConstructor\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.Protectable\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "junit\\.runner\\.BaseTestRunner\\.savePreferences\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "junit\\.runner\\.BaseTestRunner\\.loadSuiteClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\.setUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\.tearDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\$1\\.\\<init\\>\\:\\(Ljunit\\/extensions\\/TestSetup\\;Ljunit\\/framework\\/TestResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\$1\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.textui\\.TestRunner\\.start\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljunit\\/framework\\/TestResult\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.textui\\.TestRunner\\.runSingleMethod\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)Ljunit\\/framework\\/TestResult\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.RT\\.getAgent\\:\\(\\)Lorg\\/jacoco\\/agent\\/rt\\/IAgent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.IAgent\\.dump\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.JmxRegistration\\.\\<init\\>\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/IAgent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.JmxRegistration\\.call\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.JmxRegistration\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.PreMain\\.premain\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/instrument\\/Instrumentation\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.PreMain\\.createRuntime\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/IRuntime\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.ClassFileDumper\\.dump\\:\\(Ljava\\/lang\\/String\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.Agent\\.getInstance\\:\\(\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/Agent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.Agent\\.dump\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.run\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.visitDumpCommand\\:\\(ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.createSocket\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.openFile\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.createServerSocket\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;\\)Ljava\\/net\\/ServerSocket\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.getInetAddress\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.IAgentOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.IAgentOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.IAgentOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.IllegalClassFormatException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.CoverageTransformer\\.transform\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/security\\/ProtectionDomain\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.vladium\\.emma\\.rt\\.RT\\.dumpCoverageData\\:\\(Ljava\\/io\\/File\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.vladium\\.emma\\.rt\\.RT\\.dumpCoverageData\\:\\(Ljava\\/io\\/File\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.jacoco.agent.rt.internal_28bab1d.core.data.IncompatibleExecDataVersionException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.read\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readBlock\\:\\(B\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readHeader\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readSessionInfo\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readExecutionData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataStore\\.put\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/data\\/ExecutionData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataStore\\.subtract\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/data\\/ExecutionData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionData\\.assertCompatibility\\:\\(JLjava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataWriter\\.\\<init\\>\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataWriter\\.writeHeader\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlReader\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlReader\\.readBlock\\:\\(B\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlReader\\.readDumpCommand\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\.createFor\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/lang\\/String\\;\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/IRuntime\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\.createFor\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/IRuntime\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.IRuntime\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.IRemoteCommandVisitor\\.visitDumpCommand\\:\\(ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlWriter\\.\\<init\\>\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlWriter\\.sendCmdOk\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlWriter\\.visitDumpCommand\\:\\(ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.AbstractRuntime\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.IllegalClassFormatException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\$1\\.transform\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/security\\/ProtectionDomain\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataOutput\\.writeVarInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataOutput\\.writeBooleanArray\\:\\(\\[Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataInput\\.readVarInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataInput\\.readBooleanArray\\:\\(\\)\\[Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.Pack200Streams\\$NoCloseInput\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.InputStreams\\.readFully\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.Pack200Streams\\.unpack\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.Pack200Streams\\.pack\\:\\(\\[BLjava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.ContentTypeDetector\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.ContentTypeDetector\\.determineType\\:\\(Ljava\\/io\\/InputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.ContentTypeDetector\\.readInt\\:\\(Ljava\\/io\\/InputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.instr\\.SignatureRemover\\.filterEntry\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.instr\\.InstrSupport\\.assertNotInstrumented\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrument\\:\\(\\[BLjava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrument\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrument\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentAll\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentZip\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.nextEntry\\:\\(Ljava\\/util\\/zip\\/ZipInputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/zip\\/ZipEntry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentGzip\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentPack200\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.copy\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.read\\:\\(Ljava\\/io\\/InputStream\\;\\[BLjava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassReader\\.readStream\\:\\(Ljava\\/io\\/InputStream\\;Z\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.jacoco.agent.rt.internal_28bab1d.asm.ClassTooLargeException", 
   "org.jacoco.agent.rt.internal_28bab1d.asm.MethodTooLargeException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassWriter\\.toByteArray\\:\\(\\)\\[B"
 }
]